  @Test
  void should_handle_parameterized_tests() throws URISyntaxException {
    SensorContextTester context = mockContext();
    when(javaResourceLocator.findResourceByClassName(anyString()))
      .thenAnswer(invocation -> {
        String className = (String) invocation.getArguments()[0];
        if (className.equals("org.foo.Junit4ParameterizedTest")
          || className.startsWith("org.foo.Junit5_0ParameterizedTest")
          || className.startsWith("org.foo.Junit5_7ParameterizedTest")) {
          return new TestInputFileBuilder("", className).build();
        }
        return null;
      });

    parser.collect(context, getDirs("junitParameterizedTests"), true);

    // class names are wrong in JUnit 4.X parameterized tests, with class name being the name of the test
    assertThat(context.measure(":org.foo.Junit4ParameterizedTest", CoreMetrics.TESTS).value()).isEqualTo(7);
    assertThat(context.measure(":org.foo.Junit4ParameterizedTest", CoreMetrics.TEST_EXECUTION_TIME).value()).isEqualTo(1);

    // class names and test names are wrong in JUnit 5.0, resulting in repeated/parameterized tests sharing the same name,
    // with class name being the name of the test (cf. https://github.com/junit-team/junit5/issues/1182)
    assertThat(context.measure(":org.foo.Junit5_0ParameterizedTest", CoreMetrics.TESTS).value()).isEqualTo(13);
    assertThat(context.measure(":org.foo.Junit5_0ParameterizedTest", CoreMetrics.TEST_EXECUTION_TIME).value()).isEqualTo(48);

    // test file with with JUnit 5.7.1
    assertThat(context.measure(":org.foo.Junit5_7ParameterizedTest", CoreMetrics.TESTS).value()).isEqualTo(12);
    assertThat(context.measure(":org.foo.Junit5_7ParameterizedTest", CoreMetrics.TEST_EXECUTION_TIME).value()).isEqualTo(150);
  }

