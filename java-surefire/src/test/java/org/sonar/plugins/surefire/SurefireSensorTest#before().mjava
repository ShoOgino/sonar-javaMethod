  @Before
  public void before() {
    project = mock(Project.class);
    fs = new DefaultFileSystem();
    fs.setBaseDir(new File("src/test/resource"));
    DefaultInputFile javaFile = new DefaultInputFile("src/org/foo/java");
    javaFile.setLanguage("java");
    fs.add(javaFile);
    perspectives = mock(ResourcePerspectives.class);

    javaResourceLocator = mock(JavaResourceLocator.class);
    when(javaResourceLocator.findResourceByClassName(anyString())).thenAnswer(new Answer<Resource>() {
      @Override
      public Resource answer(InvocationOnMock invocation) throws Throwable {
        return resource((String) invocation.getArguments()[0]);
      }
    });

    surefireSensor = new SurefireSensor(new SurefireJavaParser(perspectives, javaResourceLocator), mock(Settings.class), fs, pathResolver);
  }

