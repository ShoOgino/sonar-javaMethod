  private static void testModularJdkProjectWithJdk8(boolean useJdkHomeProperty) {
    String projectKey = "jvm-type-resolution-" + (useJdkHomeProperty ? "with" : "without") + "-jdkHome-property";

    SonarScanner scanner = SonarScanner.create(TestUtils.projectDir("jvm-type-resolution"))
      .setProperty("sonar.projectKey", projectKey)
      .setProperty("sonar.projectName", projectKey)
      .setProperty("sonar.projectVersion", "1.0-SNAPSHOT")
      .setProperty("sonar.sources", "src/main/java")
      .setProperty("sonar.java.binaries", "fakeoutput")
      .setProperty("sonar.java.source", "11");

    setupEnvironment(scanner, useJdkHomeProperty, false);

    TestUtils.provisionProject(ORCHESTRATOR, projectKey, projectKey, "java", "depends-on-jdk-types");
    ORCHESTRATOR.executeBuild(scanner);

    String componentKey = projectKey + ":src/main/java/foo/Main.java";
    String ruleKey = "java:S1481";
    String issueMessage = "Remove this unused \"unused\" local variable.";

    List<Issue> issues = TestUtils.issuesForComponent(ORCHESTRATOR, projectKey);
    assertThat(issues).extracting(Issue::getComponent, Issue::getRule, Issue::getMessage, Issue::getLine)
      .containsOnly(
        tuple(componentKey, ruleKey, issueMessage, 13));
  }

