    /**
     * <p>Invoke the appropriate <code>Action</code> for this request, and
     * cache the returned <code>ActionForward</code>.</p>
     *
     * @param actionCtx The <code>Context</code> for the current request
     * @return <code>false</code> if a <code>ForwardConfig</code> is returned,
     *         else <code>true</code> to complete processing
     * @throws Exception if thrown by the Action class and not declared by an
     *                   Exception Handler
     */
    public boolean execute(ActionContext actionCtx)
        throws Exception {
        // Look up the exception that was thrown
        Exception exception = actionCtx.getException();

        if (exception == null) {
            LOG.warn("No Exception found in ActionContext");

            return (true);
        }

        // Look up the local or global exception handler configuration
        ExceptionConfig exceptionConfig = null;
        ActionConfig actionConfig = actionCtx.getActionConfig();
        ModuleConfig moduleConfig = actionCtx.getModuleConfig();

        if (actionConfig != null) {
            if (LOG.isDebugEnabled()) {
                LOG.debug("See if actionConfig " + actionConfig
                    + " has an exceptionConfig for "
                    + exception.getClass().getName());
            }

            exceptionConfig = actionConfig.findException(exception.getClass());
        } else if (moduleConfig != null) {
            if (LOG.isDebugEnabled()) {
                LOG.debug("No action yet, see if moduleConfig " + moduleConfig
                    + " has an exceptionConfig "
                    + exception.getClass().getName());
            }

            exceptionConfig = moduleConfig.findException(exception.getClass());
        }

        // Handle the exception in the configured manner
        if (exceptionConfig == null) {
            LOG.warn("Unhandled exception", exception);
            throw exception;
        }

        ForwardConfig forwardConfig =
            handle(actionCtx, exception, exceptionConfig, actionConfig,
                moduleConfig);

        if (forwardConfig != null) {
            actionCtx.setForwardConfig(forwardConfig);

            return (false);
        } else {
            return (true);
        }
    }

