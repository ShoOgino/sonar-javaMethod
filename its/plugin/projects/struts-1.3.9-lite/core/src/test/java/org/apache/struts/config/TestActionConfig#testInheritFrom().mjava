    /**
     * Test a typical form bean configuration extension where various forwards
     * and exception handlers should be inherited from a base form. This
     * method checks all the subelements.
     */
    public void testInheritFrom()
        throws Exception {
        // create a basic subform
        ActionConfig subConfig = new ActionConfig();
        String subConfigPath = "subConfig";

        subConfig.setPath(subConfigPath);
        subConfig.setExtends("/base");

        // override success
        ForwardConfig forward = new ForwardConfig();

        forward.setName("success");
        forward.setPath("/newSuccess.jsp");
        forward.setRedirect(true);
        subConfig.addForwardConfig(forward);

        // add an exception handler
        ExceptionConfig handler = new ExceptionConfig();

        handler.setType("java.lang.NullPointerException");
        handler.setKey("msg.exception.npe");
        subConfig.addExceptionConfig(handler);

        // override arbitrary "label" property
        subConfig.setProperty("label", "sub");

        config.addActionConfig(subConfig);

        subConfig.inheritFrom(baseConfig);

        // check that our subConfig is still the one in the config
        assertSame("subConfig no longer in ModuleConfig", subConfig,
            config.findActionConfig("subConfig"));

        // check our configured sub config
        assertNotNull("Action type was not inherited", subConfig.getType());
        assertEquals("Wrong config path", subConfigPath, subConfig.getPath());
        assertEquals("Wrong config type", baseConfig.getType(),
            subConfig.getType());

        // check our forwards
        ForwardConfig[] forwards = subConfig.findForwardConfigs();

        assertEquals("Wrong forwards count", 2, forwards.length);

        forward = subConfig.findForwardConfig("success");
        assertNotNull("'success' forward was not found", forward);
        assertEquals("Wrong path for success", "/newSuccess.jsp",
            forward.getPath());

        forward = subConfig.findForwardConfig("failure");

        ForwardConfig origForward = baseConfig.findForwardConfig("failure");

        assertNotNull("'failure' forward was not inherited", forward);
        assertEquals("Wrong type for 'failure'", origForward.getPath(),
            forward.getPath());
        assertEquals("Arbitrary property not copied",
            origForward.getProperty("forwardCount"),
            forward.getProperty("forwardCount"));

        // check our exceptions
        ExceptionConfig[] handlers = subConfig.findExceptionConfigs();

        assertEquals("Wrong exception config count", 2, handlers.length);

        handler = subConfig.findExceptionConfig("java.sql.SQLException");

        ExceptionConfig origHandler =
            baseConfig.findExceptionConfig("java.sql.SQLException");

        assertNotNull("'SQLException' handler was not found", handler);
        assertEquals("Wrong key for 'SQLException'", origHandler.getKey(),
            handler.getKey());
        assertEquals("Arbitrary property not copied",
            origHandler.getProperty("exceptionCount"),
            handler.getProperty("exceptionCount"));

        handler =
            subConfig.findExceptionConfig("java.lang.NullPointerException");
        assertNotNull("'NullPointerException' handler disappeared", handler);

        // check the arbitrary properties
        String version = subConfig.getProperty("version");

        assertEquals("Arbitrary property 'version' wasn't inherited", "1a",
            version);

        String label = subConfig.getProperty("label");

        assertEquals("Arbitrary property 'label' shouldn't have changed",
            "sub", label);
    }

