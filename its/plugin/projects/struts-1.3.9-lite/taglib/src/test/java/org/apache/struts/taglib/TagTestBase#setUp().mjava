    /**
     * Helper method that creates/configures a basic configuration of Mock
     * Objects.
     *
     *
     * PageContext ServletConfig ServletContext HttpServletRequest HttpSession
     * HttpServletResponse
     *
     * "/myapp", "/foo", null, null,
     */
    public void setUp() {
        // -- default Module
        this.moduleConfig = new ModuleConfigImpl("");
        this.moduleConfig.addForwardConfig(new ForwardConfig("foo", "/bar.jsp",
                false));
        this.moduleConfig.addForwardConfig(new ForwardConfig("relative1",
                "relative.jsp", false));
        this.moduleConfig.addForwardConfig(new ForwardConfig("relative2",
                "relative.jsp", false));
        this.moduleConfig.addForwardConfig(new ForwardConfig("external",
                "http://struts.apache.org/", false));

        // -- module "/2"
        this.moduleConfig2 = new ModuleConfigImpl("/2");
        this.moduleConfig2.addForwardConfig(new ForwardConfig("foo",
                "/baz.jsp", false));
        this.moduleConfig2.addForwardConfig(new ForwardConfig("relative1",
                "relative.jsp", false));
        this.moduleConfig2.addForwardConfig(new ForwardConfig("relative2",
                "relative.jsp", false));
        this.moduleConfig2.addForwardConfig(new ForwardConfig("external",
                "http://struts.apache.org/", false));

        // -- module "/3"
        this.moduleConfig3 = new ModuleConfigImpl("/3");

        // -- configure the ServletContext
        this.servletContext = new MockServletContext();
        this.servletContext.setAttribute(Globals.MODULE_KEY, moduleConfig);
        this.servletContext.setAttribute(Globals.MODULE_KEY + "/2",
            moduleConfig2);
        this.servletContext.setAttribute(Globals.MODULE_KEY + "/3",
            moduleConfig3);

        // -- configure the ServletConfig
        this.servletConfig = new MockServletConfig();
        this.servletConfig.setServletContext(servletContext);

        // -- configure the request
        this.request = new MockHttpServletRequest(new MockHttpSession());

        pageContext =
            new MockPageContext(servletConfig, request,
                new MockHttpServletResponse());
    }

