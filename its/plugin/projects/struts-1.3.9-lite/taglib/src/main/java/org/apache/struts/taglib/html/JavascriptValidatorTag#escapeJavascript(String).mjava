    /**
     * <p>Backslash-escapes the following characters from the input string:
     * &quot;, &apos;, \, \r, \n.</p>
     *
     * <p>This method escapes characters that will result in an invalid
     * Javascript statement within the validator Javascript.</p>
     *
     * @param str The string to escape.
     * @return The string <code>s</code> with each instance of a double quote,
     *         single quote, backslash, carriage-return, or line feed escaped
     *         with a leading backslash.
     */
    private String escapeJavascript(String str) {
        if (str == null) {
            return null;
        }

        int length = str.length();

        if (length == 0) {
            return str;
        }

        // guess at how many chars we'll be adding...
        StringBuffer out = new StringBuffer(length + 4);

        // run through the string escaping sensitive chars
        for (int i = 0; i < length; i++) {
            char c = str.charAt(i);

            if ((c == '"') || (c == '\'') || (c == '\\') || (c == '\n')
                || (c == '\r')) {
                out.append('\\');
            }

            out.append(c);
        }

        return out.toString();
    }

