    /**
     * Compute a hyperlink URL based on the <code>forward</code>,
     * <code>href</code>, <code>action</code> or <code>page</code> parameter
     * that is not null. The returned URL will have already been passed to
     * <code>response.encodeURL()</code> for adding a session identifier.
     *
     * @param pageContext PageContext for the tag making this call
     * @param forward     Logical forward name for which to look up the
     *                    context-relative URI (if specified)
     * @param href        URL to be utilized unmodified (if specified)
     * @param page        Module-relative page for which a URL should be
     *                    created (if specified)
     * @param action      Logical action name for which to look up the
     *                    context-relative URI (if specified)
     * @param params      Map of parameters to be dynamically included (if
     *                    any)
     * @param anchor      Anchor to be dynamically included (if any)
     * @param redirect    Is this URL for a <code>response.sendRedirect()</code>?
     * @return URL with session identifier
     * @throws java.net.MalformedURLException if a URL cannot be created for
     *                                        the specified parameters
     */
    public String computeURLWithCharEncoding(PageContext pageContext,
        String forward, String href, String page, String action, String module,
        Map params, String anchor, boolean redirect, boolean useLocalEncoding)
        throws MalformedURLException {
        return computeURLWithCharEncoding(pageContext, forward, href, page,
            action, module, params, anchor, redirect, true, useLocalEncoding);
    }

