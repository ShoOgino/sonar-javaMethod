  private static List<String> getRuleKeys(Orchestrator orchestrator) {
    String json = new HttpRequestFactory(orchestrator.getServer().getUrl())
      .get("/api/rules/search", ImmutableMap.<String, Object>of("languages", LANGUAGE, "repositories", REPOSITORY_KEY, "ps", "500"));
    @SuppressWarnings("unchecked")
    Map<Object, Object> jsonObject = (Map<Object, Object>) JSONValue.parse(json);

    Preconditions.checkState((Long) jsonObject.get("total") < 500, "Only collect the 500 first rules. Requires pagination in case of more rules");

    @SuppressWarnings("unchecked")
    List<Map<Object, Object>> jsonRules = (List<Map<Object, Object>>) jsonObject.get("rules");

    return jsonRules.stream()
      .map(jsonRule -> (String) jsonRule.get("key"))
      .map(key -> key.split(":")[1])
      .collect(Collectors.toList());
  }

