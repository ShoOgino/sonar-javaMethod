  private void assertThatNoDifferences() throws IOException {

    List<File> expectedFiles = Lists.newArrayList(FileLocation.of("src/test/resources/expected").getFile().listFiles());
    List<File> actualFiles = Lists.newArrayList(actual.listFiles());
    Collections.sort(expectedFiles);
    Collections.sort(actualFiles);
    List<String> errors = new ArrayList<>();
    for (File actualFile : actualFiles) {
      File expectedFile = matchingExpectedFile(expectedFiles, actualFile);
      if(expectedFile == null) {
        errors.add("only in actual files "+actualFile.getName());
      } else {
        expectedFiles.remove(expectedFile);
        List<String> originalLines = FileUtils.readLines(expectedFile);
        Patch patch = DiffUtils.diff(originalLines, FileUtils.readLines(actualFile));
        if(!patch.getDeltas().isEmpty()) {
          errors.addAll(DiffUtils.generateUnifiedDiff(expectedFile.getName(), actualFile.getName(), originalLines, patch, 1));
        }
      }
    }
    //remaining expected file
    for (File expectedFile : expectedFiles) {
      errors.add("only in expected files "+expectedFile.getName());
    }
    assertThat(errors).as(Joiner.on("\n").join(errors)).isEmpty();
  }

