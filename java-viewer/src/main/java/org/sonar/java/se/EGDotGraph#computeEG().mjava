  private void computeEG() {
    JavaFileScannerContext mockContext = mock(JavaFileScannerContext.class);
    when(mockContext.getTree()).thenReturn(cut);
    when(mockContext.getSemanticModel()).thenReturn(semanticModel);
    SymbolicExecutionVisitor sev = new SymbolicExecutionVisitor(Lists.newArrayList()) {
      @Override
      public void execute(MethodTree methodTree) {
        this.context = mockContext;
        super.execute(methodTree);
      }
    };
    ExplodedGraphWalker.ExplodedGraphWalkerFactory egwFactory = new ExplodedGraphWalker.ExplodedGraphWalkerFactory(Collections.emptyList());
    ExplodedGraphWalker walker = egwFactory.createWalker(sev.behaviorCache, semanticModel);
    walker.visitMethod(methodToAnalyze, new MethodBehavior(methodToAnalyze.symbol()));

    this.explodedGraph = walker.getExplodedGraph();
    this.behaviorCache = sev.behaviorCache;
  }

