  private Set<List<JavaFileScannerContext.Location>> run(final ExplodedGraph.Node node, @Nullable final Symbol trackSymbol) {
    Set<List<JavaFileScannerContext.Location>> flows = new HashSet<>();
    Deque<ExecutionPath> workList = new ArrayDeque<>();

    node.edges().forEach(e -> workList.push(startPath(e, trackSymbol)));
    while (!workList.isEmpty()) {
      ExecutionPath path = workList.pop();
      if (path.finished) {
        flows.add(path.flow);
      } else {
        path.lastEdge.parent.edges().stream()
          .filter(path::notVisited)
          .map(path::addEdge)
          .forEach(workList::push);
      }
    }
    return flows;
  }

