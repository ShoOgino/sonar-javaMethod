    private void reportIssue(Tree tree, SymbolicValue denominator) {
      ExpressionTree expression = getDenominator(tree);
      String operation = tree.is(Tree.Kind.REMAINDER, Tree.Kind.REMAINDER_ASSIGNMENT) ? "modulation" : "division";
      String expressionName;
      String flowMessage;
      if (expression.is(Tree.Kind.IDENTIFIER)) {
        String name = ((IdentifierTree) expression).name();
        expressionName = "'" + name + "'";
        flowMessage = expressionName + " is divided by zero";
      } else {
        expressionName = "this expression";
        flowMessage = "this expression contains division by zero";
      }
      List<Class<? extends Constraint>> domains = Lists.newArrayList(ZeroConstraint.class);
      Set<List<JavaFileScannerContext.Location>> flows = FlowComputation.flow(context.getNode(), denominator, domains).stream()
        .map(f -> ImmutableList.<JavaFileScannerContext.Location>builder()
          .add(new JavaFileScannerContext.Location(flowMessage, tree))
          .addAll(f)
          .build())
        .collect(Collectors.toSet());
      context.reportIssue(expression, DivisionByZeroCheck.this, "Make sure " + expressionName + " can't be zero before doing this " + operation + ".",
        flows);
    }

