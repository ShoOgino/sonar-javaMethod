    private Set<List<JavaFileScannerContext.Location>> flowFromYields(ExplodedGraph.Edge edge) {
      Set<MethodYield> methodYields = edge.yields();
      if (methodYields.isEmpty()) {
        // return one flow with no elements, nothing will be added to the flow of the current path
        // but this is necessary so path is returned in #addEdge and stays in the worklist in #run
        return ImmutableSet.of(ImmutableList.of());
      }

      List<Integer> argumentIndices = correspondingArgumentIndices(symbolicValues, edge.parent);
      SymbolicValue returnSV = edge.child.programState.peekValue();
      if (symbolicValues.contains(returnSV)) {
        // to retrieve flow for return value
        argumentIndices.add(-1);
      }
      return methodYields.stream()
        .map(y -> y.flow(argumentIndices, domains))
        .flatMap(Set::stream)
        .collect(Collectors.toSet());
    }

