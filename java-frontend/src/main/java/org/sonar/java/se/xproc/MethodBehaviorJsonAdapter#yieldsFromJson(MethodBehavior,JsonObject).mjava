  private static MethodYield yieldsFromJson(MethodBehavior behavior, JsonObject methodYield) {
    MethodYield result;
    if (methodYield.has(JSON_THROWN_EXCEPTION)) {
      ExceptionalYield exceptionalYield = new ExceptionalYield(behavior);
      exceptionalYield.setExceptionType(methodYield.get(JSON_THROWN_EXCEPTION).getAsString());
      result = exceptionalYield;
    } else {
      HappyPathYield happyPathYield = new HappyPathYield(behavior);
      happyPathYield.setResult(methodYield.get(JSON_RESULT_INDEX).getAsInt(), constraintsByDomainFromJson(methodYield.get(JSON_RESULT_CONSTRAINTS)));
      result = happyPathYield;
    }
    result.parametersConstraints.addAll(constraintsFromJson(behavior.methodArity(), methodYield.get(JSON_PARAMETERS_CONSTRAINTS).getAsJsonArray()));
    return result;
  }

