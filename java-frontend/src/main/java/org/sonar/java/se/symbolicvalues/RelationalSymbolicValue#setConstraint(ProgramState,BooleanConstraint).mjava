  @Override
  public List<ProgramState> setConstraint(ProgramState initialProgramState, BooleanConstraint booleanConstraint) {
    if (booleanConstraint == BooleanConstraint.FALSE) {
      return inverse().setConstraint(initialProgramState, BooleanConstraint.TRUE);
    }
    Set<RelationalSymbolicValue> knownRelations = knownRelations(initialProgramState);
    if(knownRelations.contains(this)) {
      return Collections.singletonList(initialProgramState);
    }
    Set<RelationalSymbolicValue> newRelations = new HashSet<>();
    newRelations.add(this);
    newRelations.addAll(transitiveRelations(knownRelations));

    boolean unfulfilled = newRelations.stream()
      .map(r -> r.resolveRelationState(knownRelations))
      .anyMatch(RelationState.UNFULFILLED::equals);

    if (unfulfilled) {
      return ImmutableList.of();
    }
    return getNewProgramStates(initialProgramState, newRelations);
  }

