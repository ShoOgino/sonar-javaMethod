  @Override
  public ProgramState checkPostStatement(CheckerContext context, Tree syntaxNode) {
    // TODO handle float and double
    switch (syntaxNode.kind()) {
      case INT_LITERAL:
        return handleNumericalLiteral(context, LiteralUtils.intLiteralValue((ExpressionTree) syntaxNode));
      case LONG_LITERAL:
        return handleNumericalLiteral(context, LiteralUtils.longLiteralValue((ExpressionTree) syntaxNode));
      case UNARY_MINUS:
      case UNARY_PLUS:
        return handleNumericalLiteral(context, (UnaryExpressionTree) syntaxNode);
      case IDENTIFIER:
        return handleNumericalConstant(context, (IdentifierTree) syntaxNode);
      case METHOD_INVOCATION:
        return handleMinMaxInvocation(context, (MethodInvocationTree) syntaxNode);
      default:
        return context.getState();
    }
  }

