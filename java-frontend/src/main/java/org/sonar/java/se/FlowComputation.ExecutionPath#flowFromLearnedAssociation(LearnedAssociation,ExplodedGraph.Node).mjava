    List<JavaFileScannerContext.Location> flowFromLearnedAssociation(LearnedAssociation learnedAssociation, ExplodedGraph.Node node) {
      ImmutableList.Builder<JavaFileScannerContext.Location> flowBuilder = ImmutableList.builder();
      ProgramState programState = node.programState;
      Preconditions.checkState(programState != null, "Learned association with null state in parent node of the edge.");
      Symbol rhsSymbol = symbolFromStack(learnedAssociation.symbolicValue(), programState);
      if (rhsSymbol != null) {
        flowBuilder.add(location(node, String.format(IMPLIES_SAME_VALUE, learnedAssociation.symbol().name(), rhsSymbol.name())));
      } else {
        PMap<Class<? extends Constraint>, Constraint> allConstraints = programState.getConstraints(learnedAssociation.symbolicValue());
        Collection<Constraint> constraints = filterByDomains(allConstraints);
        for (Constraint constraint : constraints) {
          String symbolName = learnedAssociation.symbol().name();
          String msg;
          if ((ObjectConstraint.NULL == constraint && assigningNullFromTernary(node))
            || (assigningFromMethodInvocation(node) && assignedFromYieldWithUncertainResult(constraint, node))) {
            msg = IMPLIES_CAN_BE_MSG;
          } else {
            msg = IMPLIES_IS_MSG;
          }
          flowBuilder.add(location(node, String.format(msg, symbolName, constraint.valueAsString())));
        }
      }
      return flowBuilder.build();
    }

