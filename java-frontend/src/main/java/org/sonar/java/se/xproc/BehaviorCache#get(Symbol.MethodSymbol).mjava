  @CheckForNull
  public MethodBehavior get(Symbol.MethodSymbol symbol) {
    if (!behaviors.containsKey(symbol)) {
      if (isRequireNonNullMethod(symbol)) {
        behaviors.put(symbol, createRequireNonNullBehavior(symbol));
      } else if (isObjectsNullMethod(symbol)) {
        behaviors.put(symbol, createIsNullBehavior(symbol));
      } else if (isStringUtilsMethod(symbol)) {
        MethodBehavior stringUtilsMethod = createStringUtilMethodBehavior(symbol);
        if (stringUtilsMethod != null) {
          behaviors.put(symbol, stringUtilsMethod);
        }
      } else if (isGuavaPrecondition(symbol)) {
        behaviors.put(symbol, createGuavaPreconditionsBehavior(symbol, "checkNotNull".equals(symbol.name())));
      } else if (isCollectionUtilsIsEmpty(symbol)) {
        behaviors.put(symbol, createCollectionUtilsBehavior(symbol));
      } else if (isSpringIsNull(symbol)) {
        behaviors.put(symbol, createRequireNullBehavior(symbol));
      } else {
        MethodTree declaration = symbol.declaration();
        if (declaration != null && SymbolicExecutionVisitor.methodCanNotBeOverriden(symbol)) {
          sev.execute(declaration);
        }
      }
    }
    return behaviors.get(symbol);
  }

