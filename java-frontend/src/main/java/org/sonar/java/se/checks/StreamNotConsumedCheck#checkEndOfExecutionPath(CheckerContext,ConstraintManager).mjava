  @Override
  public void checkEndOfExecutionPath(CheckerContext context, ConstraintManager constraintManager) {
    ProgramState state = context.getState();
    List<SymbolicValue> notConsumed = state.getValuesWithConstraints(NOT_CONSUMED);
    notConsumed.forEach(sv -> {
      Set<Flow> flows = FlowComputation.flow(context.getNode(), Collections.singleton(sv),
        NOT_CONSUMED::equals, NOT_CONSUMED::equals,
        Collections.singletonList(StreamConsumedCheck.StreamPipelineConstraint.class),
        Collections.emptySet());
      Flow flow = flows.iterator().next();
      JavaFileScannerContext.Location location = flow.elements().get(0);
      reportIssue(location.syntaxNode, "Refactor the code so this stream pipeline is used.");
    });
  }

