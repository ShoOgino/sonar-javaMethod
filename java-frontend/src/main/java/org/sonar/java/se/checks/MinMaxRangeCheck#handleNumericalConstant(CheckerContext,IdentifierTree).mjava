  private static ProgramState handleNumericalConstant(CheckerContext context, IdentifierTree syntaxNode) {
    ProgramState programState = context.getState();
    Symbol identifier = syntaxNode.symbol();
    if (!isNumericalConstant(identifier)) {
      return programState;
    }
    SymbolicValue constant = programState.getValue(identifier);
    if (constant == null) {
      return programState;
    }
    NumericalConstraint numericalConstraint = programState.getConstraint(constant, NumericalConstraint.class);
    if (numericalConstraint == null) {
      return ((JavaSymbol.VariableJavaSymbol) identifier).constantValue()
        .filter(Number.class::isInstance)
        .map(Number.class::cast)
        .map(value -> programState.addConstraint(constant, new NumericalConstraint(value)))
        .orElse(programState);
    }
    return programState;
  }

