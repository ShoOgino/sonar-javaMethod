  private void reportIssue(ExplodedGraph.Node node, ExceptionalCheckBasedYield yield, SECheck check) {
    MethodInvocationTree mit = (MethodInvocationTree) node.programPoint.syntaxTree();
    ExpressionTree methodSelect = mit.methodSelect();
    String methodName = mit.symbol().name();

    Tree reportTree = methodSelect;
    if (methodSelect.is(Tree.Kind.MEMBER_SELECT)) {
      reportTree = ((MemberSelectExpressionTree) methodSelect).identifier();
    }

    JavaFileScannerContext.Location methodInvocationMessage;
    int parameterCausingExceptionIndex = yield.parameterCausingExceptionIndex();
    IdentifierTree identifierTree = FlowComputation.getArgumentIdentifier(mit, parameterCausingExceptionIndex);
    if (identifierTree != null) {
      methodInvocationMessage = new JavaFileScannerContext.Location(String.format("'%s' is passed to '%s()'.", identifierTree.name(), methodName), identifierTree);
    } else {
      methodInvocationMessage = new JavaFileScannerContext.Location(String.format("'%s()' is invoked.", methodName), reportTree);
    }

    Flow argumentChangingNameFlows = flowsForArgumentsChangingName(yield, mit);
    Set<Flow> argumentsFlows = flowsForMethodArguments(node, mit, parameterCausingExceptionIndex, FlowComputation.MAX_REPORTED_FLOWS);
    Set<Flow> exceptionFlows = yield.exceptionFlows(FlowComputation.MAX_REPORTED_FLOWS);

    Set<Flow> flows = new HashSet<>();
    for (Flow argumentFlow : argumentsFlows) {
      for (Flow exceptionFlow : exceptionFlows) {
        flows.add(Flow.builder()
          .addAll(exceptionFlow)
          .addAll(argumentChangingNameFlows)
          .add(methodInvocationMessage)
          .addAll(argumentFlow)
          .build());
      }
    }

    check.reportIssue(reportTree, String.format(message, methodName), Collections.unmodifiableSet(flows));
  }

