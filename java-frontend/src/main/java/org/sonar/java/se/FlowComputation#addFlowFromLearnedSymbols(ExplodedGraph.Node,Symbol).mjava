  @Nullable
  private Symbol addFlowFromLearnedSymbols(ExplodedGraph.Node currentNode, @Nullable Symbol trackSymbol) {
    ExplodedGraph.Node parent = currentNode.parent();
    if (trackSymbol == null || parent == null) {
      return null;
    }
    Optional<LearnedAssociation> learnedAssociation = currentNode.learnedAssociations()
      .filter(lv -> lv.symbol().equals(trackSymbol))
      .findFirst();
    if (learnedAssociation.isPresent()) {
      LearnedAssociation la = learnedAssociation.get();
      for (Class<? extends Constraint> domain : domains) {
        Constraint constraint = parent.programState.getConstraint(la.symbolicValue(), domain);
        if(constraint != null) {
          flow.add(location(parent, String.format("'%s' is assigned %s.", la.symbol().name(), constraint.valueAsString())));
        }
      }
      return parent.programState.getLastEvaluated();
    }
    return trackSymbol;
  }

