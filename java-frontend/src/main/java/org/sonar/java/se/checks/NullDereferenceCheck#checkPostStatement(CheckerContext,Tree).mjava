  @Override
  public ProgramState checkPostStatement(CheckerContext context, Tree syntaxNode) {
    NullDereferenceIssue issue = null;
    if (syntaxNode.is(Tree.Kind.SWITCH_STATEMENT)) {
      int numberOfCaseValues = ((SwitchStatementTree) syntaxNode)
        .cases()
        .stream()
        .flatMap(c -> c.labels().stream())
        .map(CaseLabelTree::expressions)
        .mapToInt(List::size)
        .sum();
      SymbolicValue conditionSymbolicValue = context.getState().peekValue(numberOfCaseValues);

      if (context.getConstraintManager().isNull(context.getState(), conditionSymbolicValue)) {
        issue = new NullDereferenceIssue(context.getNode(), conditionSymbolicValue, syntaxNode);
      }
    }

    if (syntaxNode.is(Tree.Kind.THROW_STATEMENT)) {
      SymbolicValue peek = context.getState().peekValue();
      if (peek != null && context.getConstraintManager().isNull(context.getState(), peek)) {
        issue = new NullDereferenceIssue(context.getNode(), peek, syntaxNode);
      }
    }

    if (issue != null) {
      detectedIssues.peek().add(issue);
      context.createSink();
      return context.getState();
    }

    List<ProgramState> programStates = setNullConstraint(context, syntaxNode);
    for (ProgramState programState : programStates) {
      context.addTransition(programState);
    }
    return context.getState();
  }

