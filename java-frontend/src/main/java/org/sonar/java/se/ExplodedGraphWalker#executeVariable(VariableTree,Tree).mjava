  private void executeVariable(VariableTree variableTree, @Nullable Tree terminator) {
    ExpressionTree initializer = variableTree.initializer();
    if (initializer == null) {
      SymbolicValue sv = null;
      Type variableType = variableTree.symbol().type();
      if (terminator != null && terminator.is(Tree.Kind.FOR_EACH_STATEMENT)) {
        sv = constraintManager.createSymbolicValue(variableTree);
      } else if (variableType.is("boolean")) {
        sv = SymbolicValue.FALSE_LITERAL;
      } else if (variableTree.parent().is(Tree.Kind.CATCH)) {
        sv = getCaughtException(variableType);
        programState = programState.addConstraint(sv, ObjectConstraint.notNull());
      } else if (!variableType.isPrimitive()) {
        sv = SymbolicValue.NULL_LITERAL;
      }
      if (sv != null) {
        programState = programState.put(variableTree.symbol(), sv);
      }
    } else {
      ProgramState.Pop unstack = programState.unstackValue(1);
      programState = unstack.state;
      programState = programState.put(variableTree.symbol(), unstack.values.get(0));
    }
  }

