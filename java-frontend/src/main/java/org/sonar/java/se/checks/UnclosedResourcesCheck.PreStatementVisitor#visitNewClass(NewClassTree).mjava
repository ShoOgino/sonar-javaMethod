    @Override
    public void visitNewClass(NewClassTree syntaxNode) {
      List<SymbolicValue> arguments = new ArrayList<>(programState.peekValues(syntaxNode.arguments().size()));
      Collections.reverse(arguments);
      if (isOpeningResource(syntaxNode)) {
        Iterator<SymbolicValue> iterator = arguments.iterator();
        for (ExpressionTree argument : syntaxNode.arguments()) {
          if (!iterator.hasNext()) {
            throw new IllegalStateException("Mismatch between declared constructor arguments and argument values!");
          }
          final SymbolicValue value = iterator.next();
          if (isCloseable(argument) && !isNestedNewResourceCreation(argument)) {
            constraintManager.setValueFactory(new WrappedValueFactory(value));
            break;
          } else {
            closeResource(value);
          }
        }
      } else {
        closeArguments(syntaxNode.arguments());
      }
    }

