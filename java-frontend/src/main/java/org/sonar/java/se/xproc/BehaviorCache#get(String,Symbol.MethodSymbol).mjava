  private MethodBehavior get(String signature, @Nullable Symbol.MethodSymbol symbol) {
    if (!behaviors.containsKey(signature)) {
      if (isRequireNonNullMethod(signature)
        || isObjectsNullMethod(signature)
        || isGuavaPrecondition(signature)
        || isCollectionUtilsIsEmpty(signature)
        || isSpringIsNull(signature)
        || isStringUtilsMethod(signature)) {
        return new BytecodeEGWalker(this).getMethodBehavior(signature, classLoader);
      } else if(symbol != null) {
        MethodTree declaration = symbol.declaration();
        if (declaration != null && SymbolicExecutionVisitor.methodCanNotBeOverriden(symbol)) {
          sev.execute(declaration);
        }
      }
    }
    return behaviors.get(signature);
  }

