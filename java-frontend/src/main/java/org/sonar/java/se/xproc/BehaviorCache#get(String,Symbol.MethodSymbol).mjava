  @CheckForNull
  private MethodBehavior get(String signature, @Nullable Symbol.MethodSymbol symbol) {
    MethodBehavior mb = behaviors.get(signature);
    if(mb != null) {
      return mb;
    }
    if (symbol != null) {
      MethodTree declaration = symbol.declaration();
      if (SymbolicExecutionVisitor.methodCanNotBeOverriden(symbol) && declaration != null) {
        sev.execute(declaration);
        return behaviors.get(signature);
      }
    }

    // disabled x-file analysis, behavior based on source code can still be used
    if (!crossFileEnabled && !isKnownSignature(signature)) {
      return null;
    }

    if (!bytecodeBehaviors.containsKey(signature)) {
      new BytecodeEGWalker(this, semanticModel).getMethodBehavior(signature, classLoader);
    }
    return bytecodeBehaviors.get(signature);
  }

