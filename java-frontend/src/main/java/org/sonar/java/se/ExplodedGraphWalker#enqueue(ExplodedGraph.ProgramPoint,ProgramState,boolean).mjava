  public void enqueue(ExplodedGraph.ProgramPoint programPoint, ProgramState programState, boolean exitPath) {
    int nbOfExecution = programState.numberOfTimeVisited(programPoint);
    if (nbOfExecution > MAX_EXEC_PROGRAM_POINT) {
      debugPrint(programState);
      return;
    }
    checkExplodedGraphTooBig(programState);
    ProgramState ps = programState.visitedPoint(programPoint, nbOfExecution + 1);
    ps.lastEvaluated = programState.getLastEvaluated();
    ExplodedGraph.Node cachedNode = explodedGraph.getNode(programPoint, ps);
    if (!cachedNode.isNew && exitPath == cachedNode.exitPath) {
      // has been enqueued earlier
      return;
    }
    cachedNode.exitPath = exitPath;
    if(node != null) {
      cachedNode.happyPath = node.happyPath;
    }
    cachedNode.setParent(node);
    workList.addFirst(cachedNode);
  }

