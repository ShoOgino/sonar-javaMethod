    private boolean presenceHasNotBeenChecked(ProgramState.SymbolicValueSymbol symbolicValueSymbol) {
      Constraint optionalConstraint = programState.getConstraint(symbolicValueSymbol.symbolicValue(), OptionalConstraint.class);
      // optionalConstraint can be null, meaning that the symbolic value was never checked. For local variable or arguments,
      // we can safely consider it as not checked, but for fields, the check could be done before, we return true only if we are sure it's not present.
      // In addition, SE engine reset symbolic value for field when we have a local method invocation, we don't want an issue in this case as well.
      Symbol symbol = symbolicValueSymbol.symbol();
      if (symbol != null && ProgramState.isField(symbol)) {
        return optionalConstraint == OptionalConstraint.NOT_PRESENT;
      }
      return optionalConstraint != OptionalConstraint.PRESENT;
    }

