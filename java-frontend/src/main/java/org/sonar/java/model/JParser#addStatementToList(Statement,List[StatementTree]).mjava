  private void addStatementToList(Statement node, List<StatementTree> statements) {
    if (node.getNodeType() == ASTNode.VARIABLE_DECLARATION_STATEMENT) {
      VariableDeclarationStatement e = (VariableDeclarationStatement) node;
      TypeTree tType = convertType(e.getType());
      ModifiersTreeImpl modifiers = convertModifiers(e.modifiers());
      for (int i = 0; i < e.fragments().size(); i++) {
        VariableDeclarationFragment fragment = (VariableDeclarationFragment) e.fragments().get(i);
        VariableTreeImpl t = new VariableTreeImpl(
          convertSimpleName(fragment.getName())
        ).completeType(
          applyExtraDimensions(tType, fragment.extraDimensions())
        ).completeModifiers(
          modifiers
        );
        if (fragment.getInitializer() != null) {
          t.completeTypeAndInitializer(
            t.type(),
            firstTokenAfter(fragment.getName(), TerminalTokens.TokenNameEQUAL),
            convertExpression(fragment.getInitializer())
          );
        }
        t.setEndToken(
          firstTokenAfter(fragment, i < e.fragments().size() - 1 ? TerminalTokens.TokenNameCOMMA : TerminalTokens.TokenNameSEMICOLON)
        );
        statements.add(t);
      }
    } else if (node.getNodeType() == ASTNode.BREAK_STATEMENT && node.getLength() == 0) {
      // skip implicit break-statement
    } else {
      statements.add(convertStatement(node));
    }
  }

