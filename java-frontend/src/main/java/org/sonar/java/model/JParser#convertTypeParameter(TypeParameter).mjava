  private TypeParameterTree convertTypeParameter(TypeParameter e) {
    IdentifierTreeImpl t = convertSimpleName(e.getName());
    // TODO why ECJ uses IExtendedModifier here instead of Annotation ?
    t.complete(convertAnnotations(e.modifiers()));
    if (e.typeBounds().isEmpty()) {
      return new TypeParameterTreeImpl(t);
    } else {
      BoundListTreeImpl bounds = new BoundListTreeImpl(new ArrayList<>(), new ArrayList<>());
      for (Object o : e.typeBounds()) {
        bounds.add(convertType((Type) o));
      }
      return new TypeParameterTreeImpl(
        firstTokenAfter(e.getName(), TerminalTokens.TokenNameextends),
        bounds
      ).complete(
        t
      );
    }
  }

