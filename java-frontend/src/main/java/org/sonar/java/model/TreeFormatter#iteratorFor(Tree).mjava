  private static Iterator<? extends Tree> iteratorFor(Tree node) {
    if (node.kind() == Tree.Kind.TOKEN) {
      return ((SyntaxToken) node).trivias().iterator();
    }
    if (node.kind() == Tree.Kind.INFERED_TYPE || node.kind() == Tree.Kind.TRIVIA) {
      // getChildren throws exception in this case
      return Collections.emptyIterator();
    }
    final Iterator<Tree> iterator = ((JavaTree) node).getChildren().iterator();
    return Iterators.filter(
      iterator,
      child -> child != null
        && /* not empty list: */ !(child.is(Tree.Kind.LIST) && ((List) child).isEmpty())
    );
  }

