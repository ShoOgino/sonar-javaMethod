  private Symbol variableOwner(IVariableBinding variableBinding) {
    IMethodBinding declaringMethod = variableBinding.getDeclaringMethod();
    if (declaringMethod != null) {
      // local variable
      return sema.methodSymbol(declaringMethod);
    }
    ITypeBinding declaringClass = variableBinding.getDeclaringClass();
    if (declaringClass != null) {
      // field
      return sema.typeSymbol(declaringClass);
    }
    Tree node = sema.declarations.get(variableBinding);
    if (node == null) {
      // array.length
      return Symbols.unknownSymbol;
    }
    do {
      node = node.parent();
      switch (node.kind()) {
        case CLASS:
        case ENUM:
          // variable declaration in a static or instance initializer
          return sema.typeSymbol(((ClassTreeImpl) node).typeBinding);
        case METHOD:
        case CONSTRUCTOR:
          // local variable declaration in recovered method
          // and recovered methods do not have bindings
          return Symbols.unknownMethodSymbol;
        default:
          // continue exploring parent
          break;
      }
    } while (true);
  }

