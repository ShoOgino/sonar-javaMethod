  private void enqueueExceptionHandlers(Type exceptionType, ProgramState ps) {
    List<BytecodeCFG.Block> blocksCatchingException = programPosition.block.successors().stream()
        .map(b -> (BytecodeCFG.Block) b)
        .filter(BytecodeCFG.Block::isCatchBlock)
        .filter(b -> isExceptionHandledByBlock(exceptionType, b))
        .collect(Collectors.toList());
    if (!blocksCatchingException.isEmpty()) {
      blocksCatchingException.forEach(b -> enqueue(new ProgramPoint(b), ps));
      if (isCatchExhaustive(exceptionType, blocksCatchingException)) {
        return;
      }
    }
    // exception was not handled or was handled only partially, enqueue exit block with exceptional SV
    Preconditions.checkState(ps.peekValue() instanceof SymbolicValue.ExceptionalSymbolicValue,
        "Exception shall be on top of the stack");
    ps.storeExitValue();
    enqueue(new ProgramPoint(exitBlock), ps);
  }

