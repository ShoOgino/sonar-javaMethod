    private static ProgramState handleMultiply(ProgramState previousState, ProgramState currentState) {
      List<SymbolicValue> operands = previousState.peekValues(2);
      SymbolicValue result = currentState.peekValue();
      SymbolicValue op1 = operands.get(0);
      SymbolicValue op2 = operands.get(1);
      boolean op1Zero = isZero(currentState, op1);
      if (op1Zero || isZero(currentState, op2)) {
        // Reuse zero
        return currentState.unstackValue(1).state.stackValue(op1Zero ? op1 : op2);
      }
      return currentState.removeConstraintsOnDomain(result, BooleanConstraint.class).addConstraint(result, ZeroConstraint.NON_ZERO);
    }

