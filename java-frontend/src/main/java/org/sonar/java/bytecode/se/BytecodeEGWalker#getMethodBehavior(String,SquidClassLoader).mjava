  @CheckForNull
  public MethodBehavior getMethodBehavior(String signature, SquidClassLoader classLoader) {
    if (methodFromArray(signature)) {
      // should not generate any method behavior
      return null;
    }
    methodBehavior = behaviorCache.methodBehaviorForSymbol(signature);
    if (!methodBehavior.isVisited()) {
      try {
        methodBehavior.visited();
        execute(signature, classLoader);
      } catch (ExplodedGraphWalker.MaximumStepsReachedException e) {
        LOG.debug("Dataflow analysis is incomplete for method {} : {}", signature, e.getMessage());
      } catch (Exception e) {
        throw new BytecodeAnalysisException("Failed dataflow analysis for " + signature, e);
      }
    }
    return methodBehavior;
  }

