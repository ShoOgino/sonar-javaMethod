  public ModuleNameTree newModuleName(InternalSyntaxToken firstIdentifier, Optional<List<Tuple<InternalSyntaxToken, InternalSyntaxToken>>> rest) {
    List<IdentifierTree> identifiers = new ArrayList<>();
    List<SyntaxToken> separators = new ArrayList<>();
    identifiers.add(new IdentifierTreeImpl(firstIdentifier));

    if (rest.isPresent()) {
      for (Tuple<InternalSyntaxToken, InternalSyntaxToken> modulePart : rest.get()) {
        separators.add(modulePart.first());
        identifiers.add(new IdentifierTreeImpl(modulePart.second()));
      }
    }
    return new ModuleNameTreeImpl(Collections.unmodifiableList(identifiers), Collections.unmodifiableList(separators));
  }

