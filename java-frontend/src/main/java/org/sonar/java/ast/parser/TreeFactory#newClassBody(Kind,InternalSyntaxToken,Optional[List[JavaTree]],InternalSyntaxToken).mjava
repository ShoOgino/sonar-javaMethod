  private static ClassTreeImpl newClassBody(Kind kind, InternalSyntaxToken openBraceSyntaxToken,
    Optional<List<JavaTree>> members, InternalSyntaxToken closeBraceTokenSyntaxToken) {
    ImmutableList.Builder<Tree> builder = ImmutableList.builder();
    if (members.isPresent()) {
      for (JavaTree member : members.get()) {
        if (member instanceof VariableDeclaratorListTreeImpl) {
          for (VariableTreeImpl variable : (VariableDeclaratorListTreeImpl) member) {
            builder.add(variable);
          }
        } else {
          builder.add(member);
        }
      }
    }

    return new ClassTreeImpl(kind, openBraceSyntaxToken, builder.build(), closeBraceTokenSyntaxToken);
  }

