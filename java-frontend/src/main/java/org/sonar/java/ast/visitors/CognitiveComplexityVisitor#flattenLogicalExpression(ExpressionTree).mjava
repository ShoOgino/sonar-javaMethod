  private Stream<BinaryExpressionTree> flattenLogicalExpression(ExpressionTree expression) {
    if (expression.is(CONDITIONAL_AND, CONDITIONAL_OR)) {
      ignored.add(expression);

      BinaryExpressionTree binaryExpr = (BinaryExpressionTree) expression;
      ExpressionTree left = ExpressionUtils.skipParentheses(binaryExpr.leftOperand());
      ExpressionTree right = ExpressionUtils.skipParentheses(binaryExpr.rightOperand());

      return Stream.concat(Stream.concat(flattenLogicalExpression(left), Stream.of(binaryExpr)), flattenLogicalExpression(right));
    }
    return Stream.empty();
  }

