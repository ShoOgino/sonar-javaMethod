  public BoundListTreeImpl newBounds(TypeTree classType, Optional<List<Tuple<InternalSyntaxToken, Tree>>> rests) {
    ImmutableList.Builder<Tree> classTypes = ImmutableList.builder();
    ImmutableList.Builder<SyntaxToken> separators = ImmutableList.builder();

    classTypes.add(classType);
    if (rests.isPresent()) {
      for (Tuple<InternalSyntaxToken, Tree> rest : rests.get()) {
        separators.add(rest.first());
        classTypes.add(rest.second());
      }
    }
    return new BoundListTreeImpl(classTypes.build(), separators.build());
  }

