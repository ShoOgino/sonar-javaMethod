  public Tuple<Optional<InternalSyntaxToken>, ExpressionTree> SELECTOR() {
    return b.<Tuple<Optional<InternalSyntaxToken>, ExpressionTree>>nonterminal(JavaLexer.SELECTOR)
      .is(
        b.firstOf(
          f.completeMemberSelectOrMethodSelector(b.token(JavaPunctuator.DOT), IDENTIFIER_OR_METHOD_INVOCATION()),
          // TODO Perhaps NEW_EXPRESSION() is not as good as before, as it allows NewArrayTree to be constructed
          f.completeCreatorSelector(b.token(JavaPunctuator.DOT), NEW_EXPRESSION()),
          f.<ExpressionTree>newTupleAbsent1(ARRAY_ACCESS_EXPRESSION()),
          f.newTupleAbsent2(f.newDotClassSelector(b.zeroOrMore(DIMENSION()), b.token(JavaPunctuator.DOT), b.token(JavaKeyword.CLASS)))
        ));
  }

