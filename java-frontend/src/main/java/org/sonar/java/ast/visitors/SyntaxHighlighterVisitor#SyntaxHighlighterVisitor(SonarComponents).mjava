  public SyntaxHighlighterVisitor(SonarComponents sonarComponents) {
    this.sonarComponents = sonarComponents;
    
    keywords = Collections.unmodifiableSet(Arrays.stream(JavaKeyword.keywordValues()).collect(Collectors.toSet()));
    restrictedKeywords = Collections.unmodifiableSet(Arrays.stream(JavaRestrictedKeyword.restrictedKeywordValues()).collect(Collectors.toSet()));

    Map<Tree.Kind, TypeOfText> typesByKindMap = new EnumMap<>(Tree.Kind.class);
    typesByKindMap.put(Tree.Kind.STRING_LITERAL, TypeOfText.STRING);
    typesByKindMap.put(Tree.Kind.CHAR_LITERAL, TypeOfText.STRING);
    typesByKindMap.put(Tree.Kind.FLOAT_LITERAL, TypeOfText.CONSTANT);
    typesByKindMap.put(Tree.Kind.DOUBLE_LITERAL, TypeOfText.CONSTANT);
    typesByKindMap.put(Tree.Kind.LONG_LITERAL, TypeOfText.CONSTANT);
    typesByKindMap.put(Tree.Kind.INT_LITERAL, TypeOfText.CONSTANT);
    typesByKindMap.put(Tree.Kind.ANNOTATION, TypeOfText.ANNOTATION);
    typesByKindMap.put(Tree.Kind.VAR_TYPE, TypeOfText.KEYWORD);
    this.typesByKind = Collections.unmodifiableMap(typesByKindMap);
  }

