  public TypeArgumentListTreeImpl newTypeArgumentList(InternalSyntaxToken openBracketToken,
    Tree typeArgument, Optional<List<Tuple<InternalSyntaxToken, Tree>>> rests, InternalSyntaxToken closeBracketToken) {
    ImmutableList.Builder<Tree> typeArguments = ImmutableList.builder();
    ImmutableList.Builder<SyntaxToken> separators = ImmutableList.builder();

    typeArguments.add(typeArgument);

    if (rests.isPresent()) {
      for (Tuple<InternalSyntaxToken, Tree> rest : rests.get()) {
        separators.add(rest.first());
        typeArguments.add(rest.second());
      }
    }
    return new TypeArgumentListTreeImpl(openBracketToken, typeArguments.build(), separators.build(), closeBracketToken);
  }

