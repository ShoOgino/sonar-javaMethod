  public ModuleDirectiveTree REQUIRES_MODULE_DIRECTIVE() {
    return b.<ModuleDirectiveTree>nonterminal(JavaLexer.REQUIRES_DIRECTIVE)
      .is(b.firstOf(
        // JLS9 - ยง3.9 : 'transitive' restricted keyword can be used as module name instead of modifier
        f.newRequiresModuleDirective(
          b.token(JavaRestrictedKeyword.REQUIRES),
          b.token(JavaRestrictedKeyword.TRANSITIVE),
          b.token(JavaPunctuator.SEMI)),
        f.newRequiresModuleDirective(
          b.token(JavaRestrictedKeyword.REQUIRES),
          b.token(JavaKeyword.STATIC),
          b.token(JavaRestrictedKeyword.TRANSITIVE),
          b.token(JavaPunctuator.SEMI)),
        // ordinary requires directives
        f.newRequiresModuleDirective(
          b.token(JavaRestrictedKeyword.REQUIRES),
          b.zeroOrMore(REQUIRES_MODIFIER()),
          MODULE_NAME(),
          b.token(JavaPunctuator.SEMI))));
  }

