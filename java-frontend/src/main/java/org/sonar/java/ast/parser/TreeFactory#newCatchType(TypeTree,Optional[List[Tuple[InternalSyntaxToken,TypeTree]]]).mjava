  public TypeTree newCatchType(TypeTree qualifiedIdentifier, Optional<List<Tuple<InternalSyntaxToken, TypeTree>>> rests) {
    if (!rests.isPresent()) {
      return qualifiedIdentifier;
    }
    ImmutableList.Builder<TypeTree> types = ImmutableList.builder();
    types.add(qualifiedIdentifier);
    ImmutableList.Builder<SyntaxToken> separators = ImmutableList.builder();
    for (Tuple<InternalSyntaxToken, TypeTree> rest : rests.get()) {
      separators.add(rest.first());
      types.add(rest.second());
    }
    return new UnionTypeTreeImpl(new TypeUnionListTreeImpl(types.build(), separators.build()));
  }

