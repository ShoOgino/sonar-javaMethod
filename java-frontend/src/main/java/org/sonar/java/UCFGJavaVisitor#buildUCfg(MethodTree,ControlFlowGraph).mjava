  private UCFG buildUCfg(MethodTree methodTree, ControlFlowGraph cfg) {
    String signature = methodTree.symbol().signature();

    IdentifierGenerator idGenerator = new IdentifierGenerator(methodTree);
    UCFGBuilder builder = UCFGBuilder.createUCFGForMethod(signature);

    methodTree.parameters().stream()
      .map(p -> idGenerator.lookupIdFor(p.symbol()))
      .map(UCFGBuilder::variableWithId)
      .forEach(builder::addMethodParam);

    BlockBuilder entryBlockBuilder = buildBasicBlock(cfg.entryBlock(), methodTree, idGenerator);

    if (hasAnnotatedParameters(methodTree)) {
      builder.addStartingBlock(buildParameterAnnotationsBlock(methodTree, idGenerator, cfg));
      builder.addBasicBlock(entryBlockBuilder);
    } else {
      builder.addStartingBlock(entryBlockBuilder);
    }

    cfg.blocks().stream()
      .filter(b -> !b.equals(cfg.entryBlock()))
      .forEach(b -> builder.addBasicBlock(buildBasicBlock(b, methodTree, idGenerator)));
    return builder.build();
  }

