  private void buildThrowStatement(ThrowStatementTree throwStatementTree) {
    Block jumpTo = exitBlock();
    TryStatement enclosingTryCatch = enclosingTry.peek();
    if(enclosingTryCatch != null){
      jumpTo = enclosingTryCatch.catches.keySet().stream()
        .filter(t -> throwStatementTree.expression().symbolType().isSubtypeOf(t))
        .findFirst()
        .map(t -> enclosingTryCatch.catches.get(t))
        .orElse(exitBlock());
    }
    currentBlock = createUnconditionalJump(throwStatementTree, jumpTo, currentBlock);
    build(throwStatementTree.expression());
  }

