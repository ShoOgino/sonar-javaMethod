  private Type leastContainingTypeArgument(JavaType type1, JavaType type2) {
    Preconditions.checkArgument(type1.isTagged(JavaType.PARAMETERIZED) && type2.isTagged(JavaType.PARAMETERIZED));

    TypeSubstitution typeSubstitution1 = ((ParametrizedTypeJavaType) type1).typeSubstitution;
    TypeSubstitution typeSubstitution2 = ((ParametrizedTypeJavaType) type2).typeSubstitution;

    TypeSubstitution newTypeSubstitution = new TypeSubstitution();
    for (TypeVariableJavaType typeVar : typeSubstitution1.typeVariables()) {
      JavaType subs1 = typeSubstitution1.substitutedType(typeVar);
      JavaType subs2 = typeSubstitution2.substitutedType(typeVar);

      JavaType newSubs = getNewTypeArgumentType(subs1, subs2);
      newTypeSubstitution.add(typeVar, newSubs);
    }

    return parametrizedTypeCache.getParametrizedTypeType(type1.symbol, newTypeSubstitution);
  }

