  public Optional<JavaSymbol.MethodJavaSymbol> getSamMethod(JavaType lambdaType) {
    for (Symbol member : lambdaType.symbol().memberSymbols()) {
      if (isAbstractMethod(member)) {
        return Optional.of((JavaSymbol.MethodJavaSymbol) member);
      }
    }
    for (ClassJavaType type : lambdaType.symbol.superTypes()) {
      Optional<JavaSymbol.MethodJavaSymbol> samMethod = getSamMethod(type);
      if (samMethod.isPresent()) {
        return samMethod;
      }
    }
    return Optional.empty();
  }

