  @Override
  public void visitConditionalExpression(ConditionalExpressionTree tree) {
    if(((ConditionalExpressionTreeImpl) tree).isTypeSet()) {
      JavaType trueType = getType(tree.trueExpression());
      if(trueType.isTagged(JavaType.DEFERRED)) {
        setInferedType(tree.symbolType(), (DeferredType) trueType);
      }
      JavaType falseType = getType(tree.falseExpression());
      if(falseType.isTagged(JavaType.DEFERRED)) {
        setInferedType(tree.symbolType(), (DeferredType) falseType);
      }
    } else {
      resolveAs(tree.condition(), JavaSymbol.VAR);
      resolveAs(tree.trueExpression(), JavaSymbol.VAR);
      resolveAs(tree.falseExpression(), JavaSymbol.VAR);

      registerType(tree, resolve.conditionalExpressionType(tree, (JavaType) tree.trueExpression().symbolType(),(JavaType) tree.falseExpression().symbolType()));
    }
  }

