    @Nullable
    private MethodJavaSymbol overriddenSymbolFrom(JavaType.ClassJavaType classType) {
      if (classType.isUnknown()) {
        return Symbols.unknownMethodSymbol;
      }
      boolean unknownFound = false;
      List<JavaSymbol> symbols = classType.getSymbol().members().lookup(name);
      for (JavaSymbol overrideSymbol : symbols) {
        if (overrideSymbol.isKind(JavaSymbol.MTH)) {
          MethodJavaSymbol methodJavaSymbol = (MethodJavaSymbol) overrideSymbol;
          if (canOverride(methodJavaSymbol)) {
            Boolean overriding = isOverriding(methodJavaSymbol, classType);
            if (overriding == null) {
              if (!unknownFound) {
                unknownFound = true;
              }
            } else if (overriding) {
              return methodJavaSymbol;
            }
          }
        }
      }
      if (unknownFound) {
        return Symbols.unknownMethodSymbol;
      }
      return null;
    }

