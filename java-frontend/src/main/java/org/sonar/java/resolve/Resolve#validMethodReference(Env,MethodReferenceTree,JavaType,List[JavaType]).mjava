  private boolean validMethodReference(Env env, MethodReferenceTree tree, JavaType formal, List<JavaType> samMethodArgs) {
    Tree expression = tree.expression();
    if (expression instanceof AbstractTypedTree) {
      JavaType type = (JavaType) ((AbstractTypedTree) expression).symbolType();
      String methodName = tree.method().name();
      Resolution resolution = findMethod(env, type, "new".equals(methodName) ? "<init>" : methodName, samMethodArgs);
      if (resolution.symbol.kind < JavaSymbol.ERRONEOUS) {
        if (tree.method().symbol().isUnknown()) {
          associateReference(tree.method(), (JavaSymbol.MethodJavaSymbol) resolution.symbol);
          ((AbstractTypedTree) tree.method()).setType(resolution.type);
          ((AbstractTypedTree) tree).setType(formal);
        }
        return true;
      }
    }
    return false;
  }

