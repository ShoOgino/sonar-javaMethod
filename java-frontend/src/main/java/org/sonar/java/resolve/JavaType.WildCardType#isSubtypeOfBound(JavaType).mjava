    public boolean isSubtypeOfBound(JavaType type) {
      switch (boundType) {
        case SUPER:
          if(bound.isTagged(TYPEVAR) && !type.isTagged(TYPEVAR) && bound != type) {
            return false;
          }
          return bound.isSubtypeOf(type);
        case EXTENDS:
          if(bound.isTagged(TYPEVAR) && !type.isTagged(TYPEVAR) && bound != type) {
            return false;
          }
          return type.isSubtypeOf(bound);
        case UNBOUNDED:
        default:
          return true;
      }
    }

