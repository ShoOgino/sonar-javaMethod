  @Override
  public void visitVariable(VariableTree tree) {
    scan(tree.modifiers());
    JavaSymbol.VariableJavaSymbol variableSymbol = ((VariableTreeImpl) tree).getSymbol();
    completeMetadata(variableSymbol, tree.modifiers().annotations());
    //skip type, it has been resolved in second pass
    ExpressionTree initializer = tree.initializer();
    if (initializer != null) {
      resolveAs(initializer, JavaSymbol.VAR);
      TypeTree typeTree = tree.type();
      JavaType initializerType = (JavaType) initializer.symbolType();
      if (initializerType.isTagged(JavaType.DEFERRED)) {
        setInferedType(typeTree.symbolType(), (DeferredType) initializer.symbolType());
      } else if (typeTree.is(Tree.Kind.VAR_TYPE)) {
        setInferedType(upwardProjection(initializerType), (DeferredType) typeTree.symbolType());
      }
    }
  }

