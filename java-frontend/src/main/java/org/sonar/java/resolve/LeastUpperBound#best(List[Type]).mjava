  @VisibleForTesting
  static Type best(List<Type> minimalCandidates) {
    Collections.sort(minimalCandidates, (t1, t2) -> {
      // Sort minimal candidates by name with classes before interfaces, to guarantee always the same type is returned when approximated.
      Symbol.TypeSymbol t1Symbol = t1.symbol();
      Symbol.TypeSymbol t2Symbol = t2.symbol();
      if (t1Symbol.isInterface() && t2Symbol.isInterface()) {
        return t1.name().compareTo(t2.name());
      } else if (t1Symbol.isInterface()) {
        return 1;
      } else if (t2Symbol.isInterface()) {
        return -1;
      }
      return t1.name().compareTo(t2.name());
    });
    // FIXME SONARJAVA-1632 should return union of types
    return minimalCandidates.get(0);
  }

