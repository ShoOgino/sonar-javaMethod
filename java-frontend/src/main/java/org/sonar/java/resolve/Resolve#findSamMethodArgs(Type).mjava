  public List<JavaType> findSamMethodArgs(Type type) {
    for (Symbol member : type.symbol().memberSymbols()) {
      if(member.isMethodSymbol() && member.isAbstract()) {
        JavaSymbol.MethodJavaSymbol target = (JavaSymbol.MethodJavaSymbol) member;
        List<JavaType> argTypes = ((MethodJavaType) target.type).argTypes;
        argTypes = typeSubstitutionSolver.applySiteSubstitutionToFormalParameters(argTypes, (JavaType) type);
        return argTypes;
      }
    }
    return new ArrayList<>();
  }

