  private JavaType lctaBothWildcards(WildCardType type1, WildCardType type2) {
    if (type1.boundType == WildCardType.BoundType.SUPER && type2.boundType == WildCardType.BoundType.SUPER) {
      JavaType glb = (JavaType) greatestLowerBound(Lists.newArrayList(type1.bound, type2.bound));
      return parametrizedTypeCache.getWildcardType(glb, WildCardType.BoundType.SUPER);
    }
    if (type1.boundType == WildCardType.BoundType.EXTENDS && type2.boundType == WildCardType.BoundType.EXTENDS) {
      JavaType lub = (JavaType) cachedLeastUpperBound(Sets.newHashSet(type1.bound, type2.bound));
      return parametrizedTypeCache.getWildcardType(lub, WildCardType.BoundType.EXTENDS);
    }
    if (type1.bound.equals(type2.bound)) {
      return type1.bound;
    }
    return symbols.unboundedWildcard;
  }

