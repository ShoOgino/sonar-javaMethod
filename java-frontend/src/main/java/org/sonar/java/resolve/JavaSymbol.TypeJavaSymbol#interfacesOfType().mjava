    private Set<ClassJavaType> interfacesOfType() {
      if (interfaces == null) {
        Deque<ClassJavaType> todo = getInterfaces().stream().map(ClassJavaType.class::cast).distinct().collect(Collectors.toCollection(LinkedList::new));
        Set<ClassJavaType> builder = new LinkedHashSet<>();
        while (!todo.isEmpty()) {
          ClassJavaType classType = todo.pop();
          if(classType == type) {
            continue;
          }
          if (builder.add(classType)) {
            classType.symbol.getInterfaces().forEach(t -> todo.addLast((ClassJavaType) t));
          }
        }
        interfaces = builder;
      }
      return interfaces;
    }

