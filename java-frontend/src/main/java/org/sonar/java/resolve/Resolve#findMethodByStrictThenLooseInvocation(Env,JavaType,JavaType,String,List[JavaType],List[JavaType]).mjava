  private Resolution findMethodByStrictThenLooseInvocation(Env env, JavaType callSite, JavaType site, String name, List<JavaType> argTypes, List<JavaType> typeParams) {
    // JLS8 - ยง5.3 searching by strict invocation, then loose invocation
    Resolution bestSoFar = findMethod(env, callSite, site, name, argTypes, typeParams, false);
    // searching for a specific method applicable with fixed arity and loose invocation
    if (!argTypes.isEmpty() && (bestSoFar.symbol.kind >= JavaSymbol.ERRONEOUS || canFindStrictInvocationWithLooseInvocation(argTypes, bestSoFar))) {
      // retry with loose invocation
      bestSoFar = findMethod(env, callSite, site, name, argTypes, typeParams, true);
    }
    return bestSoFar;
  }

