  public JavaType getParametrizedTypeType(JavaSymbol.TypeJavaSymbol symbol, TypeSubstitution typeSubstitution) {
    if (symbol.getType().isUnknown()) {
      return symbol.getType();
    }
    if (typeCache.get(symbol) == null) {
      Map<TypeSubstitution, ParametrizedTypeJavaType> map = Maps.newHashMap();
      typeCache.put(symbol, map);
    }
    TypeSubstitution newSubstitution = typeSubstitution;
    if (newSubstitution.size() == 0) {
      newSubstitution = identitySubstitution(symbol.typeVariableTypes);
    }
    if (typeCache.get(symbol).get(newSubstitution) == null) {
      typeCache.get(symbol).put(newSubstitution, new ParametrizedTypeJavaType(symbol, newSubstitution, typeSubstitutionSolver));
    }
    return typeCache.get(symbol).get(newSubstitution);
  }

