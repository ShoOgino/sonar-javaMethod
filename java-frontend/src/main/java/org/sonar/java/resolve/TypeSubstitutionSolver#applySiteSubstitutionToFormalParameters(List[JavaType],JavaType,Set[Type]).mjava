  @VisibleForTesting
  List<JavaType> applySiteSubstitutionToFormalParameters(List<JavaType> formals, JavaType site, Set<Type> visited) {
    TypeSubstitution typeSubstitution = new TypeSubstitution();
    if (site.isParameterized()) {
      typeSubstitution = ((ParametrizedTypeJavaType) site).typeSubstitution;
    }
    TypeJavaSymbol siteSymbol = site.getSymbol();
    List<JavaType> newFormals = formals;
    Type superClass = siteSymbol.superClass();
    if (superClass != null) {
      JavaType newSuperClass = applySubstitution((JavaType) superClass, typeSubstitution);
      if(visited.add(newSuperClass)) {
        newFormals = applySiteSubstitutionToFormalParameters(newFormals, newSuperClass, visited);
      }
    }
    for (Type interfaceType : siteSymbol.interfaces()) {
      JavaType newInterfaceType = applySubstitution((JavaType) interfaceType, typeSubstitution);
      if(visited.add(newInterfaceType)) {
        newFormals = applySiteSubstitutionToFormalParameters(newFormals, newInterfaceType, visited);
      }
    }
    return applySubstitutionToFormalParameters(newFormals, typeSubstitution);
  }

