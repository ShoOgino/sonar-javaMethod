  /**
   * Let the "candidate" parameterization of G, Candidate(G), be the most specific parameterization of the generic type G that contains all
   * the relevant parameterizations of G: Candidate(G) = lcp(Relevant(G)), where lcp() is the least containing parameterization. 
   * @param types
   * @return
   */
  private Type leastContainingParameterization(List<Type> types) {
    if (types.size() == 1) {
      return types.get(0);
    }
    JavaType type1 = (JavaType) types.get(0);
    JavaType type2 = (JavaType) types.get(1);
    Type reduction = leastContainingTypeArgument(type1, type2);

    List<Type> reducedList = Lists.newArrayList(reduction);
    reducedList.addAll(types.subList(2, types.size()));

    return leastContainingParameterization(reducedList);
  }

