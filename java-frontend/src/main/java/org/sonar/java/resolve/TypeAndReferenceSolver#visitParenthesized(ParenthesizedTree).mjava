  @Override
  public void visitParenthesized(ParenthesizedTree tree) {
    if(((ParenthesizedTreeImpl) tree).isTypeSet()) {
      JavaType expType = getType(tree.expression());
      if(expType.isTagged(JavaType.DEFERRED)) {
        setInferedType(tree.symbolType(), (DeferredType) expType);
      }
    } else {
      resolveAs(tree.expression(), JavaSymbol.VAR);
      JavaType parenthesizedExpressionType = getType(tree.expression());
      if(parenthesizedExpressionType.isTagged(JavaType.DEFERRED)) {
        parenthesizedExpressionType = symbols.deferedType((AbstractTypedTree) tree);
      }
      registerType(tree, parenthesizedExpressionType);
    }
  }

