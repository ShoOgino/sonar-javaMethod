  private JavaType getNewTypeArgumentType(JavaType type1, JavaType type2) {
    boolean isWildcard1 = type1.isTagged(JavaType.WILDCARD);
    boolean isWildcard2 = type2.isTagged(JavaType.WILDCARD);

    JavaType result;
    if (type1.equals(type2)) {
      result = type1;
    } else if (isWildcard1 && isWildcard2) {
      result = lctaBothWildcards((WildCardType) type1, (WildCardType) type2);
    } else if (isWildcard1 ^ isWildcard2) {
      JavaType rawType = isWildcard1 ? type2 : type1;
      WildCardType wildcardType = (WildCardType) (isWildcard1 ? type1 : type2);
      result = lctaOneWildcard(rawType, wildcardType);
    } else {
      result = lctaNoWildcard(type1, type2);
    }
    return result;
  }

