  private void refineLambdaType(LambdaExpressionTreeImpl lambdaExpressionTree, JavaType lambdaType) {
    JavaSymbol.MethodJavaSymbol samMethod = getSamMethod(lambdaType);
    if(samMethod == null) {
      return;
    }
    JavaType samReturnType = (JavaType) samMethod.returnType().type();
    JavaType capturedReturnType = resolve.resolveTypeSubstitution(samReturnType, lambdaType);
    if (lambdaExpressionTree.body().is(Tree.Kind.BLOCK) || capturedReturnType.is("void")) {
      // TODO compute return type for lambda with block and return statements
      return;
    }
    JavaType refinedReturnType = (JavaType) ((AbstractTypedTree) lambdaExpressionTree.body()).symbolType();
    refineType(lambdaExpressionTree, lambdaType, capturedReturnType, refinedReturnType);
  }

