    @Override
    public boolean isSubtypeOf(Type superType) {
      if (((JavaType) superType).isTagged(WILDCARD)) {
        WildCardType superTypeWildcard = (WildCardType) superType;
        JavaType superTypeBound = superTypeWildcard.bound;
        switch (superTypeWildcard.boundType) {
          case UNBOUNDED:
            return true;
          case SUPER:
            return boundType == BoundType.SUPER && superTypeBound.isSubtypeOf(bound);
          case EXTENDS:
            return boundType != BoundType.SUPER && bound.isSubtypeOf(superTypeBound);
        }
      }
      return "java.lang.Object".equals(superType.fullyQualifiedName()) || (boundType == BoundType.EXTENDS && bound.isSubtypeOf(superType));
    }

