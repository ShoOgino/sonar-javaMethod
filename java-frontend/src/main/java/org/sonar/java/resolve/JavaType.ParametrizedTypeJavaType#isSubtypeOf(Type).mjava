    @Override
    public boolean isSubtypeOf(Type superType) {
      if(((JavaType) superType).isTagged(TYPEVAR)) {
        return false;
      }
      if (erasure().isSubtypeOf(superType.erasure())) {
        boolean superTypeIsParametrizedJavaType = superType instanceof ParametrizedTypeJavaType;
        if (superTypeIsParametrizedJavaType) {
          return checkSubstitutedTypesCompatibility((ParametrizedTypeJavaType) superType);
        }
        return !superTypeIsParametrizedJavaType;
      }
      if (((JavaType) superType).isTagged(WILDCARD)) {
        return ((WildCardType) superType).isSubtypeOfBound(this);
      }
      return false;
    }

