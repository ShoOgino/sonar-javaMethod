  private void buildConstructorInvocation(BlockBuilder blockBuilder, IdentifierGenerator idGenerator, NewClassTree tree) {
    Symbol constructorSymbol = tree.constructorSymbol();
    if (!constructorSymbol.isMethodSymbol()) {
      return;
    }

    Expression.Variable newInstance = variableWithId(idGenerator.newIdFor(tree));
    blockBuilder.newObject(newInstance, tree.symbolType().fullyQualifiedName(), location(tree.identifier()));

    List<Expression> arguments = new ArrayList<>();
    arguments.add(newInstance);
    arguments.addAll(argumentIds(idGenerator, tree.arguments()));

    blockBuilder.assignTo(variableWithId(idGenerator.newId()),
        UCFGBuilder.call(((Symbol.MethodSymbol) constructorSymbol).signature()).withArgs(arguments.toArray(new Expression[0])),
        location(tree));
  }

