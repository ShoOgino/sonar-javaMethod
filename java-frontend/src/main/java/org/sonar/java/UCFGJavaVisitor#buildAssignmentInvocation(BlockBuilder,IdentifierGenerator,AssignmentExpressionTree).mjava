  private void buildAssignmentInvocation(BlockBuilder blockBuilder, IdentifierGenerator idGenerator, AssignmentExpressionTree tree) {
    if (!isObject(tree.symbolType())) {
      return;
    }
    ExpressionTree lhsTree = tree.variable();
    ExpressionTree rhsTree = tree.expression();
    Expression rightSide = lookupExpression(blockBuilder, idGenerator, rhsTree);
    if (lhsTree.is(ARRAY_ACCESS_EXPRESSION)) {
      Expression leftSide = idGenerator.lookupExpressionFor(((ArrayAccessExpressionTree)lhsTree).expression());
      // when an assignment implies both get and set on arrays, the get must be stored in an auxiliary local variable
      blockBuilder.assignTo(variableWithId(idGenerator.newId()), arraySet(leftSide, rightSide), location(tree));
    } else {
      Expression leftSide = idGenerator.lookupExpressionFor(lhsTree);
      if (leftSide instanceof  Expression.Variable) {
        blockBuilder.assignTo((Expression.Variable) leftSide, call("__id").withArgs(rightSide), location(tree));
      }
    }
  }

