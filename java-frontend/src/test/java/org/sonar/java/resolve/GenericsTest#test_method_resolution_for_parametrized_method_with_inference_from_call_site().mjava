  @Test
  public void test_method_resolution_for_parametrized_method_with_inference_from_call_site() {
    List<Type> elementTypes = declaredTypes(
      "class A<E> {"
        + "  static <T> A<T> foo() { return new A<T>(); }"

        + "  void tst() {"
        // call to method not recognized
        + "    A<String> a = A.foo();"
        + "  }"
        + "}");

    JavaType type = (JavaType) elementTypes.get(0);
    JavaSymbol.MethodJavaSymbol methodSymbol = getMethodSymbol(type, "foo");
    assertThat(methodSymbol.usages()).hasSize(1);

    Type methodInvocationType = getMethodInvocationType(methodSymbol, 0);
    assertThat(methodInvocationType.erasure().is("A")).isTrue();
    // FIXME SONARJAVA-1581 should be A<String> instead of the raw type A
    assertThat(methodInvocationType instanceof JavaType.ParametrizedTypeJavaType).isFalse();
    // assertThat(((JavaType.ParametrizedTypeJavaType) methodInvocationType).typeSubstitution.substitutedTypes().get(0).is("java.lang.String")).isTrue();
  }

