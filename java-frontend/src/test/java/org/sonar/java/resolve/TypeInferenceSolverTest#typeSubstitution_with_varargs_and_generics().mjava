  @Test
  public void typeSubstitution_with_varargs_and_generics() {
    Result result = Result.createForJavaFile("src/test/files/resolve/ParametrizedMethodAndVarargs");

    JavaType childB = (JavaType) result.symbol("childB").type();
    JavaType childC = (JavaType) result.symbol("childC").type();

    JavaSymbol.MethodJavaSymbol variadicMethod;
    List<JavaType> args;
    TypeSubstitution typeSubstitution;

    variadicMethod = (JavaSymbol.MethodJavaSymbol) result.symbol("bar");
    args = Lists.newArrayList(childB, childB);
    typeSubstitution = inferTypeSubstitution(variadicMethod, args);
    assertThat(typeSubstitution.substitutedType(variadicMethod.typeVariableTypes.get(0)).is("B")).isTrue();

    variadicMethod = (JavaSymbol.MethodJavaSymbol) result.symbol("foo");
    args = Lists.newArrayList(childB, childC);
    typeSubstitution = inferTypeSubstitution(variadicMethod, args);
    assertThat(variadicMethod.usages()).hasSize(1);
    assertThat(typeSubstitution.substitutedType(variadicMethod.typeVariableTypes.get(0)).is("A")).isTrue();
  }

