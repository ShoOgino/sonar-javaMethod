  @Test
  public void inferTypeSubstitution_varargs() {
    JavaType aType = createType("A", symbols.objectType);

    // B <: A
    JavaType bType = createType("B", aType);

    // C <: A
    JavaType cType = createType("C", aType);

    // formals = T[] (varargs)
    List<JavaType> formals = Lists.<JavaType>newArrayList(new ArrayJavaType(T, symbols.arrayClass));

    // args = B, C
    List<JavaType> args = Lists.<JavaType>newArrayList(bType, cType);
    TypeSubstitution substitution = typeSubstitutionForTypeParametersWithVarargs(formals, args, T);
    assertThat(substitution.substitutedType(T)).isSameAs(aType);

    // args = int, long
    args = Lists.<JavaType>newArrayList(symbols.intType, symbols.longType);
    substitution = typeSubstitutionForTypeParametersWithVarargs(formals, args, T);
    assertThat(substitution.substitutedType(T).is("java.lang.Number")).isTrue();
  }

