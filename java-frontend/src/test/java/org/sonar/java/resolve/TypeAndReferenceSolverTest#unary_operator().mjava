  @Test
  public void unary_operator() {
    assertUnary("class A { Integer field; int foo() {return -field;} }", Type.Primitives.INT);
    assertUnary("class A { Character field; int foo() {return -field;} }", Type.Primitives.INT);
    assertUnary("class A { char field; int foo() {return -field;} }", Type.Primitives.INT);
    assertUnary("class A { byte field; int foo() {return -field;} }", Type.Primitives.INT);
    assertUnary("class A { Long field; int foo() {return -field;} }", Type.Primitives.LONG);
    assertUnary("class A { long field; int foo() {return -field;} }", Type.Primitives.LONG);
    assertUnary("class A { Float field; int foo() {return -field;} }", Type.Primitives.FLOAT);
    assertUnary("class A { Double field; int foo() {return -field;} }", Type.Primitives.DOUBLE);
    assertUnary("class A { double field; int foo() {return -field;} }", Type.Primitives.DOUBLE);
    assertUnary("class A { Boolean field; int foo() {return ~field;} }", Type.Primitives.BOOLEAN);
    assertUnary("class A { Integer field; int foo() {return -field;} }", Type.Primitives.INT);
  }

