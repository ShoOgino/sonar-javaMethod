  @Test
  public void direct_super_types() {
    Set<ClassJavaType> objectDirectSuperTypes = symbols.objectType.directSuperTypes();
    assertThat(objectDirectSuperTypes).isEmpty();

    Set<ClassJavaType> integerDirectSuperTypes = symbols.intType.primitiveWrapperType.directSuperTypes();
    assertThat(integerDirectSuperTypes).hasSize(2);
    assertThat(integerDirectSuperTypes.stream().map(st -> st.fullyQualifiedName())).contains("java.lang.Number", "java.lang.Comparable");

    ArrayJavaType arrayType = new ArrayJavaType(symbols.intType, symbols.arrayClass);
    Set<ClassJavaType> arrayDirectSuperTypes = arrayType.directSuperTypes();
    assertThat(arrayDirectSuperTypes).hasSize(3);
    assertThat(arrayDirectSuperTypes.stream().map(st -> st.fullyQualifiedName())).contains("java.lang.Object", "java.lang.Cloneable", "java.io.Serializable");
  }

