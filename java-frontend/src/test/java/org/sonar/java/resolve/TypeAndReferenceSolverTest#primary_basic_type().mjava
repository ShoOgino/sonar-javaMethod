  @Test
  public void primary_basic_type() {
    JavaType intClassType = typeOfExpression("int.class");
    assertThat(intClassType.erasure()).isSameAs(symbols.classType);
    assertThat(intClassType).isInstanceOf(JavaType.ParametrizedTypeJavaType.class);
    JavaType.ParametrizedTypeJavaType intClassTypeParameterized = (JavaType.ParametrizedTypeJavaType) intClassType;
    assertThat(intClassTypeParameterized.typeSubstitution.substitutedType(intClassTypeParameterized.typeParameters().get(0))).isSameAs(symbols.intType.primitiveWrapperType());


    JavaType stringClassType = typeOfExpression("java.lang.String.class");
    assertThat(stringClassType.erasure()).isSameAs(symbols.classType);
    assertThat(stringClassType).isInstanceOf(JavaType.ParametrizedTypeJavaType.class);
    JavaType.ParametrizedTypeJavaType StringClassTypeParameterized = (JavaType.ParametrizedTypeJavaType) stringClassType;
    assertThat(StringClassTypeParameterized.typeSubstitution.substitutedType(StringClassTypeParameterized.typeParameters().get(0))).isSameAs(symbols.stringType);

    assertThat(typeOfExpression("int[].class").erasure()).isSameAs(symbols.classType);
    assertThat(typeOfExpression("int[][].class").erasure()).isSameAs(symbols.classType);
  }

