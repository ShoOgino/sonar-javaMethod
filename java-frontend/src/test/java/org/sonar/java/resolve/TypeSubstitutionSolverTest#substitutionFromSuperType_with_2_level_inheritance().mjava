  @Test
  public void substitutionFromSuperType_with_2_level_inheritance() {
    Result result = Result.createForJavaFile("src/test/files/sym/TypeSubstitutionSolver");
    Type stringType = result.symbol("string").type();
    ParametrizedTypeJavaType iString = (ParametrizedTypeJavaType) result.symbol("iString").type();

    ParametrizedTypeJavaType dV = (ParametrizedTypeJavaType) result.symbol("dX").type();
    TypeVariableJavaType v = dV.typeParameters().get(0);

    TypeSubstitution substitution = TypeSubstitutionSolver.substitutionFromSuperType(dV, iString);
    assertThat(substitution.size()).isEqualTo(1);
    assertThat(substitution.typeVariables()).containsExactly(v);
    assertThat(substitution.substitutedTypes()).containsExactly(stringType);
  }

