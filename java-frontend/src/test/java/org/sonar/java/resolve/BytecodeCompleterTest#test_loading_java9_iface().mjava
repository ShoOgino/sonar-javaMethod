  @Test
  public void test_loading_java9_iface() throws Exception {
    BytecodeCompleter bytecodeCompleter = new BytecodeCompleter(
      new SquidClassLoader(Collections.singletonList(new File("src/test/files/bytecode/java9/bin"))),
      new ParametrizedTypeCache());
    new Symbols(bytecodeCompleter);
    TypeJavaSymbol iface = (TypeJavaSymbol) bytecodeCompleter.loadClass("org.test.IfaceTest");
    iface.complete();
    assertThat(iface.getFullyQualifiedName()).isEqualTo("org.test.IfaceTest");
    assertThat(iface.memberSymbols()).hasSize(3);
    assertThat(iface.isInterface()).isTrue();

    JavaSymbol.MethodJavaSymbol privateMethod = (JavaSymbol.MethodJavaSymbol) Iterables.getOnlyElement(iface.lookupSymbols("privateMethod"));
    assertThat(privateMethod.flags()).isEqualTo(Flags.PRIVATE);

    JavaSymbol.MethodJavaSymbol defaultMethod = (JavaSymbol.MethodJavaSymbol) Iterables.getOnlyElement(iface.lookupSymbols("defaultMethod"));
    assertThat(defaultMethod.flags()).isEqualTo(Flags.DEFAULT | Flags.PUBLIC);

    JavaSymbol.MethodJavaSymbol staticMethod = (JavaSymbol.MethodJavaSymbol) Iterables.getOnlyElement(iface.lookupSymbols("staticMethod"));
    assertThat(staticMethod.flags()).isEqualTo(Flags.STATIC | Flags.PUBLIC);
  }

