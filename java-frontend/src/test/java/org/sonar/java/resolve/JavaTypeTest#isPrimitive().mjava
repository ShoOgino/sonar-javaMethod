  @Test
  public void isPrimitive() {
    assertThat(new JavaType(JavaType.BYTE, null).isPrimitive()).isTrue();
    assertThat(new JavaType(JavaType.CHAR, null).isPrimitive()).isTrue();
    assertThat(new JavaType(JavaType.SHORT, null).isPrimitive()).isTrue();
    assertThat(new JavaType(JavaType.INT, null).isPrimitive()).isTrue();
    assertThat(new JavaType(JavaType.LONG, null).isPrimitive()).isTrue();
    assertThat(new JavaType(JavaType.FLOAT, null).isPrimitive()).isTrue();
    assertThat(new JavaType(JavaType.DOUBLE, null).isPrimitive()).isTrue();
    assertThat(new JavaType(JavaType.BOOLEAN, null).isPrimitive()).isTrue();
    assertThat(new JavaType(JavaType.VOID, null).isPrimitive()).isFalse();
    assertThat(new JavaType(JavaType.ARRAY, null).isPrimitive()).isFalse();
    assertThat(new JavaType(JavaType.CLASS, null).isPrimitive()).isFalse();


    //Test primitive type
    for (org.sonar.plugins.java.api.semantic.Type.Primitives primitive : org.sonar.plugins.java.api.semantic.Type.Primitives.values()) {
      assertThat(symbols.charType.isPrimitive(primitive)).isEqualTo(primitive.equals(org.sonar.plugins.java.api.semantic.Type.Primitives.CHAR));
    }

  }

