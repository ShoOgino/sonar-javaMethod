  @Test
  public void extended_type_variables() throws Exception {
    String javaLangObject = "java.lang.Object";
    Result result = Result.createFor("Generics");
    Type MyClass = result.symbol("MyClass", 100).type();
    Type i = result.symbol("I").type();
    Type j = result.symbol("J").type();

    JavaSymbol.TypeJavaSymbol w = (JavaSymbol.TypeJavaSymbol) result.symbol("W", 103);
    assertThat(w.superClass().is(javaLangObject)).isTrue();
    assertThat(w.interfaces()).isEmpty();

    JavaSymbol.TypeJavaSymbol x = (JavaSymbol.TypeJavaSymbol) result.symbol("X", 103);
    assertThat(x.superClass()).isSameAs(MyClass);
    assertThat(x.interfaces()).isEmpty();

    JavaSymbol.TypeJavaSymbol y = (JavaSymbol.TypeJavaSymbol) result.symbol("Y", 103);
    assertThat(y.superClass().is(javaLangObject)).isTrue();
    assertThat(y.interfaces()).containsExactly(i);

    JavaSymbol.TypeJavaSymbol z = (JavaSymbol.TypeJavaSymbol) result.symbol("Z", 103);
    assertThat(z.superClass()).isSameAs(MyClass);
    assertThat(z.interfaces()).containsExactly(i, j);
  }

