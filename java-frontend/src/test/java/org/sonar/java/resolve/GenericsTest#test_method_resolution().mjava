  @Test
  public void test_method_resolution() {
    List<Type> elementTypes = declaredTypes(
      "import java.util.Arrays;",
      "import java.util.Collection;",
      "class A {",
      "  void foo() {",
      "    bar(Arrays.asList(\"string\"));",
      "  }",
      "  void bar(Collection<String> c) {}",
      "}");

    JavaType aType = (JavaType) elementTypes.get(0);
    JavaSymbol.MethodJavaSymbol bar = getMethodSymbol(aType, "bar", 0);
    // FIXME SONARJAVA-1498 type substitution not handled in '<T> List<T> Arrays.asList(T ...) {}'
    assertThat(bar.usages()).hasSize(0);
  }

