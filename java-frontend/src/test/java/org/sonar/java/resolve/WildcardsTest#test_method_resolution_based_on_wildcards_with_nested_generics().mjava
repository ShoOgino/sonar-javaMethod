  @Test
  public void test_method_resolution_based_on_wildcards_with_nested_generics() {
    List<Type> elementTypes = declaredTypes(
      "interface I<Z> {}",
      "class A<X extends I<? extends X>> {"
        + "   A(X x) {}"
        + "   <Y extends I<? extends Y>> void foo(Y y) { new A<>(y); }"
        + "}");

    JavaSymbol.MethodJavaSymbol constructor = getMethodSymbol((JavaType) elementTypes.get(1), "<init>", 0);
    assertThat(constructor.usages()).hasSize(1);
  }

