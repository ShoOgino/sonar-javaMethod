  @Test
  public void test_MethodSymbol() {
    JavaSymbol.TypeJavaSymbol outermostClass = new JavaSymbol.TypeJavaSymbol(42, "name", P_PACKAGE_JAVA_SYMBOL);
    JavaSymbol.TypeJavaSymbol typeSymbol = new JavaSymbol.TypeJavaSymbol(42, "t", outermostClass);
    JavaSymbol.MethodJavaSymbol methodSymbol = new JavaSymbol.MethodJavaSymbol(42, "name", typeSymbol);

    assertThat(methodSymbol.kind).isEqualTo(JavaSymbol.MTH);
    assertTrue(methodSymbol.isMethodSymbol());
    assertThat(methodSymbol.flags()).isEqualTo(42);
    assertThat(methodSymbol.owner()).isSameAs(typeSymbol);
    assertThat(methodSymbol.isConstructor()).isFalse();

    assertThat(methodSymbol.packge()).isSameAs(P_PACKAGE_JAVA_SYMBOL);
    assertThat(methodSymbol.outermostClass()).isSameAs(outermostClass);
    assertThat(methodSymbol.enclosingClass()).isSameAs(typeSymbol);

    assertThat(methodSymbol.toString()).isEqualTo("t#name()");
    assertThat(new JavaSymbol.MethodJavaSymbol(42, "name", Symbols.unknownType.symbol).toString()).isEqualTo("!unknownOwner!#name()");
    assertThat(Symbols.unknownMethodSymbol.toString()).isEqualTo("!unknownOwner!#!unknownMethod!()");

    JavaSymbol.MethodJavaSymbol constructor = new JavaSymbol.MethodJavaSymbol(42, "<init>", typeSymbol);
    assertThat(constructor.kind).isEqualTo(JavaSymbol.MTH);
    assertTrue(constructor.isMethodSymbol());
    assertThat(constructor.flags()).isEqualTo(42);
    assertThat(constructor.owner()).isSameAs(typeSymbol);
    assertThat(constructor.isConstructor()).isTrue();

    assertThat(constructor.packge()).isSameAs(P_PACKAGE_JAVA_SYMBOL);
    assertThat(constructor.outermostClass()).isSameAs(outermostClass);
    assertThat(constructor.enclosingClass()).isSameAs(typeSymbol);

    assertThat(constructor.toString()).isEqualTo("t#<init>()");
  }

