  @Test
  public void test_type_hierarchy_directly_between_wildcards_and_other_types() {
    List<Type> elementTypes = declaredTypesUsingHierarchy(
      "A<? extends Cat>",
      "A<? super Cat>",
      "A<?>",
      "Object",
      "Animal",
      "Cat",
      "Integer");
    Type wcExtendsCatType = ((ParametrizedTypeJavaType) elementTypes.get(0)).typeSubstitution.substitutedTypes().get(0);
    Type wcSuperCatType = ((ParametrizedTypeJavaType) elementTypes.get(1)).typeSubstitution.substitutedTypes().get(0);
    Type wcUnboundedType = ((ParametrizedTypeJavaType) elementTypes.get(2)).typeSubstitution.substitutedTypes().get(0);
    Type objectType = elementTypes.get(3);
    Type animalType = elementTypes.get(4);
    Type catType = elementTypes.get(5);
    Type integerType = elementTypes.get(6);

    SubtypeAssert.assertThat(wcExtendsCatType).isSubtypeOf(objectType);
    SubtypeAssert.assertThat(wcExtendsCatType).isSubtypeOf(catType);
    SubtypeAssert.assertThat(wcExtendsCatType).isSubtypeOf(animalType);
    SubtypeAssert.assertThat(wcExtendsCatType).isSubtypeOf("java.lang.Object");
    SubtypeAssert.assertThat(wcExtendsCatType).isSubtypeOf("org.foo.Cat");
    SubtypeAssert.assertThat(wcExtendsCatType).isSubtypeOf("org.foo.Animal");

    SubtypeAssert.assertThat(wcSuperCatType).isSubtypeOf(objectType);
    SubtypeAssert.assertThat(wcSuperCatType).isNotSubtypeOf(catType);
    SubtypeAssert.assertThat(wcSuperCatType).isNotSubtypeOf(animalType);
    SubtypeAssert.assertThat(wcSuperCatType).isSubtypeOf("java.lang.Object");
    SubtypeAssert.assertThat(wcSuperCatType).isNotSubtypeOf("org.foo.Cat");
    SubtypeAssert.assertThat(wcSuperCatType).isNotSubtypeOf("org.foo.Animal");

    SubtypeAssert.assertThat(wcUnboundedType).isSubtypeOf(objectType);
    SubtypeAssert.assertThat(wcUnboundedType).isNotSubtypeOf(catType);
    SubtypeAssert.assertThat(wcUnboundedType).isNotSubtypeOf(animalType);
    SubtypeAssert.assertThat(wcUnboundedType).isSubtypeOf("java.lang.Object");
    SubtypeAssert.assertThat(wcUnboundedType).isNotSubtypeOf("org.foo.Cat");
    SubtypeAssert.assertThat(wcUnboundedType).isNotSubtypeOf("org.foo.Animal");

    SubtypeAssert.assertThat(wcExtendsCatType).isNotSubtypeOf(integerType);
    SubtypeAssert.assertThat(wcExtendsCatType).isNotSubtypeOf("java.lang.Integer");
  }

