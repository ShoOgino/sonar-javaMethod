  @Test
  public void test_is_overridable() throws Exception {
    Map<Integer, Boolean> methodOverridableByLine = ImmutableMap.of(
      25, false,
      29, false,
      32, false,
      35, false,
      38, true);

    JavaAstScanner.scanSingleFileForTests(
      new File("src/test/java/org/sonar/java/resolve/targets/OverridableMethodSymbols.java"),
      new VisitorsBridge(Collections.singleton(new SubscriptionVisitor() {
        @Override
        public List<Tree.Kind> nodesToVisit() {
          return Lists.newArrayList(Tree.Kind.METHOD);
        }

        @Override
        public void visitNode(Tree tree) {
          int line = ((JavaTree) tree).getLine();
          JavaSymbol.MethodJavaSymbol symbol = (JavaSymbol.MethodJavaSymbol) ((MethodTree) tree).symbol();
          assertThat(symbol.isOverridable()).isEqualTo(methodOverridableByLine.get(line));
        }

      }), Collections.singletonList(new File("target/test-classes")), null));
  }

