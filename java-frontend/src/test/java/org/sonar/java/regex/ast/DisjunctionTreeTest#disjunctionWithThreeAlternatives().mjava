  @Test
  void disjunctionWithThreeAlternatives() {
    DisjunctionTree disjunction = assertType(DisjunctionTree.class, assertSuccessfulParse("a|b|c"));
    assertListElements(disjunction.getAlternatives(),
      first -> assertCharacter('a', first),
      second -> assertCharacter('b', second),
      third -> assertCharacter('c', third)
    );
    assertListElements(disjunction.getOrOperators(),
      first -> assertJavaCharacter(1, '|', first),
      second -> assertJavaCharacter(3, '|', second)
    );

    FinalState finalState = assertType(FinalState.class, disjunction.continuation());
    assertEquals(AutomatonState.TransitionType.EPSILON, disjunction.incomingTransitionType());
    assertEquals(disjunction.getAlternatives(), disjunction.successors());
    assertListElements(disjunction.successors(),
      first -> testAlternative(first, finalState),
      second -> testAlternative(second, finalState),
      third -> testAlternative(third, finalState)
    );
  }

