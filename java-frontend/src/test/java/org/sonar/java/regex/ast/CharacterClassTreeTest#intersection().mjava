  @Test
  void intersection() {
    RegexTree regex = assertSuccessfulParse("[a-z&&[^g-i]&]", Pattern.MULTILINE);
    CharacterClassIntersectionTree intersection = assertType(CharacterClassIntersectionTree.class, assertCharacterClass(false, regex));
    assertKind(CharacterClassElementTree.Kind.INTERSECTION, intersection);
    assertThat(intersection.is(CharacterClassElementTree.Kind.UNION)).isFalse();
    assertThat(intersection.activeFlags().getMask()).isEqualTo(Pattern.MULTILINE);
    assertListElements(intersection.getAndOperators(),
      first -> assertToken(4, "&&", first)
    );
    assertListElements(intersection.getCharacterClasses(),
      first -> assertCharacterRange('a', 'z', first),
      second -> {
        CharacterClassUnionTree union = assertType(CharacterClassUnionTree.class, second);
        assertListElements(union.getCharacterClasses(),
          first -> assertCharacterRange('g', 'i', assertCharacterClass(true, first)),
          last -> assertPlainCharacter('&', last)
        );
      }
    );
  }

