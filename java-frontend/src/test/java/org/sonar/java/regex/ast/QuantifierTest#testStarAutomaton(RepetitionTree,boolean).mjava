  private static void testStarAutomaton(RepetitionTree repetition, boolean reluctant) {
    EndOfRepetitionState endOfRep = assertType(EndOfRepetitionState.class, repetition.continuation());
    assertEquals(repetition.activeFlags(), endOfRep.activeFlags());
    FinalState finalState = assertType(FinalState.class, endOfRep.continuation());
    assertSingleEdge(endOfRep, finalState, AutomatonState.TransitionType.EPSILON);
    RegexTree x = repetition.getElement();
    assertEquals(AutomatonState.TransitionType.EPSILON, repetition.incomingTransitionType());
    if (reluctant) {
      assertListElements(repetition.successors(),
        assertEdge(endOfRep, AutomatonState.TransitionType.EPSILON),
        assertEdge(x, AutomatonState.TransitionType.CHARACTER)
      );
    } else {
      assertListElements(repetition.successors(),
        assertEdge(x, AutomatonState.TransitionType.CHARACTER),
        assertEdge(endOfRep, AutomatonState.TransitionType.EPSILON)
      );
    }
    assertSingleEdge(x, repetition, AutomatonState.TransitionType.EPSILON);
  }

