  @Test
  void same_result_if_same_tree_is_provided() throws Exception {
    CompilationUnitTree cut = JParserTestUtils.parse(
      "class A {\n"
        + "  String s0 = \"abc\";\n"
        + "  String s1 = \"abc\";\n"
        + "}");
    ClassTree a = (ClassTree) cut.types().get(0);
    List<Tree> fields = a.members();
    LiteralTree s0 = (LiteralTree) ((VariableTree) fields.get(0)).initializer();
    LiteralTree s1 = (LiteralTree) ((VariableTree) fields.get(1)).initializer();

    RegexCache cache = new RegexCache();
    RegexParseResult resultForS0 = cache.getRegexForLiterals(s0);
    RegexParseResult resultForS1 = cache.getRegexForLiterals(s1);

    assertThat(s0.value()).isEqualTo(s1.value());
    assertThat(resultForS0).isNotEqualTo(resultForS1);

    // same input, same result
    assertThat(resultForS0).isSameAs(cache.getRegexForLiterals(s0));
    assertThat(resultForS1).isSameAs(cache.getRegexForLiterals(s1));
  }

