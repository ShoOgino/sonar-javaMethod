  @ParameterizedTest
  @MethodSource("provideDisjunctionWithTwoAlternatives")
  void disjunctionWithTwoAlternatives(String regex, int expectedCharacterIndex) {
    DisjunctionTree disjunction = assertType(DisjunctionTree.class, assertSuccessfulParse(regex));
    assertListElements(disjunction.getAlternatives(),
      first -> assertPlainCharacter('a', first),
      second -> assertPlainCharacter('b', second)
    );
    assertListElements(disjunction.getOrOperators(),
      first -> assertJavaCharacter(expectedCharacterIndex, '|', first)
    );

    FinalState finalState = assertType(FinalState.class, disjunction.continuation());
    assertEquals(AutomatonState.TransitionType.EPSILON, disjunction.incomingTransitionType());
    assertEquals(disjunction.getAlternatives(), disjunction.successors());
    assertListElements(disjunction.successors(),
      first -> testAlternative(first, finalState),
      second -> testAlternative(second, finalState)
    );
  }

