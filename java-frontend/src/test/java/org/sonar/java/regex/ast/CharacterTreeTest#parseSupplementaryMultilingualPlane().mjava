  @Test
  void parseSupplementaryMultilingualPlane() {
    CharacterTree escapedUnicodeCodePointTree = assertType(CharacterTree.class, assertSuccessfulParse("\\\\uD83D\\\\uDE02"));
    assertEquals("\uD83D\uDE02", escapedUnicodeCodePointTree.characterAsString());

    CharacterTree escapedUnicodeCodePointTree2 = assertType(CharacterTree.class, assertSuccessfulParse("\\uD83D\\uDE02"));
    assertEquals("\uD83D\uDE02", escapedUnicodeCodePointTree2.characterAsString());


    CharacterTree unicodeCodePointTree = assertType(CharacterTree.class, assertSuccessfulParse("\uD83D\uDE02"));
    assertEquals("\uD83D\uDE02", unicodeCodePointTree.characterAsString());

    assertType(SequenceTree.class, assertSuccessfulParse("\uD83D\uD83D"));
  }

