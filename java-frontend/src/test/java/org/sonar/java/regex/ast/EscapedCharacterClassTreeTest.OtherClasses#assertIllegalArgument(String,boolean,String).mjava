    private void assertIllegalArgument(String regex, boolean includesProperty, String message) {
      RegexSource source = makeSource(regex);
      RegexLexer lexer = source.createLexer();
      SourceCharacter backslash = lexer.getCurrent();
      lexer.moveNext();
      SourceCharacter type = lexer.getCurrent();
      FlagSet activeFlags = new FlagSet();
      Executable createTree;
      if (includesProperty) {
        lexer.moveNext();
        SourceCharacter openingBrace = lexer.getCurrent();
        lexer.moveNext(2);
        SourceCharacter closingBrace = lexer.getCurrent();
        createTree = () -> new EscapedCharacterClassTree(source, backslash, type, openingBrace, closingBrace, activeFlags);
      } else {
        createTree = () -> new EscapedCharacterClassTree(source, backslash, type, activeFlags);
      }
      assertThrows(IllegalArgumentException.class, createTree, message);
    }

