  @Test
  public void switch_statement() {
    CFG cfg = buildCFG("void foo(int i, int j, int k) {\n" +
        "    switch (i==-1 ? j:k) {\n" +
        "      default:;\n" +
        "    }\n" +
        "  }");

    assertThat(cfg.blocks().get(0).id()).isEqualTo(5);
    cfg = buildCFG(
      "void fun(int foo) { int a; switch(foo) { case 1: System.out.println(bar);case 2: System.out.println(qix);break; default: System.out.println(baz);} }");
    CFGChecker cfgChecker = checker(
      block(
        element(INT_LITERAL, "1"),
        element(Tree.Kind.IDENTIFIER, "System"),
        element(Tree.Kind.MEMBER_SELECT),
        element(Tree.Kind.IDENTIFIER, "bar"),
        element(Tree.Kind.METHOD_INVOCATION)
        ).hasCaseGroup().successors(3),
      block(
        element(INT_LITERAL, "2"),
        element(Tree.Kind.IDENTIFIER, "System"),
        element(Tree.Kind.MEMBER_SELECT),
        element(Tree.Kind.IDENTIFIER, "qix"),
        element(Tree.Kind.METHOD_INVOCATION)
        ).hasCaseGroup().terminator(Tree.Kind.BREAK_STATEMENT).successors(0),
      block(
        element(Tree.Kind.IDENTIFIER, "System"),
        element(Tree.Kind.MEMBER_SELECT),
        element(Tree.Kind.IDENTIFIER, "baz"),
        element(Tree.Kind.METHOD_INVOCATION)
        ).hasCaseGroup().successors(0),
      block(
        element(Tree.Kind.VARIABLE, "a"),
        element(Tree.Kind.IDENTIFIER, "foo")
        ).terminator(Tree.Kind.SWITCH_STATEMENT).successors(2, 3, 4));
    cfgChecker.check(cfg);
  }

