  @Test
  public void try_statement_with_checked_exceptions() {
    CFG cfg = buildCFG(
      " void foo(Object result) {" +
        "  try { " +
        "       result = new Plop();" +
        "   } catch(IllegalAccessException iae) {" +
        "        try{ " +
        "            result = new Plop();" +
        "        } catch(IllegalAccessException iae) {" +
        "        }" +
        "      result.toString();   " +
        "    }" +
        "}" +
        "" +
        "class Plop{" +
        "   Plop() throws IllegalAccessException{}" +
        "}" );

    CFGChecker cfgChecker = checker(
      block(
        element(Tree.Kind.TRY_STATEMENT)).successors(6),
      block(
        element(Kind.NEW_CLASS)).successors(1).exceptions(0, 5),
      block(
        element(Kind.VARIABLE, "iae"),
        element(Tree.Kind.TRY_STATEMENT)).successors(4),
      block(
        element(Kind.NEW_CLASS)).successors(3).exceptions(0, 2),
      block(
        element(Kind.ASSIGNMENT)
      ).successors(2),
      block(
        element(Kind.IDENTIFIER, "result"),
        element(Kind.METHOD_INVOCATION)
        ).successors(0).exceptions(0),
      block(
        element(Kind.ASSIGNMENT)
      ).successors(0)
      );
    cfgChecker.check(cfg);

  }

