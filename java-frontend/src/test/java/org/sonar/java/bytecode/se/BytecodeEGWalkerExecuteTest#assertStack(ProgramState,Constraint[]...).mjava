  private void assertStack(ProgramState ps, Constraint[]... constraints) {
    ProgramState.Pop pop = ps.unstackValue(constraints.length);
    assertEmptyStack(pop.state);
    assertThat(pop.valuesAndSymbols).hasSize(constraints.length);
    List<SymbolicValue> symbolicValues = pop.values;
    int idx = 0;
    for (SymbolicValue sv : symbolicValues) {
      ConstraintsByDomain constraintsByDomain = ps.getConstraints(sv);
      for (Constraint expectedConstraint : constraints[idx]) {
        if (expectedConstraint != null) {
          Class<? extends Constraint> expectedConstraintDomain = expectedConstraint.getClass();
          Constraint constraint = constraintsByDomain.get(expectedConstraintDomain);
          assertThat(constraint).isEqualTo(expectedConstraint);
          constraintsByDomain = constraintsByDomain.remove(expectedConstraintDomain);
        } else {
          assertThat(constraintsByDomain).isNull();
        }
      }
      if(constraintsByDomain != null) {
        assertThat(constraintsByDomain.isEmpty()).isTrue();
      }
      idx++;
    }
  }

