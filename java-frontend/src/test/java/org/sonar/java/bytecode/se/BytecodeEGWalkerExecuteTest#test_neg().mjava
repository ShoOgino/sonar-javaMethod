  @Test
  void test_neg() throws Exception {
    SymbolicValue sv = new SymbolicValue();

    int[] negOpcodes = new int[] {Opcodes.INEG, Opcodes.LNEG, Opcodes.FNEG, Opcodes.DNEG};
    ProgramState initState = ProgramState.EMPTY_STATE.stackValue(sv);
    for (int negOpcode : negOpcodes) {
      ProgramState programState = execute(new Instruction(negOpcode), initState);
      assertStack(programState, new Constraint[][] {{ObjectConstraint.NOT_NULL}});
      assertThat(programState.peekValue()).isNotEqualTo(sv);
    }

    for (int opcode : negOpcodes) {
      assertThatThrownBy(() -> execute(new Instruction(opcode), ProgramState.EMPTY_STATE))
        .hasMessage(Printer.OPCODES[opcode] + " needs 1 values on stack");
    }
  }

