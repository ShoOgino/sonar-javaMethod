  @Test
  public void testIsAccessor() {
    assertThat(javaBean.getMethod("getName()Ljava/lang/String;").isAccessor()).isTrue();
    assertThat(javaBean.getMethod("getNameIndirect()Ljava/lang/String;").isAccessor()).isTrue();
    assertThat(javaBean.getMethod("getNameOrEmpty()Ljava/lang/String;").isAccessor()).isTrue();
    assertThat(javaBean.getMethod("setName(Ljava/lang/String;)V").isAccessor()).isTrue();
    assertThat(javaBean.getMethod("setFrench(Z)V").isAccessor()).isTrue();
    assertThat(javaBean.getMethod("isFrench()Z").isAccessor()).isTrue();
    assertThat(javaBean.getMethod("anotherMethod()V").isAccessor()).isFalse();
    assertThat(javaBean.getMethod("addFirstName(Ljava/lang/String;)V").isAccessor()).isTrue();
    assertThat(javaBean.getMethod("getNameOrDefault()Ljava/lang/String;").isAccessor()).isTrue();
    assertThat(javaBean.getMethod("accessorWithABunchOfCalls()V").isAccessor()).isTrue();
    assertThat(javaBean.getMethod("accessNameAndDumpStuffSoNotAccessor()V").isAccessor()).isFalse();
    assertThat(javaBean.getMethod("iShouldBeAStaticSetter()V").isAccessor()).isFalse();
    assertThat(javaBean.getMethod("getFirstName()Ljava/lang/String;").isAccessor()).isTrue();
    assertThat(javaBean.getMethod("getFirstNameAndOneArgument(Ljava/lang/String;)Ljava/lang/String;").isAccessor()).isTrue();
    assertThat(javaBean.getMethod("recursiveAbs(I)I").isAccessor()).isFalse();
    assertThat(javaBean.getMethod("recursiveAbsNotAccessor(I)I").isAccessor()).isFalse();
    assertThat(javaBean.getMethod("recursiveAbsSameIncrementA(I)I").isAccessor()).isFalse();
    assertThat(javaBean.getMethod("recursiveAbsDifferentIncrementA(I)I").isAccessor()).isFalse();
  }

