  @Test
  public void zeroness_check_negations() {
    SymbolicValue sv1 = new SymbolicValue();

    int[] opCodes = {Opcodes.DNEG, Opcodes.FNEG, Opcodes.INEG, Opcodes.LNEG};

    ProgramState zeroPs = ProgramState.EMPTY_STATE;
    zeroPs = zeroPs.stackValue(sv1).addConstraints(sv1, ConstraintsByDomain.empty().put(ZeroConstraint.ZERO).put(BooleanConstraint.FALSE));

    ProgramState nonZeroPs = ProgramState.EMPTY_STATE;
    nonZeroPs = nonZeroPs.stackValue(sv1).addConstraints(sv1, ConstraintsByDomain.empty().put(ZeroConstraint.NON_ZERO).put(BooleanConstraint.TRUE));

    for (int negOpCode : opCodes) {
      Instruction instruction = new Instruction(negOpCode);
      ProgramState ps = execute(instruction, zeroPs);
      SymbolicValue peekValue = ps.peekValue();
      assertThat(peekValue).isEqualTo(sv1);
      ConstraintsByDomain constraints = ps.getConstraints(peekValue);
      assertThat(constraints.get(ZeroConstraint.class)).isEqualTo(ZeroConstraint.ZERO);
      assertThat(constraints.get(BooleanConstraint.class)).isEqualTo(BooleanConstraint.FALSE);

      ps = execute(instruction, nonZeroPs);
      peekValue = ps.peekValue();
      assertThat(peekValue).isNotEqualTo(sv1);
      constraints = ps.getConstraints(peekValue);
      assertThat(constraints.get(ZeroConstraint.class)).isEqualTo(ZeroConstraint.NON_ZERO);
      assertThat(constraints.get(BooleanConstraint.class)).isNull();
    }
  }

