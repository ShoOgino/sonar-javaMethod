  @Test
  public void zeroness_check_add() {
    SymbolicValue sv1 = new SymbolicValue();
    SymbolicValue sv2 = new SymbolicValue();

    int[] opCodes = {Opcodes.DADD, Opcodes.FADD, Opcodes.IADD, Opcodes.LADD};

    ProgramState zeroZeroPs = ProgramState.EMPTY_STATE;
    zeroZeroPs = zeroZeroPs.stackValue(sv1).addConstraints(sv1, ConstraintsByDomain.empty().put(ZeroConstraint.ZERO).put(BooleanConstraint.FALSE));
    zeroZeroPs = zeroZeroPs.stackValue(sv2).addConstraints(sv2, ConstraintsByDomain.empty().put(ZeroConstraint.ZERO).put(BooleanConstraint.FALSE));

    ProgramState zeroNonZeroPs = ProgramState.EMPTY_STATE;
    zeroNonZeroPs = zeroNonZeroPs.stackValue(sv1).addConstraints(sv1, ConstraintsByDomain.empty().put(ZeroConstraint.ZERO).put(BooleanConstraint.FALSE));
    zeroNonZeroPs = zeroNonZeroPs.stackValue(sv2).addConstraints(sv2, ConstraintsByDomain.empty().put(ZeroConstraint.NON_ZERO).put(BooleanConstraint.TRUE));

    ProgramState nonZeroZeroPs = ProgramState.EMPTY_STATE;
    nonZeroZeroPs = nonZeroZeroPs.stackValue(sv1).addConstraints(sv1, ConstraintsByDomain.empty().put(ZeroConstraint.NON_ZERO).put(BooleanConstraint.TRUE));
    nonZeroZeroPs = nonZeroZeroPs.stackValue(sv2).addConstraints(sv2, ConstraintsByDomain.empty().put(ZeroConstraint.ZERO).put(BooleanConstraint.FALSE));

    ProgramState nonZeroNonZeroPs = ProgramState.EMPTY_STATE;
    nonZeroNonZeroPs = nonZeroNonZeroPs.stackValue(sv1).addConstraints(sv1, ConstraintsByDomain.empty().put(ZeroConstraint.NON_ZERO));
    nonZeroNonZeroPs = nonZeroNonZeroPs.stackValue(sv2).addConstraints(sv2, ConstraintsByDomain.empty().put(ZeroConstraint.NON_ZERO));

    for (int addOpCode : opCodes) {
      Instruction instruction = new Instruction(addOpCode);
      ProgramState ps = execute(instruction, zeroZeroPs);
      SymbolicValue peekValue = ps.peekValue();
      assertThat(peekValue).isEqualTo(sv2);
      ConstraintsByDomain constraints = ps.getConstraints(peekValue);
      assertThat(constraints.get(ZeroConstraint.class)).isEqualTo(ZeroConstraint.ZERO);
      assertThat(constraints.get(BooleanConstraint.class)).isEqualTo(BooleanConstraint.FALSE);

      ps = execute(instruction, zeroNonZeroPs);
      peekValue = ps.peekValue();
      assertThat(peekValue).isEqualTo(sv2);
      constraints = ps.getConstraints(peekValue);
      assertThat(constraints.get(ZeroConstraint.class)).isEqualTo(ZeroConstraint.NON_ZERO);
      assertThat(constraints.get(BooleanConstraint.class)).isEqualTo(BooleanConstraint.TRUE);

      ps = execute(instruction, nonZeroZeroPs);
      peekValue = ps.peekValue();
      assertThat(peekValue).isEqualTo(sv1);
      constraints = ps.getConstraints(peekValue);
      assertThat(constraints.get(ZeroConstraint.class)).isEqualTo(ZeroConstraint.NON_ZERO);
      assertThat(constraints.get(BooleanConstraint.class)).isEqualTo(BooleanConstraint.TRUE);

      ps = execute(instruction, nonZeroNonZeroPs);
      peekValue = ps.peekValue();
      assertThat(peekValue).isNotIn(sv1, sv2);
      constraints = ps.getConstraints(peekValue);
      assertThat(constraints.get(ZeroConstraint.class)).isNull();
      assertThat(constraints.get(BooleanConstraint.class)).isNull();
    }
  }

