  @Test
  void test_compare_instructions() {
    int[] opcodes = {Opcodes.IF_ICMPEQ, Opcodes.IF_ICMPNE, Opcodes.IF_ICMPLT, Opcodes.IF_ICMPGE, Opcodes.IF_ACMPEQ, Opcodes.IF_ACMPNE};
    SymbolicValue left = new SymbolicValue();
    SymbolicValue right = new SymbolicValue();
    for (int opcode : opcodes) {
      ProgramState programState = walker.branchingState(new Instruction(opcode), ProgramState.EMPTY_STATE.stackValue(left).stackValue(right));
      RelationalSymbolicValue relSV = (RelationalSymbolicValue) programState.peekValue();
      assertThat(relSV.getLeftOp()).isSameAs(left);
      assertThat(relSV.getRightOp()).isSameAs(right);
    }

    // these opcodes inverse operator and swap operands
    int[] swapOperandsOpcodes = {Opcodes.IF_ICMPLE, Opcodes.IF_ICMPGT};
    for (int opcode : swapOperandsOpcodes) {
      ProgramState programState = walker.branchingState(new Instruction(opcode), ProgramState.EMPTY_STATE.stackValue(left).stackValue(right));
      RelationalSymbolicValue relSV = (RelationalSymbolicValue) programState.peekValue();
      assertThat(relSV.getRightOp()).isSameAs(left);
      assertThat(relSV.getLeftOp()).isSameAs(right);
    }
  }

