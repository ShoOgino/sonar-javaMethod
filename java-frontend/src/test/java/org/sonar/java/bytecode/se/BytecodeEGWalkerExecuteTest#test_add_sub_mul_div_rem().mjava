  @Test
  void test_add_sub_mul_div_rem() throws Exception {
    int[] opcodes = new int[] {
      Opcodes.IADD, Opcodes.LADD, Opcodes.FADD, Opcodes.DADD,
      Opcodes.ISUB, Opcodes.LSUB, Opcodes.FSUB, Opcodes.DSUB,
      Opcodes.IMUL, Opcodes.LMUL, Opcodes.FMUL, Opcodes.DMUL,
      Opcodes.IDIV, Opcodes.LDIV, Opcodes.FDIV, Opcodes.DDIV,
      Opcodes.IREM, Opcodes.LREM, Opcodes.FREM, Opcodes.DREM,
    };
    assertConsume2produceNotNull(opcodes);

    assertThrowWhenInvalidStack(opcodes, " needs 2 values on stack");
  }

