  @Test
  public void test_conversion() throws Exception {
    int[] toLongOrDouble = {Opcodes.I2D, Opcodes.I2L, Opcodes.F2D, Opcodes.F2L};
    for (int opcode : toLongOrDouble) {
      SymbolicValue sv = new SymbolicValue();
      ProgramState initialPs = ProgramState.EMPTY_STATE.stackValue(sv);
      ProgramState ps = execute(new Instruction(opcode), initialPs);
      assertThat(isDoubleOrLong(ps, sv)).isTrue();
      assertThatThrownBy(() -> execute(new Instruction(opcode))).hasMessage(Printer.OPCODES[opcode] + " needs value on stack");
    }
    int[] fromLongOrDouble = {Opcodes.D2F, Opcodes.D2I, Opcodes.L2F, Opcodes.L2I};
    for (int opcode : fromLongOrDouble) {
      SymbolicValue sv = new SymbolicValue();
      ProgramState initialPs = ProgramState.EMPTY_STATE.stackValue(sv);
      initialPs = setDoubleOrLong(initialPs, sv, true);
      ProgramState ps = execute(new Instruction(opcode), initialPs);
      assertThat(isDoubleOrLong(ps, sv)).isFalse();
      assertThatThrownBy(() -> execute(new Instruction(opcode))).hasMessage(Printer.OPCODES[opcode] + " needs value on stack");
    }
  }

