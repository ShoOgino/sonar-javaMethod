  @Test
  void test_invoke_dynamic() throws Exception {
    SymbolicValue lambdaArg = new SymbolicValue();
    ProgramState programState = execute(new Instruction.InvokeDynamicInsn("(I)Ljava/util/function/Supplier;"), ProgramState.EMPTY_STATE.stackValue(lambdaArg));
    assertStack(programState, ObjectConstraint.NOT_NULL);
    assertThat(programState.peekValue()).isNotEqualTo(lambdaArg);

    programState = execute(new Instruction.InvokeDynamicInsn("()Ljava/util/function/Supplier;"), ProgramState.EMPTY_STATE);
    assertStack(programState, ObjectConstraint.NOT_NULL);

    assertThatThrownBy(() -> execute(new Instruction.InvokeDynamicInsn("()V"), ProgramState.EMPTY_STATE))
      .hasMessage("Lambda should always evaluate to target functional interface");
  }

