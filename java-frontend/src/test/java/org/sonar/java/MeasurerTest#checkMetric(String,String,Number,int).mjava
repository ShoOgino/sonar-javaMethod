  private void checkMetric(String filename, String metric, @Nullable Number expectedValue, int numberOfMetrics) {
    String relativePath = PathUtils.sanitize(new File(baseDir, filename).getPath());
    TestInputFileBuilder inputFile = new TestInputFileBuilder(context.module().key(), relativePath);
    inputFile.setModuleBaseDir(fs.baseDirPath());
    fs.add(inputFile.build());
    Measurer measurer = new Measurer(fs, context, mock(NoSonarFilter.class));
    JavaSquid squid = new JavaSquid(new JavaVersionImpl(), null, measurer, null, null, new JavaCheck[0]);
    squid.scan(Lists.newArrayList(new File(baseDir, filename)), Collections.emptyList());
    assertThat(context.measures("projectKey:" + relativePath)).hasSize(numberOfMetrics);
    Measure<Serializable> measure = context.measure("projectKey:" + relativePath, metric);
    if (expectedValue == null) {
      assertThat(measure).isNull();
    } else {
      assertThat(measure.value()).isEqualTo(expectedValue);
    }
  }

