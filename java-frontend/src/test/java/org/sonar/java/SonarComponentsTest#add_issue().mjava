  @Test
  public void add_issue() throws Exception {
    JavaCheck expectedCheck = new CustomCheck();
    CheckRegistrar expectedRegistrar = getRegistrar(expectedCheck);

    DefaultFileSystem fileSystem = new DefaultFileSystem(new File(""));
    File file = new File("file.java");
    DefaultInputFile inputFile = new DefaultInputFile("", "file.java");
    inputFile.setLines(45);
    int[] linesOffset = new int[45];
    linesOffset[35] = 12;
    linesOffset[42] = 1;
    inputFile.setOriginalLineOffsets(linesOffset);
    inputFile.setLastValidOffset(420);
    fileSystem.add(inputFile);
    context = mock(SensorContext.class);
    NewIssue newIssue = mock(NewIssue.class);
    when(newIssue.forRule(any(RuleKey.class))).thenReturn(newIssue);
    when(newIssue.gap(anyDouble())).thenReturn(newIssue);
    when(context.newIssue()).thenReturn(newIssue);

    NewIssueLocation newIssueLocation = mock(NewIssueLocation.class);
    when(newIssue.newLocation()).thenReturn(newIssueLocation);
    when(newIssueLocation.at(any(TextRange.class))).thenReturn(newIssueLocation);
    when(newIssueLocation.on(any(InputComponent.class))).thenReturn(newIssueLocation);


    when(this.checks.all()).thenReturn(Lists.newArrayList(expectedCheck)).thenReturn(new ArrayList<>());
    when(this.checks.ruleKey(any(JavaCheck.class))).thenReturn(mock(RuleKey.class));

    SonarComponents sonarComponents = new SonarComponents(fileLinesContextFactory, resourcePerspectives, fileSystem, null, null, checkFactory, new CheckRegistrar[] {
      expectedRegistrar
    });
    sonarComponents.setSensorContext(context);

    sonarComponents.addIssue(file, expectedCheck, -5, "message on wrong line", null);
    sonarComponents.addIssue(file, expectedCheck, 42, "message on line", 1.0);
    sonarComponents.addIssue(new File("."), expectedCheck, 42, "message on line", 1.0);
    sonarComponents.addIssue(new File("unknown_file"), expectedCheck, 42, "message on line", 1.0);
    sonarComponents.reportIssue(new AnalyzerMessage(expectedCheck, file, 35, "other message", 0));
    verify(context, times(3)).newIssue();
  }

