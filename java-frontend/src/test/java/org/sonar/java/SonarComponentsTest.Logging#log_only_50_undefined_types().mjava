    @Test
    void log_only_50_undefined_types() {
      String source = generateSource(26);

      // artificially populated the semantic errors with 26 unknown types and 52 errors
      sonarComponents.collectUndefinedTypes(((JavaTree.CompilationUnitTreeImpl) JParserTestUtils.parse(source)).sema.undefinedTypes());

      // triggers log
      sonarComponents.logUndefinedTypes();

      assertThat(logTester.logs(LoggerLevel.WARN)).containsExactly("Unresolved imports/types have been detected during analysis. Enable DEBUG mode to see them.");

      List<String> debugLogs = logTester.logs(LoggerLevel.DEBUG);
      assertThat(debugLogs).hasSize(1);

      String list = debugLogs.get(0);
      assertThat(list)
        .startsWith("First 50 unresolved imports/types:")
        .endsWith("- ...")
        .doesNotContain("- Y cannot be resolved to a type")
        .doesNotContain("- Z cannot be resolved to a type");
      for (int i = 0; i < 26; i++) {
        char typeName = (char) ('A' + i);
        assertThat(list).contains(String.format("- The import org.package%s cannot be resolved", formatter.format(i + 1)));
        if (typeName < 'Y') {
          assertThat(list).contains(String.format("- %c cannot be resolved to a type", typeName));
        }
      }
    }

