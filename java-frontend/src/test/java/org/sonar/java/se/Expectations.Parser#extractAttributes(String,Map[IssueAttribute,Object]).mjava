    private String extractAttributes(String comment, Map<IssueAttribute, Object> attr) {
      String attributesSubstr = StringUtils.substringBetween(comment, "[[", "]]");
      if (StringUtils.isEmpty(attributesSubstr)) {
        return attributesSubstr;
      }
      Iterable<String> attributes = Splitter.on(";").split(attributesSubstr);
      for (String attribute : attributes) {
        String attributeValue = "";
        if (attribute.indexOf('=') != -1) {
          String[] split = StringUtils.split(attribute, '=');
          attribute = split[0];
          attributeValue = split.length == 2 ? split[1] : "";
        }
        if (ATTRIBUTE_MAP.containsKey(attribute)) {
          IssueAttribute issueAttribute = ATTRIBUTE_MAP.get(attribute);
          Object value = issueAttribute.setter.apply(attributeValue);
          attr.put(issueAttribute, value);
        } else {
          Fail.fail("// Noncompliant attributes not valid: " + attributesSubstr);
        }
      }
      return attributesSubstr;
    }

