  @Test
  void test_constraint_copy() throws Exception {
    ProgramState ps = ProgramState.EMPTY_STATE;
    SymbolicValue a = new SymbolicValue();
    SymbolicValue b = new SymbolicValue();
    List<ProgramState> newProgramStates = a.setConstraint(ps, ZERO);
    ps = Iterables.getOnlyElement(newProgramStates);
    // 0 >= b
    SymbolicValue aGEb = relationalSV(Tree.Kind.GREATER_THAN_OR_EQUAL_TO, b, a);
    newProgramStates = aGEb.setConstraint(ps, TRUE);
    ps = Iterables.getOnlyElement(newProgramStates);

    // Zero constraint should stay when Zero is >= to SV without any constraint
    assertThat(ps.getConstraint(a, DivisionByZeroCheck.ZeroConstraint.class)).isEqualTo(ZERO);
    assertThat(ps.getConstraint(b, DivisionByZeroCheck.ZeroConstraint.class)).isNull();
  }

