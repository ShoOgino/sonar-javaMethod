  @Test
  public void compound_assignment_should_create_new_value_on_stack() throws Exception {
    JavaCheckVerifier.verifyNoIssue("src/test/files/se/CompoundAssignmentExecution.java", new SECheck() {

      private SymbolicValue rhsValue;

      @Override
      public ProgramState checkPreStatement(CheckerContext context, Tree syntaxNode) {
        ProgramState state = context.getState();
        if (syntaxNode instanceof AssignmentExpressionTree) {
          rhsValue = state.peekValue();
        }
        return state;
      }

      @Override
      public ProgramState checkPostStatement(CheckerContext context, Tree syntaxNode) {
        ProgramState state = context.getState();
        if (syntaxNode instanceof AssignmentExpressionTree) {
          assertThat(state.peekValue()).isNotEqualTo(rhsValue);
          // there should be only one value after compound assignment, result of compound operator
          assertThatThrownBy(() -> state.peekValue(1)).isInstanceOf(IllegalStateException.class);
        }
        return state;
      }
    });
  }

