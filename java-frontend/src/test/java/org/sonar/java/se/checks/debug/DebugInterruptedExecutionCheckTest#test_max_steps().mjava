  @Test
  public void test_max_steps() {
    DebugInterruptedExecutionCheck check = new DebugInterruptedExecutionCheck();
    BehaviorCache behaviorCache = new BehaviorCache(new SquidClassLoader(new ArrayList<>()));
    SymbolicExecutionVisitor sev = new SymbolicExecutionVisitor(Collections.singletonList(check), behaviorCache) {
      @Override
      protected ExplodedGraphWalker getWalker() {
        return new ExplodedGraphWalker(Collections.singletonList(check), behaviorCache, (SemanticModel) context.getSemanticModel()) {
          @Override
          protected int maxSteps() {
            return 20;
          }
        };
      }

      @Override
      public void scanFile(JavaFileScannerContext context) {
        super.scanFile(context);
        // the check has been executed, but we still need to call the scan manually to report the issues
        check.scanFile(context);
      }
    };
    JavaCheckVerifier.verify("src/test/files/se/debug/DebugInterruptedExecutionCheck.java", sev);
  }

