  @Test
  void test_max_number_starting_states_boundaries() throws Exception {
    CheckVerifier.newVerifier()
      .onFile("src/test/files/se/StartingStates1024.java")
      .withCheck(new SymbolicExecutionVisitor(Collections.emptyList(), new BehaviorCache(new SquidClassLoader(new ArrayList<>()))) {
        @Override
        public void visitNode(Tree tree) {
          try {
            MethodTree methodTree = (MethodTree) tree;
            new ExplodedGraphWalker(this.behaviorCache, (Sema) context.getSemanticModel()).visitMethod(methodTree, methodBehaviorForSymbol(methodTree.symbol()));
          } catch (ExplodedGraphWalker.MaximumStartingStatesException exception) {
            fail("Should have been able to generate 1024 states!");
          }
        }
      })
      .withClassPath(SETestUtils.CLASS_PATH)
      .verifyNoIssues();
  }

