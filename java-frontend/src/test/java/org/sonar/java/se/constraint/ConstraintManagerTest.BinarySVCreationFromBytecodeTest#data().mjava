    @Parameters(name = "Opcode:{0}-{1}")
    public static Collection<Object[]> data() {
      ImmutableList.Builder<Object[]> b = ImmutableList.builder();
      b.add(new Object[] {Opcodes.IF_ICMPEQ, RelationalSymbolicValue.Kind.EQUAL, false});
      b.add(new Object[] {Opcodes.IF_ACMPEQ, RelationalSymbolicValue.Kind.EQUAL, false});
      b.add(new Object[] {Opcodes.IFEQ, RelationalSymbolicValue.Kind.EQUAL, false});
      b.add(new Object[] {Opcodes.IFNULL, RelationalSymbolicValue.Kind.EQUAL, false});

      b.add(new Object[] {Opcodes.IFNE, RelationalSymbolicValue.Kind.NOT_EQUAL, false});
      b.add(new Object[] {Opcodes.IFNONNULL, RelationalSymbolicValue.Kind.NOT_EQUAL, false});
      b.add(new Object[] {Opcodes.IF_ICMPNE, RelationalSymbolicValue.Kind.NOT_EQUAL, false});
      b.add(new Object[] {Opcodes.IF_ACMPNE, RelationalSymbolicValue.Kind.NOT_EQUAL, false});

      b.add(new Object[] {Opcodes.IF_ICMPLT, RelationalSymbolicValue.Kind.LESS_THAN, false});
      b.add(new Object[] {Opcodes.IFLT, RelationalSymbolicValue.Kind.LESS_THAN, false});

      b.add(new Object[] {Opcodes.IF_ICMPGE, RelationalSymbolicValue.Kind.GREATER_THAN_OR_EQUAL, false});
      b.add(new Object[] {Opcodes.IFGE, RelationalSymbolicValue.Kind.GREATER_THAN_OR_EQUAL, false});

      b.add(new Object[] {Opcodes.IF_ICMPGT, RelationalSymbolicValue.Kind.LESS_THAN, true});
      b.add(new Object[] {Opcodes.IFGT, RelationalSymbolicValue.Kind.LESS_THAN, true});

      b.add(new Object[] {Opcodes.IF_ICMPLE, RelationalSymbolicValue.Kind.GREATER_THAN_OR_EQUAL, true});
      b.add(new Object[] {Opcodes.IFLE, RelationalSymbolicValue.Kind.GREATER_THAN_OR_EQUAL, true});
      return b.build();
    }

