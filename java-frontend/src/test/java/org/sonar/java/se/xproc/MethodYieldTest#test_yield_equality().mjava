  @Test
  void test_yield_equality() {
    MethodBehavior methodBehavior = mockMethodBehavior(1, false);
    MethodYield yield = newMethodYield(methodBehavior);
    assertThat(yield)
      .isNotEqualTo(null)
      .isNotEqualTo(new Object())
      // same instance
      .isEqualTo(yield)
      // method behavior not taken into account
      .isEqualTo(newMethodYield(null))
      // node not taken into account
      .isEqualTo(newMethodYield(mockNode(), methodBehavior))
      // same arity and constraints on parameters but exceptional path
      .isNotEqualTo(new ExceptionalYield(methodBehavior))
      // same arity and constraints on parameters but happy path path
      .isNotEqualTo(new HappyPathYield(methodBehavior));

    ConstraintsByDomain nullConstraint = ConstraintsByDomain.empty().put(ObjectConstraint.NULL);
    MethodYield yield1 = newMethodYield(methodBehavior);
    yield1.parametersConstraints.add(nullConstraint);
    yield1.parametersConstraints.add(ConstraintsByDomain.empty());
    yield1.parametersConstraints.add(nullConstraint);
    MethodYield yield2 = newMethodYield(methodBehavior);
    yield2.parametersConstraints.add(nullConstraint);
    yield2.parametersConstraints.add(nullConstraint);
    yield2.parametersConstraints.add(ConstraintsByDomain.empty());

    assertThat(yield1).isNotEqualTo(yield2);
  }

