  @Test
  public void clear_stack_when_taking_exceptional_path_from_method_invocation() throws Exception {
    SymbolicExecutionVisitor sev = createSymbolicExecutionVisitor("src/test/files/se/CleanStackWhenRaisingException.java");
    MethodBehavior behavior = getMethodBehavior(sev, "foo");
    assertThat(behavior.yields()).hasSize(5);

    behavior.happyPathYields().map(y -> y.resultConstraint()).filter(Objects::nonNull).forEach(c -> assertThat(c.isNull()).isFalse());
    assertThat(behavior.happyPathYields().count()).isEqualTo(2);

    List<ExceptionalYield> exceptionalYields = behavior.exceptionalPathYields().collect(Collectors.toList());
    assertThat(exceptionalYields).hasSize(3);
    assertThat(exceptionalYields.stream().filter(y -> y.exceptionType() == null)).hasSize(1);
    // exception thrown by System.getProperty()
    assertThat(exceptionalYields.stream()
      .filter(y -> y.exceptionType() != null)
      .map(y -> y.exceptionType().fullyQualifiedName()))
        .containsOnly("java.lang.SecurityException", "java.lang.IllegalArgumentException");
  }

