  private void validateAnalyzerMessageAttributes(Map<Expectations.IssueAttribute, Object> attrs, AnalyzerMessage analyzerMessage) {
    Double effortToFix = analyzerMessage.getCost();
    if (effortToFix != null) {
      assertAttributeMatch(effortToFix, attrs, EFFORT_TO_FIX);
    }
    validateLocation(attrs, analyzerMessage.primaryLocation());
    if (attrs.containsKey(SECONDARY_LOCATIONS)) {
      List<AnalyzerMessage> actual = analyzerMessage.flows.stream().map(l -> l.isEmpty() ? null : l.get(0)).filter(Objects::nonNull).collect(Collectors.toList());
      List<Integer> expected = (List<Integer>) attrs.get(SECONDARY_LOCATIONS);
      validateSecondaryLocations(actual, expected);
    }
    if (attrs.containsKey(FLOWS)) {
      validateFlows(analyzerMessage.flows, (List<String>) attrs.get(FLOWS));
    }
  }

