  @Test
  public void literals() {
    assertThat(kindMaps.getLiteral(JavaTokenType.INTEGER_LITERAL)).isSameAs(Tree.Kind.INT_LITERAL);
    assertThat(kindMaps.getLiteral(JavaTokenType.LONG_LITERAL)).isSameAs(Tree.Kind.LONG_LITERAL);
    assertThat(kindMaps.getLiteral(JavaTokenType.FLOAT_LITERAL)).isSameAs(Tree.Kind.FLOAT_LITERAL);
    assertThat(kindMaps.getLiteral(JavaTokenType.DOUBLE_LITERAL)).isSameAs(Tree.Kind.DOUBLE_LITERAL);
    assertThat(kindMaps.getLiteral(JavaKeyword.TRUE)).isSameAs(Tree.Kind.BOOLEAN_LITERAL);
    assertThat(kindMaps.getLiteral(JavaKeyword.FALSE)).isSameAs(Tree.Kind.BOOLEAN_LITERAL);
    assertThat(kindMaps.getLiteral(JavaTokenType.CHARACTER_LITERAL)).isSameAs(Tree.Kind.CHAR_LITERAL);
    assertThat(kindMaps.getLiteral(JavaTokenType.LITERAL)).isSameAs(Tree.Kind.STRING_LITERAL);
    assertThat(kindMaps.getLiteral(JavaKeyword.NULL)).isSameAs(Tree.Kind.NULL_LITERAL);

    thrown.expect(NullPointerException.class);
    thrown.expectMessage("Mapping not found for literal null");
    kindMaps.getLiteral(null);
  }

