  @Test
  void var_type_as_lambda_parameters() {
    JavaTree.CompilationUnitTreeImpl cu = test("class C { java.util.function.BiFunction<Long, Boolean, String> f = (var x, var y) -> x + \",\" + y; }");

    ClassTreeImpl c = (ClassTreeImpl) cu.types().get(0);
    VariableTreeImpl field = (VariableTreeImpl) c.members().get(0);
    LambdaExpressionTree lambda = (LambdaExpressionTree) field.initializer();

    assertThat(field.symbol().type().fullyQualifiedName())
      .isEqualTo("java.util.function.BiFunction");

    VariableTree x = lambda.parameters().get(0);
    assertThat(x.symbol().type().fullyQualifiedName())
      .isEqualTo("java.lang.Long");

    VariableTree y = lambda.parameters().get(1);
    assertThat(y.symbol().type().fullyQualifiedName())
      .isEqualTo("java.lang.Boolean");
  }

