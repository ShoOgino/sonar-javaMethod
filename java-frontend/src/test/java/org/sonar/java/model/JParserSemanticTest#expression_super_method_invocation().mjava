  /**
   * @see org.eclipse.jdt.core.dom.SuperMethodInvocation
   */
  @Test
  void expression_super_method_invocation() {
    JavaTree.CompilationUnitTreeImpl cu = test("class C extends S { Object m() { return super.m(); } } class S { Object m() { return null; } }");
    ClassTreeImpl c = (ClassTreeImpl) cu.types().get(0);
    MethodTreeImpl m = (MethodTreeImpl) c.members().get(0);
    ClassTreeImpl superClass = (ClassTreeImpl) cu.types().get(1);
    MethodTreeImpl superClassMethod = (MethodTreeImpl) superClass.members().get(0);
    ReturnStatementTree s = (ReturnStatementTree) Objects.requireNonNull(m.block()).body().get(0);

    MethodInvocationTreeImpl superMethodInvocation = (MethodInvocationTreeImpl) Objects.requireNonNull(s.expression());
    assertThat(superMethodInvocation.methodBinding)
      .isNotNull()
      .isSameAs(Objects.requireNonNull((MethodTreeImpl) superMethodInvocation.symbol().declaration()).methodBinding)
      .isSameAs(superClassMethod.methodBinding);
    MemberSelectExpressionTreeImpl e2 = (MemberSelectExpressionTreeImpl) superMethodInvocation.methodSelect();
    IdentifierTreeImpl i = (IdentifierTreeImpl) e2.identifier();
    assertThat(i.binding)
      .isSameAs(Objects.requireNonNull((MethodTreeImpl) i.symbol().declaration()).methodBinding)
      .isSameAs(superMethodInvocation.methodBinding);
    assertThat(cu.sema.usages.get(i.binding)).containsOnly(i);
  }

