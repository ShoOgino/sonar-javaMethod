  @Test
  void test() {
    JLabelSymbol symbol = new JLabelSymbol("");
    assertAll(
      () -> assertThrows(UnsupportedOperationException.class, symbol::owner),
      () -> assertThrows(UnsupportedOperationException.class, symbol::type),
      () -> assertThrows(UnsupportedOperationException.class, symbol::isVariableSymbol),
      () -> assertThrows(UnsupportedOperationException.class, symbol::isTypeSymbol),
      () -> assertThrows(UnsupportedOperationException.class, symbol::isMethodSymbol),
      () -> assertThrows(UnsupportedOperationException.class, symbol::isPackageSymbol),
      () -> assertThrows(UnsupportedOperationException.class, symbol::isStatic),
      () -> assertThrows(UnsupportedOperationException.class, symbol::isFinal),
      () -> assertThrows(UnsupportedOperationException.class, symbol::isEnum),
      () -> assertThrows(UnsupportedOperationException.class, symbol::isInterface),
      () -> assertThrows(UnsupportedOperationException.class, symbol::isAbstract),
      () -> assertThrows(UnsupportedOperationException.class, symbol::isPublic),
      () -> assertThrows(UnsupportedOperationException.class, symbol::isPrivate),
      () -> assertThrows(UnsupportedOperationException.class, symbol::isProtected),
      () -> assertThrows(UnsupportedOperationException.class, symbol::isPackageVisibility),
      () -> assertThrows(UnsupportedOperationException.class, symbol::isDeprecated),
      () -> assertThrows(UnsupportedOperationException.class, symbol::isVolatile),
      () -> assertThrows(UnsupportedOperationException.class, symbol::isUnknown),
      () -> assertThrows(UnsupportedOperationException.class, symbol::metadata),
      () -> assertThrows(UnsupportedOperationException.class, symbol::enclosingClass)
    );
  }

