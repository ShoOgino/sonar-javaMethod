  /**
   * Switch Expressions (Preview) http://openjdk.java.net/jeps/354
   *
   * @see org.eclipse.jdt.core.dom.SwitchExpression
   * @see org.eclipse.jdt.core.dom.YieldStatement
   */
  @Test
  public void expression_switch() {
    SwitchExpressionTree tree = (SwitchExpressionTree) expressionOfReturnStatement("class T { Object m() { return switch (0) { default -> 0; case 0 -> 0; }; } }");
    assertThat(tree.kind()).isEqualTo(Tree.Kind.SWITCH_EXPRESSION);
    assertThat(tree.cases()).hasSize(2);
    ExpressionStatementTree expressionStatement = (ExpressionStatementTree) tree.cases().get(0).body().get(0);
    assertThat(expressionStatement.expression().kind()).isEqualTo(Tree.Kind.INT_LITERAL);

    tree = (SwitchExpressionTree) expressionOfReturnStatement("class T { Object m() { return switch (0) { default: yield 0; case 0: yield 0; }; } }");
    assertThat(tree.kind()).isEqualTo(Tree.Kind.SWITCH_EXPRESSION);
    assertThat(tree.cases()).hasSize(2);
    BreakStatementTree breakStatement = (BreakStatementTree) tree.cases().get(0).body().get(0);
    assertThat(breakStatement.breakKeyword().text()).isEqualTo("yield");
    assertThat(breakStatement.value().kind()).isEqualTo(Tree.Kind.INT_LITERAL);
  }

