  /**
   * @see org.eclipse.jdt.core.dom.SwitchExpression
   * @see org.eclipse.jdt.core.dom.YieldStatement
   */
  @Test
  void expression_switch() {
    {
      SwitchExpressionTreeImpl switchExpression = (SwitchExpressionTreeImpl) expression("switch (0) { default: yield 0; }");
      YieldStatementTreeImpl statement = (YieldStatementTreeImpl) switchExpression.cases().get(0).body().get(0);
      assertThat(statement.yieldKeyword().text()).isEqualTo("yield");
      assertThat(statement.expression()).isNotNull();
    }
    {
      SwitchExpressionTreeImpl switchExpression = (SwitchExpressionTreeImpl) expression("switch (0) { default -> 0; case 0, 1 -> 0; }");
      assertThat(switchExpression).isInstanceOf(AbstractTypedTree.class);
      assertThat(switchExpression.symbolType().isUnknown()).isTrue();

      YieldStatementTreeImpl statement = (YieldStatementTreeImpl) switchExpression.cases().get(0).body().get(0);
      assertThat(statement.yieldKeyword()).as("implicit yield-statement").isNull();

      CaseLabelTree caseLabel = switchExpression.cases().get(1).labels().get(0);
      assertThat(caseLabel.colonOrArrowToken().text()).isEqualTo("->");
      assertThat(caseLabel.expressions()).hasSize(2);
    }
  }

