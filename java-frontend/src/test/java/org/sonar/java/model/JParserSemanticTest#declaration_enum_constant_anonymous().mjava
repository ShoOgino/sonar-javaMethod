  /**
   * @see org.eclipse.jdt.core.dom.EnumConstantDeclaration
   */
  @Test
  void declaration_enum_constant_anonymous() {
    JavaTree.CompilationUnitTreeImpl cu = test("enum E { C { }; E(){} }");
    ClassTree e = (ClassTree) cu.types().get(0);
    MethodTreeImpl constructor = (MethodTreeImpl) e.members().get(1);
    VariableTreeImpl c = (VariableTreeImpl) e.members().get(0);
    assertThat(c.variableBinding).isNotNull();
    assertThat(cu.sema.declarations.get(c.variableBinding))
      .isSameAs(c.symbol().declaration())
      .isSameAs(c);

    NewClassTreeImpl initializer = (NewClassTreeImpl) c.initializer();
    ClassTreeImpl enumConstantBody = (ClassTreeImpl) initializer.classBody();
    assertThat(enumConstantBody.typeBinding).isNotNull();
    assertThat(cu.sema.declarations.get(enumConstantBody.typeBinding))
      .isSameAs(enumConstantBody.symbol().declaration())
      .isSameAs(enumConstantBody);

    IdentifierTreeImpl identifier = (IdentifierTreeImpl) initializer.getConstructorIdentifier();
    assertThat(identifier.binding)
      .isNotNull()
      .isSameAs(Objects.requireNonNull((MethodTreeImpl) identifier.symbol().declaration()).methodBinding)
      .isSameAs(constructor.methodBinding);
    assertThat(cu.sema.usages.get(constructor.methodBinding))
      .containsExactlyElementsOf(constructor.symbol().usages())
      .containsOnly(identifier);
  }

