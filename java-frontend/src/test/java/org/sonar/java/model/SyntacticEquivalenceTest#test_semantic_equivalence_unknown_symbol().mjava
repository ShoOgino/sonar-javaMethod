  @Test
  void test_semantic_equivalence_unknown_symbol() {
    CompilationUnitTree compilationUnitTree = compilationUnitTree(
      "class A{" +
        "  void m(Object o) {}" +
        "  void f1(Unknown o) {" +
        "    m(o);" +
        "  }" +
        "  void f2(Unknown o) {" +
        "    unknown(o);" +
        "  }" +
        "}");
    List<Tree> members = ((ClassTree) compilationUnitTree.types().get(0)).members();
    List<StatementTree> f1Body = ((MethodTree) members.get(1)).block().body();
    List<StatementTree> f2Body = ((MethodTree) members.get(2)).block().body();

    assertThat(SyntacticEquivalence.areEquivalent(f1Body, f2Body)).isFalse();
    assertThat(SyntacticEquivalence.areSemanticallyEquivalent(f1Body, f2Body)).isFalse();
    assertThat(SyntacticEquivalence.areSemanticallyEquivalent(f2Body, f1Body)).isFalse();
  }

