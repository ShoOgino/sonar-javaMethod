    @Test
    void qualified_parametrized_super() {
      MethodInvocationTree tree = firstConstructorInvocation("class T { T() { ClassName.<T>super(true, false); } }");
      assertThat(tree).is(Tree.Kind.METHOD_INVOCATION);
      assertThat(tree.arguments()).hasSize(2);
      assertThat(tree.typeArguments()).hasSize(1);

      MemberSelectExpressionTree methodSelect = (MemberSelectExpressionTree) tree.methodSelect();
      assertThat(methodSelect).hasChildrenSize(3);
      assertThat(methodSelect.identifier()).hasName("super");
      assertThat(methodSelect.operatorToken()).is(".");
      assertThat(((IdentifierTree) methodSelect.expression())).hasName("ClassName");
    }

