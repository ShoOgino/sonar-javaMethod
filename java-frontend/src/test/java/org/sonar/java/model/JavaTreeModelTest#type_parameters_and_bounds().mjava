  @Test
  void type_parameters_and_bounds() {
    TypeParameterListTreeImpl tree = (TypeParameterListTreeImpl) firstType("class Foo<T, U extends Object & Number> {}").typeParameters();
    assertThat(tree.openBracketToken()).is("<");
    assertThat(tree.closeBracketToken()).is(">");
    assertThat(tree)
      .hasSize(2)
      .hasSeparatorsSize(1)
      .hasChildrenSize(5);

    TypeParameterTree paramT = tree.get(0);
    assertThat(paramT.identifier()).hasName("T");
    assertThat(paramT.bounds()).isEmpty();
    assertThat(paramT.bounds().separators()).isEmpty();
    assertThat(paramT).hasChildrenSize(1);

    TypeParameterTree paramU = tree.get(1);
    assertThat(paramU.identifier()).hasName("U");
    assertThat(paramU.bounds())
      .hasSize(2)
      .hasSeparatorsSize(1);
    assertThat(((IdentifierTree) paramU.bounds().get(0))).hasName("Object");
    assertThat(((IdentifierTree) paramU.bounds().get(1))).hasName("Number");
    assertThat(paramU).hasChildrenSize(3);
  }

