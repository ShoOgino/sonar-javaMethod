    @Test
    void enclosed_invocation() {
      MethodInvocationTree tree = firstMethodInvocation("class T { T() { TypeName.identifier(true, false); } }");
      assertThat(tree)
        .is(Tree.Kind.METHOD_INVOCATION)
        .hasChildrenSize(2);
      assertThat(tree.arguments()).hasSize(2);
      assertThat(tree.typeArguments()).isNull();

      MemberSelectExpressionTree memberSelectExpression = (MemberSelectExpressionTree) tree.methodSelect();
      assertThat(memberSelectExpression).hasChildrenSize(3);
      assertThat(memberSelectExpression.identifier()).hasName("identifier");
      assertThat(memberSelectExpression.operatorToken()).is(".");
      assertThat(((IdentifierTree) memberSelectExpression.expression())).hasName("TypeName");
    }

