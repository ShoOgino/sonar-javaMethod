  @Test
  public void test_get_assigned_symbol() throws Exception {
    File file = new File("src/test/files/model/ExpressionUtilsTest.java");
    CompilationUnitTree tree = JParserTestUtils.parse(file);
    MethodTree methodTree = (MethodTree) ((ClassTree) tree.types().get(0)).members().get(1);
    List<AssignmentExpressionTree> assignments = findAssignmentExpressionTrees(methodTree);

    // This should reflect method 'mixedReference'.
    assertThat(assignments).hasSize(5);

    assertThat(ExpressionUtils.getAssignedSymbol((MethodInvocationTree) assignments.get(0).expression())).isPresent();
    assertThat(ExpressionUtils.getAssignedSymbol((MethodInvocationTree) assignments.get(1).expression())).isPresent();

    assertThat(ExpressionUtils.getAssignedSymbol((MethodInvocationTree) assignments.get(0).expression()).get()).
    isEqualTo(ExpressionUtils.getAssignedSymbol((MethodInvocationTree) assignments.get(1).expression()).get());

    assertThat(ExpressionUtils.getAssignedSymbol((MethodInvocationTree) assignments.get(2).expression())).isNotPresent();
    assertThat(ExpressionUtils.getAssignedSymbol((MethodInvocationTree) assignments.get(3).expression())).isNotPresent();
    assertThat(ExpressionUtils.getAssignedSymbol((MethodInvocationTree) assignments.get(4).expression())).isNotPresent();

    List<VariableTree> variables = findVariableTrees(methodTree);
    assertThat(variables).hasSize(2);
    assertThat(ExpressionUtils.getAssignedSymbol((MethodInvocationTree) variables.get(1).initializer())).isPresent();

  }

