    @Test
    void intersection_type() {
      TypeCastTree tree = (TypeCastTree) expressionOfReturnStatement("class T { boolean m() { return (Foo<T> & Bar) true; } }");
      assertThat(tree)
        .is(Tree.Kind.TYPE_CAST)
        .hasChildrenSize(6);
      assertThat(tree.openParenToken()).is("(");
      assertThat(tree.type()).is(Tree.Kind.PARAMETERIZED_TYPE);
      assertThat(tree.andToken()).is("&");
      assertThat(tree.bounds()).hasSize(1);
      assertThat(tree.closeParenToken()).is(")");
      assertThat(tree.expression()).is(Tree.Kind.BOOLEAN_LITERAL);
    }

