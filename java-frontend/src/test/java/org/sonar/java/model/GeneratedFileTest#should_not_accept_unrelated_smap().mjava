  @Test
  public void should_not_accept_unrelated_smap() throws Exception {
    String smap = "SMAP\n" +
      "index_jsp.java\n" +
      "JSP\n" +
      "*S JSP\n" +
      "*F\n" +
      "+ 0 index.jsp\n" +
      "index.jsp\n" +
      "*L\n" +
      "1,6:116,0\n" +
      "*E\n";

    SmapFile smapFile = new SmapFile(tmp.resolve("index_jsp.class.smap"), Paths.get(""), new Scanner(smap));
    GeneratedFile generatedFile = new GeneratedFile(tmp.resolve("index_jsp.java"));
    generatedFile.addSmap(smapFile);

    String unrelatedSmap = "SMAP\n" +
      "unrelated.java\n" +
      "JSP\n" +
      "*S JSP\n" +
      "*F\n" +
      "+ 0 index.jsp\n" +
      "index.jsp\n" +
      "*L\n" +
      "1,6:116,0\n" +
      "*E\n";

    SmapFile unrelated = new SmapFile(tmp.resolve("index_jsp.class.smap"), Paths.get(""), new Scanner(unrelatedSmap));
    generatedFile.addSmap(unrelated);
    assertThat(generatedFile.smapFiles).containsExactly(smapFile);
    assertThat(logTester.logs(LoggerLevel.WARN)).containsExactly(format("Invalid smap %s for %s.", tmp.resolve("unrelated.java"), tmp.resolve("index_jsp.java")));
  }

