  /**
   * 15.24. Conditional-Or Operator ||
   */
  @Test
  void conditional_or_expression() {
    String code = "class T { boolean m() { return false || false || true; } }";
    BinaryExpressionTree parent = (BinaryExpressionTree) expressionOfReturnStatement(code);
    assertThat(parent)
      .is(Tree.Kind.CONDITIONAL_OR)
      .hasChildrenSize(3);
    assertThat(parent.leftOperand()).is(Tree.Kind.CONDITIONAL_OR);
    assertThat(parent.operatorToken()).is("||");
    assertThat(parent.rightOperand()).is(Tree.Kind.BOOLEAN_LITERAL);

    BinaryExpressionTree leftChild = (BinaryExpressionTree) parent.leftOperand();
    assertThat(leftChild)
      .is(Tree.Kind.CONDITIONAL_OR)
      .hasChildrenSize(3);
    assertThat(leftChild.leftOperand()).is(Tree.Kind.BOOLEAN_LITERAL);
    assertThat(leftChild.operatorToken()).is("||");
    assertThat(leftChild.rightOperand()).is(Tree.Kind.BOOLEAN_LITERAL);
  }

