  @Test
  public void constructor_calls_assigned_to_same_local_variable() {
    Expression.Variable arg = UCFGBuilder.variableWithId("arg");
    Expression.Variable instance = UCFGBuilder.variableWithId("instance");
    Expression.Variable aux0 = UCFGBuilder.variableWithId("%0");
    Expression.Variable aux1 = UCFGBuilder.variableWithId("%1");
    Expression.Variable aux2 = UCFGBuilder.variableWithId("%2");
    Expression.Variable aux3 = UCFGBuilder.variableWithId("%3");

    UCFG expectedUCFG = UCFGBuilder.createUCFGForMethod("A#method(Ljava/lang/String;)Ljava/lang/Integer;").addMethodParam(arg)
        .addStartingBlock(newBasicBlock("1")
            .assignTo(instance, call("__id").withArgs(variableWithId("\"\"")), new LocationInFile(FILE_KEY, 3,4,3,21))
            .newObject(aux0, "java.lang.Integer", new LocationInFile(FILE_KEY, 4, 19, 4, 26))
            .assignTo(aux1, call("java.lang.Integer#<init>(Ljava/lang/String;)V").withArgs(aux0, arg), new LocationInFile(FILE_KEY, 4,15,4,31))
            .assignTo(instance, call("__id").withArgs(aux0), new LocationInFile(FILE_KEY, 4,4,4,31))
            .newObject(aux2, "java.lang.Integer", new LocationInFile(FILE_KEY, 5, 19, 5, 26))
            .assignTo(aux3, call("java.lang.Integer#<init>(Ljava/lang/String;)V").withArgs(aux2, arg), new LocationInFile(FILE_KEY, 5,15,5,31))
            .assignTo(instance, call("__id").withArgs(aux2), new LocationInFile(FILE_KEY, 5,4,5,31))
            .ret(instance, new LocationInFile(FILE_KEY, 6,4,6,20)))
        .build();
    assertCodeToUCfg("class A { \n" +
        "  Integer method(String arg) {\n" +
        "    Integer instance;\n" +
        "    instance = new Integer(arg);\n" +
        "    instance = new Integer(arg);\n" +
        "    return instance;\n" +
        "  }\n" +
        "}", expectedUCFG);
  }

