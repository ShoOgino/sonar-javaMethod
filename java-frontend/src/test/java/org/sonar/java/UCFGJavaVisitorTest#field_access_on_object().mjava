  @Test
  public void field_access_on_object() {
    Expression.Variable aux0 = variableWithId("%0");
    Expression.Variable aux1 = variableWithId("%1");
    Expression.Variable aux2 = variableWithId("%2");
    UCFG expectedUCFG = UCFGBuilder.createUCFGForMethod("A#method(LA;)Ljava/lang/String;")
        .addBasicBlock(newBasicBlock("1")
            .assignTo(aux0,
                call("__id").withArgs(new Expression.FieldAccess(variableWithId("a"), variableWithId("field"))),
                new LocationInFile(FILE_KEY, 5,11,5,18))
            .assignTo(aux1,
                call("__id").withArgs(new Expression.FieldAccess(new Expression.ClassName("A"), variableWithId("FIELD"))),
                new LocationInFile(FILE_KEY, 5,21,5,28))
          .assignTo(aux2, call("__concat").withArgs(aux0, aux1), new LocationInFile(FILE_KEY, 5,11,5,28))
          .ret(aux2, new LocationInFile(FILE_KEY, 5,4,5,29)))
        .build();
    assertCodeToUCfg("class A {\n" +
        "  String field;\n" +
        "  static String FIELD;\n" +
        "  String method(A a) {\n" +
        "    return a.field + A.FIELD;\n" +
        "  }\n" +
        "}\n", expectedUCFG);
  }

