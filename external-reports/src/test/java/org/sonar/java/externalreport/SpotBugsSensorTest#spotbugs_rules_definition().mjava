  @Test
  public void spotbugs_rules_definition() {
    RulesDefinition.Context context = new RulesDefinition.Context();
    new ExternalRulesDefinition(SpotBugsSensor.RULE_LOADER, SpotBugsSensor.SPOTBUGS_KEY).define(context);
    new ExternalRulesDefinition(SpotBugsSensor.FINDSECBUGS_LOADER, SpotBugsSensor.FINDSECBUGS_KEY).define(context);
    assertThat(context.repositories()).hasSize(2);

    RulesDefinition.Repository repository = context.repository("external_spotbugs");
    assertThat(repository.name()).isEqualTo("SpotBugs");
    assertThat(repository.language()).isEqualTo("java");
    assertThat(repository.isExternal()).isEqualTo(true);
    assertThat(repository.rules().size()).isEqualTo(468);

    RulesDefinition.Rule rule = repository.rule("AM_CREATES_EMPTY_JAR_FILE_ENTRY");
    assertThat(rule).isNotNull();
    assertThat(rule.name()).isEqualTo("Bad practice - Creates an empty jar file entry");
    assertThat(rule.type()).isEqualTo(RuleType.CODE_SMELL);
    assertThat(rule.severity()).isEqualTo("MAJOR");
    assertThat(rule.htmlDescription()).isEqualTo("See description of SpotBugs rule <code>AM_CREATES_EMPTY_JAR_FILE_ENTRY</code> at the " +
      "<a href=\"https://spotbugs.readthedocs.io/en/latest/bugDescriptions.html#AM_CREATES_EMPTY_JAR_FILE_ENTRY\">SpotBugs website</a>.");
    assertThat(rule.debtRemediationFunction().baseEffort()).isEqualTo("5min");

    RulesDefinition.Repository findsecbugsRepo = context.repository("external_findsecbugs");
    assertThat(findsecbugsRepo.name()).isEqualTo("FindSecBugs");
    assertThat(findsecbugsRepo.language()).isEqualTo("java");
    assertThat(findsecbugsRepo.isExternal()).isEqualTo(true);
    repository = context.repository("external_findsecbugs");
    assertThat(repository.rules().size()).isEqualTo(128);
  }

