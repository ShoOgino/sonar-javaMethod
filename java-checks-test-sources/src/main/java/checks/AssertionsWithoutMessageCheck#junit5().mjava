  void junit5() {
    org.junit.jupiter.api.Assertions.assertAll((Executable) null);
    org.junit.jupiter.api.Assertions.assertAll((Collection<Executable>) null);
    org.junit.jupiter.api.Assertions.assertLinesMatch(null, null);
    org.junit.jupiter.api.Assertions.fail(() -> "message");
    org.junit.jupiter.api.Assertions.fail("message", new java.lang.RuntimeException());

    org.junit.jupiter.api.Assertions.assertFalse(false); // Noncompliant [[sc=38;ec=49]] {{Add a message to this assertion.}}
    org.junit.jupiter.api.Assertions.assertFalse(false, "message");
    org.junit.jupiter.api.Assertions.assertTrue(false); // Noncompliant
    org.junit.jupiter.api.Assertions.assertTrue(false, () -> "message");
    org.junit.jupiter.api.Assertions.assertNull(null); // Noncompliant
    org.junit.jupiter.api.Assertions.assertNull(null, "message");
    org.junit.jupiter.api.Assertions.assertNotNull(null); // Noncompliant
    org.junit.jupiter.api.Assertions.assertNotNull(null, "message");
    org.junit.jupiter.api.Assertions.fail(); // Noncompliant
    org.junit.jupiter.api.Assertions.fail(new java.lang.RuntimeException()); // Noncompliant

    org.junit.jupiter.api.Assertions.assertIterableEquals(null, null); // Noncompliant
    org.junit.jupiter.api.Assertions.assertIterableEquals(null, null, "message");
    org.junit.jupiter.api.Assertions.assertIterableEquals(null, null, () -> "messageSupplier");
    org.junit.jupiter.api.Assertions.assertNotEquals((Object) null, null); // Noncompliant
    org.junit.jupiter.api.Assertions.assertNotEquals((Object) null, null, "message");
    org.junit.jupiter.api.Assertions.assertNotSame(null, null); // Noncompliant
    org.junit.jupiter.api.Assertions.assertNotSame(null, null, "message");

    org.junit.jupiter.api.Assertions.assertSame(null, null); // Noncompliant
    org.junit.jupiter.api.Assertions.assertSame(null, null, "message");

    org.junit.jupiter.api.Assertions.assertThrows(null, null); // Noncompliant
    org.junit.jupiter.api.Assertions.assertThrows(null, null, () -> "message");

    org.junit.jupiter.api.Assertions.assertTimeout(null, (Executable) null); // Noncompliant
    org.junit.jupiter.api.Assertions.assertTimeout(null, (Executable) null, "message");

    org.junit.jupiter.api.Assertions.assertTimeoutPreemptively(null, (Executable) null); // Noncompliant
    org.junit.jupiter.api.Assertions.assertTimeoutPreemptively(null, (Executable) null, () -> "message");


    org.junit.jupiter.api.Assertions.assertArrayEquals(new boolean[0], new boolean[0]); // Noncompliant
    org.junit.jupiter.api.Assertions.assertArrayEquals(new boolean[0], new boolean[0], "message");
    org.junit.jupiter.api.Assertions.assertArrayEquals(new float[0], new float[0]); // Noncompliant
    org.junit.jupiter.api.Assertions.assertArrayEquals(new float[0], new float[0], 1f); // Noncompliant
    org.junit.jupiter.api.Assertions.assertArrayEquals(new float[0], new float[0], 1f, "message");
    org.junit.jupiter.api.Assertions.assertArrayEquals(new float[0], new float[0], "message");

    byte b = 0;
    org.junit.jupiter.api.Assertions.assertEquals(b, b); // Noncompliant
    org.junit.jupiter.api.Assertions.assertEquals(b, b, () -> "messageSupplier");
    org.junit.jupiter.api.Assertions.assertEquals(1.0, 2.0); // Noncompliant
    org.junit.jupiter.api.Assertions.assertEquals(1.0, 2.0, 0.1); // Noncompliant
    org.junit.jupiter.api.Assertions.assertEquals(1.0, 2.0, () -> "messageSupplier");
    org.junit.jupiter.api.Assertions.assertEquals(1.0, 2.0, 1.0, () -> "messageSupplier");

    org.junit.jupiter.api.Assertions.assertDoesNotThrow(() -> new AssertionsWithoutMessageCheck()); // Noncompliant
    org.junit.jupiter.api.Assertions.assertDoesNotThrow(AssertionsWithoutMessageCheck::new);  // Noncompliant
    org.junit.jupiter.api.Assertions.assertDoesNotThrow(() -> new AssertionsWithoutMessageCheck(), "message");
    org.junit.jupiter.api.Assertions.assertDoesNotThrow(AssertionsWithoutMessageCheck::new, "message");
    org.junit.jupiter.api.Assertions.assertDoesNotThrow(AssertionsWithoutMessageCheck::new, () -> "message");

    java.util.List<String> list = new java.util.ArrayList<String>();
    org.junit.jupiter.api.Assertions.assertIterableEquals(list, list); // Noncompliant
    org.junit.jupiter.api.Assertions.assertIterableEquals(list, list, "message");
    org.junit.jupiter.api.Assertions.assertIterableEquals(list, list, () -> "message");

    org.junit.jupiter.api.Assertions.assertTimeout(java.time.Duration.ofSeconds(3), AssertionsWithoutMessageCheck::new); // Noncompliant
    org.junit.jupiter.api.Assertions.assertTimeout(java.time.Duration.ofSeconds(3), AssertionsWithoutMessageCheck::new, "message");
    org.junit.jupiter.api.Assertions.assertTimeout(java.time.Duration.ofSeconds(3), AssertionsWithoutMessageCheck::new, () -> "message");

    org.junit.jupiter.api.Assertions.assertTimeoutPreemptively(java.time.Duration.ofSeconds(3), AssertionsWithoutMessageCheck::new); // Noncompliant
    org.junit.jupiter.api.Assertions.assertTimeoutPreemptively(java.time.Duration.ofSeconds(3), AssertionsWithoutMessageCheck::new, "message");
    org.junit.jupiter.api.Assertions.assertTimeoutPreemptively(java.time.Duration.ofSeconds(3), AssertionsWithoutMessageCheck::new, () -> "message");
  }

