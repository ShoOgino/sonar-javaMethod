  void okHttp(String argumentVersion) {
    ConnectionSpec spec = new ConnectionSpec.Builder(ConnectionSpec.MODERN_TLS)
      .tlsVersions(TlsVersion.TLS_1_0) // Noncompliant [[sc=20;ec=38]] {{Change this code to use a stronger protocol.}}
      .build();

    ConnectionSpec spec2 = new ConnectionSpec.Builder(ConnectionSpec.MODERN_TLS)
      .tlsVersions(TLS_1_1) // Noncompliant [[sc=20;ec=27]] {{Change this code to use a stronger protocol.}}
      .build();

    ConnectionSpec spec3 = new ConnectionSpec.Builder(ConnectionSpec.MODERN_TLS)
      .tlsVersions(TlsVersion.TLS_1_2) // Compliant
      .build();

    ConnectionSpec spec4 = new ConnectionSpec.Builder(ConnectionSpec.MODERN_TLS)
      .tlsVersions(TlsVersion.TLS_1_3) // Compliant
      .build();

    ConnectionSpec spec5 = new ConnectionSpec.Builder(ConnectionSpec.MODERN_TLS)
      .tlsVersions(SSL_3_0) // Compliant
      .build();

    ConnectionSpec specWithString = new ConnectionSpec.Builder(ConnectionSpec.MODERN_TLS)
      .tlsVersions("TLSv1") // Noncompliant [[sc=20;ec=27]]
      .build();

    ConnectionSpec specWithString2 = new ConnectionSpec.Builder(ConnectionSpec.MODERN_TLS)
      .tlsVersions("TLSv1.1") // Noncompliant
      .build();

    ConnectionSpec specWithString3 = new ConnectionSpec.Builder(ConnectionSpec.MODERN_TLS)
      .tlsVersions("TLSv1.2") // Compliant
      .build();

    ConnectionSpec specWithMultipleVersions = new ConnectionSpec.Builder(ConnectionSpec.MODERN_TLS)
      .tlsVersions(TlsVersion.TLS_1_3, TlsVersion.TLS_1_1) // Noncompliant [[sc=40;ec=58]]
      .build();

    ConnectionSpec specWithMultipleWeakVersions = new ConnectionSpec.Builder(ConnectionSpec.MODERN_TLS)
      .tlsVersions(TlsVersion.TLS_1_0, // Noncompliant [[sc=20;ec=38;secondary=+1]]
        TlsVersion.TLS_1_1)
      .build();

    ConnectionSpec specWithMultipleWeakVersions2 = new ConnectionSpec.Builder(ConnectionSpec.MODERN_TLS)
      .tlsVersions("TLSv1", // Noncompliant [[sc=20;ec=27;secondary=+1]]
        "TLSv1.1")
      .build();

    ConnectionSpec specWithUnknownValue = new ConnectionSpec.Builder(ConnectionSpec.MODERN_TLS)
      .tlsVersions(argumentVersion) // Compliant, unknown version
      .build();

    ConnectionSpec specWithUnknownValue2 = new ConnectionSpec.Builder(ConnectionSpec.MODERN_TLS)
      .tlsVersions(getVersion()) // Compliant, unknown version
      .build();
  }

