  void assertFalse_JUnit4_orgJunitAssert() {
    Assert.assertFalse(null == foo); // Noncompliant {{Use assertNotNull instead.}}
    assertFalse(foo == null); // Noncompliant

    Assert.assertFalse(foo != null); // Noncompliant {{Use assertNull instead.}}
    assertFalse("null and foo should not be equal", null != foo); // Noncompliant

    Assert.assertFalse(foo == bar); // Noncompliant {{Use assertNotSame instead.}}
    assertFalse(bar != foo); // Noncompliant {{Use assertSame instead.}}

    Assert.assertFalse("This is a String", foo.equals(bar)); // Noncompliant {{Use assertNotEquals instead.}}
    assertFalse(!bar.equals(foo)); // Noncompliant {{Use assertEquals instead.}}

    assertFalse((foo = bar).equals(bar)); // Noncompliant {{Use assertNotEquals instead.}}

    Assert.assertFalse(foo == null || foo == null); // compliant - we only flag simple cases
    assertFalse(predicate()); // compliant
    assertFalse(foo.equals(bar) && bar != null); // compliant
  }

