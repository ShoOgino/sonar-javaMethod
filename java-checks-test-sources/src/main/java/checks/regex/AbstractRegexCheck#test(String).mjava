  void test(String regex) {
    f("".matches("a|bc")); // Noncompliant {{a|bc}}
    f("".replace("text1", "text2"));
    f("".replaceFirst("xy", "text")); // Noncompliant {{xy}}
    String a = "a" + "b";
    f("".replaceAll(a, "text")); // Noncompliant {{ab}}
    f(Pattern.compile("\\d")); // Noncompliant {{\\d}}
    f(Pattern.compile("\\w", Pattern.CASE_INSENSITIVE)); // Noncompliant {{\\w,initialFlags=2}}
    f(Pattern.matches("\\d+", "text")); // Noncompliant {{\\d+}}
    f("text".split(",")[0]); // Noncompliant {{,}}
    f("text".split(";", -1)[0]); // Noncompliant {{;}}

    // org.apache.commons.lang3.RegExUtils
    Pattern pattern = Pattern.compile(regex);
    f(RegExUtils.removeAll("text", pattern));
    f(RegExUtils.removeAll("text", "regex"));  // Noncompliant {{regex}}
    f(RegExUtils.removeFirst("text", pattern));
    f(RegExUtils.removeFirst("text", "regex"));  // Noncompliant {{regex}}
    f(RegExUtils.replaceAll("text", pattern, "text"));
    f(RegExUtils.replaceAll("text", "regex", "text"));  // Noncompliant {{regex}}
    f(RegExUtils.replaceFirst("text", pattern, "text"));
    f(RegExUtils.replaceFirst("text", "regex", "text"));  // Noncompliant {{regex}}
    f(RegExUtils.removePattern("text", "regex"));  // Noncompliant {{regex,initialFlags=32}}
    f(RegExUtils.replacePattern("text", "regex", "text"));  // Noncompliant {{regex,initialFlags=32}}
  }

