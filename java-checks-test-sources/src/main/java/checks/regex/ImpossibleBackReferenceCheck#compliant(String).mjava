  void compliant(String str) {
    str.matches("(.)\\1");
    str.matches("(?:(.)\\1)*");
    str.matches("(.)\\1(.)\\2");
    str.matches("(?:x(.)|\\1)*");
    str.matches("(?<name>)\\k<name>");
    str.matches("(?<name>)\\1");
    // This produces an FP in IntelliJ
    str.matches("(?:\\1|x(.))*");
    str.matches("(?:\\1|x(.))+");
    str.matches("(?:\\1|x(.)){0,2}");
    str.matches("(?:\\1|x(.)){1,2}");
    str.matches("(?:\\1\\2|(x)(.))*");
    str.matches("(.)(?:\\1\\2|x(.))*");
    str.matches("(1)\\11"); // Compliant, backreference is \1 because group 11 does not exist
    str.matches("(1)(2)(3)(4)(5)(6)(7)(8)(9)(a)\\11(b)"); // Compliant, backreference is \1 because 11 does not exist at this point in the regex
    str.matches("(1)(2)(3)(4)(5)(6)(7)(8)(9)(a)(b)\\11"); // Compliant, backreference is \11 because group 11 exists at this point in the regex
  }

