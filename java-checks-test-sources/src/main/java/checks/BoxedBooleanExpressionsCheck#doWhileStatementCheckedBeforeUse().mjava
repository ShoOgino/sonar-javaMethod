  void doWhileStatementCheckedBeforeUse() {
    final Boolean alwaysTrue = Boolean.TRUE;
    Boolean checkedBeforeUse = getSurprizeBoxedBoolean();
    if (checkedBeforeUse != null) {
      do {}
      while (checkedBeforeUse); // Compliant because the variable is checked before use
    }
    Boolean checkedBeforeUse2 = getSurprizeBoxedBoolean();
    if (checkedBeforeUse2 == null) {
      return;
    }
    do {} while (checkedBeforeUse2); // Compliant because the variable is checked before use
    Boolean checkedBeforeUse3 = getSurprizeBoxedBoolean();
    if (checkedBeforeUse3 == null) {
      do {} while (checkedBeforeUse3); // Compliant FN because the value is checked but still used
    }
    Boolean checkedBeforeUse4 = getSurprizeBoxedBoolean();
    if (checkedBeforeUse4 == alwaysTrue) {
      do {} while (checkedBeforeUse4); // // Noncompliant because the value is not checked against null
    }
    Boolean checkedBeforeUse5 = getSurprizeBoxedBoolean();
    if (checkedBeforeUse5 == Boolean.TRUE) {
      do {} while (checkedBeforeUse5); // Noncompliant because the value is not checked against null
    }
    Boolean checkedBeforeUse6 = getSurprizeBoxedBoolean();
    if (alwaysTrue.equals(checkedBeforeUse6)) {
      do {} while (checkedBeforeUse6); // Noncompliant because the value is not checked against null
    }
    Boolean checkedBeforeUse7 = getSurprizeBoxedBoolean();
    if (Boolean.FALSE.equals(checkedBeforeUse7)) {
      do {} while (checkedBeforeUse7); // Noncompliant because the value is not checked against null
    }

    Boolean checkedBeforeUse8 = getSurprizeBoxedBoolean();
    Boolean checkedBeforeUse9 = getSurprizeBoxedBoolean();
    Boolean checkedBeforeUse10 = getSurprizeBoxedBoolean();
    Boolean checkedBeforeUse11 = getSurprizeBoxedBoolean();
    Boolean checkedBeforeUse12 = getSurprizeBoxedBoolean();
    Boolean checkedBeforeUse13 = getSurprizeBoxedBoolean();
    if (1 == 2) {
    } else if (checkedBeforeUse8 != null) {
      do {} while (checkedBeforeUse8); // Compliant because the variable is checked before use
    } else if (checkedBeforeUse9 == null) {
      do {} while (checkedBeforeUse9); // Compliant FN because the value is checked but sill used
    } else if (checkedBeforeUse10 == alwaysTrue) {
      do {} while (checkedBeforeUse10); // Noncompliant because the value is not checked against null
    } else if (checkedBeforeUse11 == Boolean.FALSE) {
      do {} while (checkedBeforeUse11); // Noncompliant because the value is not checked against null
    } else if (alwaysTrue.equals(checkedBeforeUse12)) {
      do {} while (checkedBeforeUse12); // Noncompliant because the value is not checked against null
    } else if (Boolean.FALSE.equals(checkedBeforeUse13)) {
      do {} while (checkedBeforeUse13); // Noncompliant because the value is not checked against null
    }
  }

