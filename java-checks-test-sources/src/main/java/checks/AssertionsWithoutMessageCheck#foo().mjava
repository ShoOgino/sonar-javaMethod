  void foo() {
    org.junit.Assert.assertTrue(true); // Noncompliant [[sc=5;ec=38]] {{Add a message to this assertion.}}
    org.junit.Assert.assertTrue("message", true);
    org.junit.Assert.assertTrue(1 > 2); // Noncompliant {{Add a message to this assertion.}}
    org.junit.Assert.assertFalse(false); // Noncompliant
    org.junit.Assert.assertFalse("message", false);
    org.junit.Assert.assertEquals("message", "foo", "bar");
    org.junit.Assert.assertEquals("foo", "bar"); // Noncompliant
    junit.framework.Assert.assertTrue(true); // Noncompliant
    junit.framework.Assert.assertTrue("message", true);
    junit.framework.Assert.assertEquals("message", "foo", "bar");
    junit.framework.Assert.assertEquals("message", "foo", "bar");
    junit.framework.Assert.assertEquals("foo", "bar"); // Noncompliant
    junit.framework.Assert.assertNotNull("foo", "bar");
    junit.framework.Assert.assertNotNull("foo"); // Noncompliant


    org.fest.assertions.Assertions.assertThat(true).isTrue();// Noncompliant {{Add a message to this assertion.}}
    org.fest.assertions.Assertions.assertThat(true).as("verifying the truth").isTrue();
    org.fest.assertions.Assertions.assertThat(true).as(new BasicDescription("description")).isTrue();
    org.fest.assertions.Assertions.assertThat(true).describedAs("verifying the truth").isTrue(); // compliant - describedAs is an alias for as
    org.fest.assertions.Assertions.assertThat(true).describedAs(new BasicDescription("description"));
    org.fest.assertions.Assertions.assertThat(true).overridingErrorMessage("error message").isTrue();
    org.fest.assertions.Assertions.assertThat("").as("Message").isEqualTo("");
    org.fest.assertions.Assertions.assertThat("").isEqualTo("").as("Message"); // Noncompliant

    org.assertj.core.api.Assertions.assertThat(true).isTrue(); // Noncompliant
    org.assertj.core.api.Assertions.assertThat(true).as("verifying the truth").isTrue();
    org.assertj.core.api.Assertions.assertThat(true).as("verifying the truth", new Object()).isTrue();
    org.assertj.core.api.Assertions.assertThat(true).as(new TextDescription("verifying the truth")).isTrue();
    org.assertj.core.api.Assertions.assertThat(true).describedAs("verifying the truth").isTrue(); // compliant - describedAs is an alias for as
    org.assertj.core.api.Assertions.assertThat(true).describedAs("verifying the truth", new Object()).isTrue();
    org.assertj.core.api.Assertions.assertThat(true).describedAs(new TextDescription("verifying the truth")).isTrue();
    org.assertj.core.api.Assertions.assertThat(true).withFailMessage("fail message").isTrue();
    org.assertj.core.api.Assertions.assertThat(true).withFailMessage("fail message", new Object()).isTrue();
    org.assertj.core.api.Assertions.assertThat(true).overridingErrorMessage("fail message").isTrue();
    org.assertj.core.api.Assertions.assertThat(true).overridingErrorMessage("fail message", new Object()).isTrue();
    org.assertj.core.api.Assertions.assertThat("").as("Message").isEqualTo("");
    org.assertj.core.api.Assertions.assertThat("").isEqualTo("").as("Message"); // Noncompliant

    org.junit.Assert.assertThat("foo", null); // Noncompliant {{Add a message to this assertion.}}
    org.junit.Assert.assertThat("foo", "bar", null);
    org.junit.Assert.assertThat("foo", new Integer(1), null);

    junit.framework.Assert.assertNotSame("foo", "bar"); // Noncompliant
    junit.framework.Assert.assertNotSame("foo", "foo", "bar");
    junit.framework.Assert.assertSame("foo", "bar"); // Noncompliant
    junit.framework.Assert.assertSame("foo", "foo", "bar");


    org.junit.Assert.fail(); // Noncompliant
    org.junit.Assert.fail("Foo");
    junit.framework.Assert.fail(); // Noncompliant
    junit.framework.Assert.fail("Foo");
    org.fest.assertions.Fail.fail(); // Noncompliant
    org.fest.assertions.Fail.fail("foo");
    org.fest.assertions.Fail.fail("foo", null);
    org.fest.assertions.Fail.failure("foo");
  }

