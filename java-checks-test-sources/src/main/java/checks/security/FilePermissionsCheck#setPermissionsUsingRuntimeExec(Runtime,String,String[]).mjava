  public void setPermissionsUsingRuntimeExec(Runtime runtime, String filename, String[] args) throws Exception {
    runtime.exec("chmod 777 file.json"); // Noncompliant
    runtime.exec("chmod 775 file.json"); // Noncompliant
    runtime.exec("chmod 774 file.json"); // Noncompliant
    runtime.exec("chmod 771 file.json"); // Noncompliant
    runtime.exec("chmod 770 file.json"); // Compliant
    runtime.exec("chmod 1770 file.json"); // Compliant - using sticky bit

    runtime.exec("chmod 770 777 file1.json file2.json"); // Noncompliant

    runtime.exec("/bin/chmod 777 file.json", new String[] {}); // Noncompliant
    runtime.exec("chmod 777 file.json", new String[] {}, new File("")); // Noncompliant

    runtime.exec("chmod o+w file.json"); // Noncompliant
    runtime.exec("chmod o=rwx file.json"); // Noncompliant
    runtime.exec("chmod o-rwx file.json"); // Compliant
    runtime.exec("chmod +w file.json"); // Noncompliant
    runtime.exec("chmod a+w file.json"); // Noncompliant
    runtime.exec("chmod =rwx file.json"); // Noncompliant
    runtime.exec("chmod u=rwx,g=rx,o=r file.json"); // Noncompliant

    runtime.exec("mvn clean install"); // Compliant
    runtime.exec(new String[] {"mvn", "clean", "install"}); // Compliant
    runtime.exec(new String[] {"mvn", "sonar:sonar"}); // Compliant

    runtime.exec(new String[] {"chmod", "777", filename}); // Noncompliant
    runtime.exec(new String[] {"chmod", "770", filename}); // Compliant
    runtime.exec(new String[] {"/bin/chmod", "--recursive", "777", filename}); // Noncompliant
    runtime.exec(new String[] {"/bin/chmod", "--R", "770", filename}); // Compliant

    runtime.exec(new String[] {"/bin/chmod", "--recursive", filename}); // Compliant - malformed chmod

    runtime.exec(args); // Compliant
  }

