  @Override
  protected List<ProgramState> setConstraint(ProgramState initialProgramState, Constraint constraint, Set<RelationalSymbolicValue> knownRelations) {
    if (constraint == BooleanConstraint.FALSE) {
      return inverse().setConstraint(initialProgramState, BooleanConstraint.TRUE, knownRelations);
    }
    if (constraint != BooleanConstraint.TRUE) {
      // not a boolean constraint
      return setConstraint(initialProgramState, constraint);
    }
    if (knownRelations.contains(this)) {
      return Collections.singletonList(initialProgramState);
    }
    Set<RelationalSymbolicValue> newRelations = new HashSet<>();
    newRelations.add(this);
    newRelations.addAll(transitiveRelations(knownRelations));

    boolean unfulfilled = newRelations.stream()
      .map(r -> r.resolveRelationState(knownRelations))
      .anyMatch(RelationState.UNFULFILLED::equals);

    if (unfulfilled) {
      return Collections.emptyList();
    }
    knownRelations.add(this);
    return getNewProgramStates(initialProgramState, newRelations, knownRelations);
  }

