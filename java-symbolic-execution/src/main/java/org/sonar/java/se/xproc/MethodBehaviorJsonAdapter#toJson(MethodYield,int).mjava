  private static JsonElement toJson(MethodYield methodYield, int arity) {
    JsonObject jsonMethodYield = new JsonObject();
    JsonArray jsonParameterConstraints = new JsonArray();
    for (int i = 0; i < arity; i++) {
      jsonParameterConstraints.add(toJson(methodYield.parametersConstraints.get(i)));
    }
    jsonMethodYield.add(JSON_PARAMETERS_CONSTRAINTS, jsonParameterConstraints);
    if (methodYield instanceof HappyPathYield) {
      HappyPathYield happyPathYield = (HappyPathYield) methodYield;
      jsonMethodYield.addProperty(JSON_RESULT_INDEX, happyPathYield.resultIndex());
      jsonMethodYield.add(JSON_RESULT_CONSTRAINTS, toJson(happyPathYield.resultConstraint()));
    } else if (methodYield instanceof ExceptionalYield) {
      ExceptionalYield exceptionalYield = (ExceptionalYield) methodYield;
      jsonMethodYield.addProperty(JSON_THROWN_EXCEPTION, exceptionalYield.getExceptionType());
    } else {
      throw new IllegalStateException("Hardcoded yields should only be HappyPathYield or ExceptionalYield.");
    }
    return jsonMethodYield;
  }

