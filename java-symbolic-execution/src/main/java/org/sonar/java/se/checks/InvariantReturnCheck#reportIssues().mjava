  private void reportIssues() {
    MethodInvariantContext methodInvariantContext = methodInvariantContexts.pop();
    if (!methodInvariantContext.methodToCheck) {
      return;
    }
    if (methodInvariantContext.returnImmutableType && methodInvariantContext.symbolicValues.size() == 1 && methodInvariantContext.endPaths > 1) {
      report(methodInvariantContext);
    } else if (!methodInvariantContext.avoidRaisingConstraintIssue) {
      for (Class<? extends Constraint> constraintClass : methodInvariantContext.methodConstraints.keySet()) {
        Collection<Constraint> constraints = methodInvariantContext.methodConstraints.get(constraintClass);
        Constraint firstConstraint = constraints.iterator().next();
        if (constraints.size() == methodInvariantContext.endPaths && firstConstraint.hasPreciseValue() && constraints.stream().allMatch(firstConstraint::equals)) {
          report(methodInvariantContext);
          return;
        }
      }
    }
  }

