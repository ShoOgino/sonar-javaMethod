  @Test
  void global_annotation() throws Exception {
    CompilationUnitTree cut = JParserTestUtils.parse(new File("src/test/files/se/annotations/NullableAnnotationUtils_global.java"));

    List<Symbol.MethodSymbol> nonNullParameterMethods = Collector.methodsWithName("nonNull", cut);
    assertThat(nonNullParameterMethods)
      .hasSize(6)
      .allMatch(NullableAnnotationUtils::isGloballyAnnotatedParameterNonNull)
      .noneMatch(NullableAnnotationUtils::isGloballyAnnotatedParameterNullable);

    List<Symbol.MethodSymbol> nullableParameterMethods = Collector.methodsWithName("nullable", cut);
    assertThat(nullableParameterMethods)
      .hasSize(1)
      .allMatch(NullableAnnotationUtils::isGloballyAnnotatedParameterNullable)
      .noneMatch(NullableAnnotationUtils::isGloballyAnnotatedParameterNonNull);

    List<Symbol> nonNullFields = Collector.variablesWithName("nonNull", cut);
    assertThat(nonNullFields)
      .hasSize(4)
      .allMatch(NullableAnnotationUtils::isAnnotatedNonNull);
    assertThat(nonNullFields.stream().map(Symbol::metadata))
      .noneMatch(NullableAnnotationUtils::isAnnotatedNullable);

    List<Symbol.MethodSymbol> nonNullReturnTypeMethods = Collector.methodsWithName("returnType", cut);
    assertThat(nonNullReturnTypeMethods)
      .hasSize(5)
      .allMatch(NullableAnnotationUtils::isAnnotatedNonNull);
    assertThat(nonNullReturnTypeMethods.stream().map(Symbol::metadata))
      .noneMatch(NullableAnnotationUtils::isAnnotatedNullable);
  }

