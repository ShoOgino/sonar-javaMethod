  @Test
  void issue_and_multiple_flows_on_the_same_line() {
    Expectations.Parser.ParsedComment iaf = new Expectations().parser().parseIssue("// Noncompliant [[flows=id]] {{issue msg}} flow@id1,id2 {{flow msg12}} flow@id3 {{flow msg3}}",
      TEST_LINE);
    assertThat(iaf.issue.get(MESSAGE)).isEqualTo("issue msg");
    assertThat(iaf.flows).hasSize(3);
    List<Integer> lines = iaf.flows.stream().map(f -> f.line).collect(Collectors.toList());
    assertThat(lines).isEqualTo(Arrays.asList(TEST_LINE, TEST_LINE, TEST_LINE));
    Map<String, Object> idMsgMap = iaf.flows.stream().collect(Collectors.toMap(f -> f.id, f -> MESSAGE.get(f.attributes)));
    assertThat(idMsgMap).isEqualTo(MapBuilder.<String, Object>newMap()
      .put("id1", "flow msg12")
      .put("id2", "flow msg12")
      .put("id3", "flow msg3")
      .build());
  }

