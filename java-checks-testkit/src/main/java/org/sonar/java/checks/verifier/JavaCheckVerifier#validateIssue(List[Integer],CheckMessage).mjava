  private void validateIssue(List<Integer> unexpectedLines, CheckMessage checkMessage) {
    int line = checkMessage.getLine();
    if (expected.containsKey(line)) {
      Map<IssueAttribute, String> attrs = Iterables.getLast(expected.get(line));
      assertEquals(checkMessage.getText(Locale.US), attrs, IssueAttribute.MESSAGE);
      Double cost = checkMessage.getCost();
      if (cost != null) {
        assertEquals(Integer.toString(cost.intValue()), attrs, IssueAttribute.EFFORT_TO_FIX);
      }
      if (checkMessage instanceof org.sonar.java.JavaCheckMessage) {
        AnalyzerMessage analyzerMessage = ((org.sonar.java.JavaCheckMessage) checkMessage).getAnalyzerMessage();
        if (analyzerMessage != null) {
          validateAnalyzerMessage(attrs, analyzerMessage);
        }
      }
      expected.remove(line, attrs);
    } else {
      unexpectedLines.add(line);
    }
  }

