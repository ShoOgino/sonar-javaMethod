  @Override
  public void define(Context context) {
    ImmutableList.Builder<Object> builder = ImmutableList.builder();
    if (context.getRuntime().getProduct() == SonarProduct.SONARLINT) {
      builder.add(JavaSonarLintClasspath.class);
    } else {
      builder.addAll(SurefireExtensions.getExtensions());
      builder.addAll(JaCoCoExtensions.getExtensions());
      builder.add(JavaSonarWayProfile.class);
      builder.add(JavaClasspath.class);
      builder.add(PropertyDefinition.builder("sonar.java.failOnException")
        .defaultValue("false")
        .hidden()
        .name("Fail on exceptions")
        .description("when set to true, if an exception is thrown by the analyzer the analysis will fail")
        .build());
    }
    builder.addAll(JavaClasspathProperties.getProperties());
    builder.add(
      JavaTestClasspath.class,
      Java.class,
      PropertyDefinition.builder(Java.FILE_SUFFIXES_KEY)
        .defaultValue(Java.DEFAULT_FILE_SUFFIXES)
        .category(JavaConstants.JAVA_CATEGORY)
        .name("File suffixes")
        .multiValues(true)
        .description("Comma-separated list of suffixes for files to analyze. To not filter, leave the list empty.")
        .subCategory("General")
        .onQualifiers(Qualifiers.PROJECT)
        .build(),
      JavaRulesDefinition.class,
      SonarComponents.class,
      DefaultJavaResourceLocator.class,
      JavaSquidSensor.class,
      PostAnalysisIssueFilter.class,
      XmlFileSensor.class);
    context.addExtensions(builder.build());
  }

