  private void saveViolations(Set<Edge> feedbackEdges) {
    ActiveRule rule = CycleBetweenPackagesCheck.getActiveRule(checkFactory);
    if (rule == null) {
      // Rule inactive
      return;
    }
    for (Edge feedbackEdge : feedbackEdges) {
      for (Dependency subDependency : resourceMapping.getSubDependencies((Dependency) feedbackEdge)) {
        Resource fromFile = subDependency.getFrom();
        Resource toFile = subDependency.getTo();
        Violation violation = Violation.create(rule, fromFile)
            .setMessage("Remove the dependency on the source file \"" + toFile.getLongName() + "\" to break a package cycle.")
            .setCost((double) subDependency.getWeight());
        context.saveViolation(violation);
      }
    }
  }

