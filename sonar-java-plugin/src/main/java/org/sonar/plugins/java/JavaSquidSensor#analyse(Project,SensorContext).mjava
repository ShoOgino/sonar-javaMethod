  @Override
  public void analyse(Project project, SensorContext context) {
    javaResourceLocator.setSensorContext(context);
    Checks<CodeVisitor> checks = checkFactory.<CodeVisitor>create(CheckList.REPOSITORY_KEY).addAnnotatedChecks(CheckList.getChecks());
    Collection<CodeVisitor> checkList = checks.all();
    JavaConfiguration configuration = createConfiguration();
    Measurer measurer = new Measurer(project, context, configuration.isAnalysePropertyAccessors());
    JavaSquid squid = new JavaSquid(configuration, sonarComponents, measurer, javaResourceLocator, checkList.toArray(new CodeVisitor[checkList.size()]));
    squid.scan(getSourceFiles(), getTestFiles(), getBytecodeFiles());
    new Bridges(squid, settings).save(context, project, checks, javaResourceLocator.getResourceMapping(),
      sonarComponents.getResourcePerspectives(), noSonarFilter, profile);
  }

