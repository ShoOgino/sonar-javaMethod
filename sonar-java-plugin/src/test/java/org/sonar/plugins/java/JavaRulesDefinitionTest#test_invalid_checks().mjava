  @Test
  void test_invalid_checks() throws Exception {
    RulesDefinition.Context context = new RulesDefinition.Context();
    RulesDefinition.NewRepository newRepository = context.createRepository("test", "java");
    newRepository.createRule("correctRule");
    JavaRulesDefinition definition = new JavaRulesDefinition();
    JavaSonarWayProfile.Profile profile = new JavaSonarWayProfile.Profile();
    profile.ruleKeys = new LinkedHashSet<>();
    try {
      definition.newRule(CheckWithNoAnnotation.class, newRepository, profile);
    } catch (IllegalArgumentException iae) {
      assertThat(iae).hasMessage("No Rule annotation was found on class " + CheckWithNoAnnotation.class.getName());
    }

    try {
      definition.newRule(EmptyRuleKey.class, newRepository, profile);
    } catch (IllegalArgumentException iae) {
      assertThat(iae).hasMessage("No key is defined in Rule annotation of class " + EmptyRuleKey.class.getName());
    }

    try {
      definition.newRule(UnregisteredRule.class, newRepository, profile);
    } catch (IllegalStateException ise) {
      assertThat(ise).hasMessage("No rule was created for class " + UnregisteredRule.class.getName() + " in test");
    }
    // no metadata defined, does not fail on registration of rule
    definition.newRule(CorrectRule.class, newRepository, profile);

  }

