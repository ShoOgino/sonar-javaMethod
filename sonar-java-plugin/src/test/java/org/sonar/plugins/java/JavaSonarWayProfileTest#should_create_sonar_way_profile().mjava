  @Test
  public void should_create_sonar_way_profile() {
    ValidationMessages validation = ValidationMessages.create();

    JavaSonarWayProfile profileDef = new JavaSonarWayProfile(ruleFinder(false));
    RulesProfile profile = profileDef.createProfile(validation);

    assertThat(profile.getLanguage()).isEqualTo(Java.KEY);
    List<ActiveRule> activeRules = profile.getActiveRulesByRepository(CheckList.REPOSITORY_KEY);
    assertThat(profile.getActiveRulesByRepository("common-java")).hasSize(1);
    assertThat(activeRules.size()).as("Expected number of rules in profile").isGreaterThanOrEqualTo(270);
    assertThat(profile.getName()).isEqualTo("Sonar way");
    Set<String> keys = new HashSet<>();
    for (ActiveRule activeRule : activeRules) {
      keys.add(activeRule.getRuleKey());
    }
    //Check that we store active rule with legacy keys, not RSPEC keys
    assertThat(keys.contains("S116")).isFalse();
    assertThat(keys).contains("S00116");
    assertThat(validation.hasErrors()).isFalse();

    // Check that we use severity from the read rule and not default one.
    assertThat(activeRules.get(0).getSeverity()).isSameAs(RulePriority.MINOR);
  }

