  // only visible for testing purpose, should be private
  protected static void newRule(Class<? extends JavaCheck> ruleClass, NewRepository repository) {

    org.sonar.check.Rule ruleAnnotation = AnnotationUtils.getAnnotation(ruleClass, org.sonar.check.Rule.class);
    checkCondition(ruleAnnotation != null, () -> "No Rule annotation was found on " + ruleClass);

    String ruleKey = ruleAnnotation.key();
    checkCondition(StringUtils.isNotEmpty(ruleKey), () -> "No key is defined in Rule annotation of " + ruleClass);

    NewRule rule = repository.rule(ruleKey);
    checkCondition(rule != null, () -> "No rule was created for " + ruleClass + " in " + repository.key());

    ruleMetadata(rule);

    // for template rules, we just need a way to identify them from the other normal ones, for instance with an annotation
    rule.setTemplate(AnnotationUtils.getAnnotation(ruleClass, org.sonar.samples.java.annotations.RuleTemplate.class) != null);
  }

