  public static RuleFinder create() {
    RuleFinder ruleFinder = mock(RuleFinder.class);

    ServerFileSystem sfs = mock(ServerFileSystem.class);
    FindbugsRuleRepository repo = new FindbugsRuleRepository(sfs, new XMLRuleParser());
    final List<Rule> findbugsRules = repo.createRules();
    for (Rule rule : findbugsRules) {
      rule.setRepositoryKey(FindbugsConstants.REPOSITORY_KEY);
    }

    when(ruleFinder.findAll(any(RuleQuery.class))).thenReturn(findbugsRules);
    when(ruleFinder.findByKey(any(String.class), any(String.class))).thenAnswer(new Answer<Rule>() {
      @Override
      public Rule answer(InvocationOnMock invocation) throws Throwable {
        String key = (String) invocation.getArguments()[1];
        for (Rule rule : findbugsRules) {
          if (rule.getKey().equals(key)) {
            return rule;
          }
        }
        return null;
      }
    });

    return ruleFinder;
  }

