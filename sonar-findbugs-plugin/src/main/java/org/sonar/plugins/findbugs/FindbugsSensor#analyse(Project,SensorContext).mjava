  public void analyse(Project project, SensorContext context) {
    Collection<ReportedBug> collection = executor.execute();

    for (ReportedBug bugInstance : collection) {
      Rule rule = ruleFinder.findByKey(FindbugsConstants.REPOSITORY_KEY, bugInstance.getType());
      if (rule == null) {
        // ignore violations from report, if rule not activated in Sonar
        LOG.warn("Findbugs rule '{}' not active in Sonar.", bugInstance.getType());
        continue;
      }

      String longMessage = bugInstance.getMessage();
      String className = bugInstance.getClassName();
      int start = bugInstance.getStartLine();

      Resource resource = javaResourceLocator.findResourceByClassName(className);
      if (context.getResource(resource) != null) {
        Violation violation = Violation.create(rule, resource)
            .setMessage(longMessage);
        if (start > 0) {
          violation.setLineId(start);
        }
        context.saveViolation(violation);
      }
    }
  }

