  @Test
  public void test_union() {
    assertThat(EQUAL_TO.union(null)).isSameAs(EQUAL_TO);
    assertThat(EQUAL_TO.union(EQUAL_TO)).isSameAs(EQUAL_TO);
    assertThat(EQUAL_TO.union(GREATER_EQUAL)).isSameAs(GREATER_EQUAL);
    assertThat(EQUAL_TO.union(GREATER_THAN)).isSameAs(GREATER_EQUAL);
    assertThat(EQUAL_TO.union(LESS_EQUAL)).isSameAs(LESS_EQUAL);
    assertThat(EQUAL_TO.union(LESS_THAN)).isSameAs(LESS_EQUAL);
    assertThat(EQUAL_TO.union(NOT_EQUAL)).isSameAs(UNKNOWN);
    assertThat(EQUAL_TO.union(UNKNOWN)).isSameAs(UNKNOWN);

    assertThat(GREATER_EQUAL.union(null)).isSameAs(GREATER_EQUAL);
    assertThat(GREATER_EQUAL.union(EQUAL_TO)).isSameAs(GREATER_EQUAL);
    assertThat(GREATER_EQUAL.union(GREATER_EQUAL)).isSameAs(GREATER_EQUAL);
    assertThat(GREATER_EQUAL.union(GREATER_THAN)).isSameAs(GREATER_EQUAL);
    assertThat(GREATER_EQUAL.union(LESS_EQUAL)).isSameAs(UNKNOWN);
    assertThat(GREATER_EQUAL.union(LESS_THAN)).isSameAs(UNKNOWN);
    assertThat(GREATER_EQUAL.union(NOT_EQUAL)).isSameAs(UNKNOWN);
    assertThat(GREATER_EQUAL.union(UNKNOWN)).isSameAs(UNKNOWN);

    assertThat(GREATER_THAN.union(null)).isSameAs(GREATER_THAN);
    assertThat(GREATER_THAN.union(EQUAL_TO)).isSameAs(GREATER_EQUAL);
    assertThat(GREATER_THAN.union(GREATER_EQUAL)).isSameAs(GREATER_EQUAL);
    assertThat(GREATER_THAN.union(GREATER_THAN)).isSameAs(GREATER_THAN);
    assertThat(GREATER_THAN.union(LESS_EQUAL)).isSameAs(UNKNOWN);
    assertThat(GREATER_THAN.union(LESS_THAN)).isSameAs(NOT_EQUAL);
    assertThat(GREATER_THAN.union(NOT_EQUAL)).isSameAs(NOT_EQUAL);
    assertThat(GREATER_THAN.union(UNKNOWN)).isSameAs(UNKNOWN);

    assertThat(LESS_EQUAL.union(null)).isSameAs(LESS_EQUAL);
    assertThat(LESS_EQUAL.union(EQUAL_TO)).isSameAs(LESS_EQUAL);
    assertThat(LESS_EQUAL.union(GREATER_EQUAL)).isSameAs(UNKNOWN);
    assertThat(LESS_EQUAL.union(GREATER_THAN)).isSameAs(UNKNOWN);
    assertThat(LESS_EQUAL.union(LESS_EQUAL)).isSameAs(LESS_EQUAL);
    assertThat(LESS_EQUAL.union(LESS_THAN)).isSameAs(LESS_EQUAL);
    assertThat(LESS_EQUAL.union(NOT_EQUAL)).isSameAs(UNKNOWN);
    assertThat(LESS_EQUAL.union(UNKNOWN)).isSameAs(UNKNOWN);

    assertThat(LESS_THAN.union(null)).isSameAs(LESS_THAN);
    assertThat(LESS_THAN.union(EQUAL_TO)).isSameAs(LESS_EQUAL);
    assertThat(LESS_THAN.union(GREATER_EQUAL)).isSameAs(UNKNOWN);
    assertThat(LESS_THAN.union(GREATER_THAN)).isSameAs(NOT_EQUAL);
    assertThat(LESS_THAN.union(LESS_EQUAL)).isSameAs(LESS_EQUAL);
    assertThat(LESS_THAN.union(LESS_THAN)).isSameAs(LESS_THAN);
    assertThat(LESS_THAN.union(NOT_EQUAL)).isSameAs(NOT_EQUAL);
    assertThat(LESS_THAN.union(UNKNOWN)).isSameAs(UNKNOWN);

    assertThat(NOT_EQUAL.union(null)).isSameAs(NOT_EQUAL);
    assertThat(NOT_EQUAL.union(EQUAL_TO)).isSameAs(UNKNOWN);
    assertThat(NOT_EQUAL.union(GREATER_EQUAL)).isSameAs(UNKNOWN);
    assertThat(NOT_EQUAL.union(GREATER_THAN)).isSameAs(NOT_EQUAL);
    assertThat(NOT_EQUAL.union(LESS_EQUAL)).isSameAs(UNKNOWN);
    assertThat(NOT_EQUAL.union(LESS_THAN)).isSameAs(NOT_EQUAL);
    assertThat(NOT_EQUAL.union(NOT_EQUAL)).isSameAs(NOT_EQUAL);
    assertThat(NOT_EQUAL.union(UNKNOWN)).isSameAs(UNKNOWN);

    assertThat(UNKNOWN.union(null)).isSameAs(UNKNOWN);
    assertThat(UNKNOWN.union(EQUAL_TO)).isSameAs(UNKNOWN);
    assertThat(UNKNOWN.union(GREATER_EQUAL)).isSameAs(UNKNOWN);
    assertThat(UNKNOWN.union(GREATER_THAN)).isSameAs(UNKNOWN);
    assertThat(UNKNOWN.union(LESS_EQUAL)).isSameAs(UNKNOWN);
    assertThat(UNKNOWN.union(LESS_THAN)).isSameAs(UNKNOWN);
    assertThat(UNKNOWN.union(NOT_EQUAL)).isSameAs(UNKNOWN);
    assertThat(UNKNOWN.union(UNKNOWN)).isSameAs(UNKNOWN);
  }

