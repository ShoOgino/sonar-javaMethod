  private SymbolicEvaluator.PackedStates evaluateRelationalOperator(ExecutionState state, ExpressionTree tree, @Nullable SymbolicRelation trueRelation,
    @Nullable SymbolicRelation falseRelation) {
    SymbolicEvaluator.PackedStates result = new SymbolicEvaluator().evaluateCondition(state, tree);
    if (falseRelation != null) {
      assertThat(result.falseStates).hasSize(1);
      assertThat(result.falseStates.get(0).relations.get(local1Symbol(), local2Symbol())).isSameAs(falseRelation);
      assertThat(result.falseStates.get(0).relations.get(local2Symbol(), local1Symbol())).isSameAs(falseRelation.swap());
    } else {
      assertThat(result.falseStates).isEmpty();
    }
    if (trueRelation != null) {
      assertThat(result.trueStates).hasSize(1);
      assertThat(result.trueStates.get(0).relations.get(local1Symbol(), local2Symbol())).isSameAs(trueRelation);
      assertThat(result.trueStates.get(0).relations.get(local2Symbol(), local1Symbol())).isSameAs(trueRelation.swap());
    } else {
      assertThat(result.trueStates).isEmpty();
    }
    return result;
  }

