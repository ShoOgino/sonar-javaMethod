  @Test
  public void test_conditional_or() {
    validateLogicalOperator(Tree.Kind.CONDITIONAL_OR, LITERAL_FALSE, LITERAL_FALSE, 0, 1);
    validateLogicalOperator(Tree.Kind.CONDITIONAL_OR, LITERAL_FALSE, LITERAL_TRUE, 1, 0);
    validateLogicalOperator(Tree.Kind.CONDITIONAL_OR, LITERAL_FALSE, VARIABLE2, 1, 1);

    validateLogicalOperator(Tree.Kind.CONDITIONAL_OR, LITERAL_TRUE, LITERAL_FALSE, 1, 0);
    validateLogicalOperator(Tree.Kind.CONDITIONAL_OR, LITERAL_TRUE, LITERAL_TRUE, 1, 0);
    validateLogicalOperator(Tree.Kind.CONDITIONAL_OR, LITERAL_TRUE, VARIABLE2, 1, 0);

    validateLogicalOperator(Tree.Kind.CONDITIONAL_OR, VARIABLE1, LITERAL_FALSE, 1, 1);
    validateLogicalOperator(Tree.Kind.CONDITIONAL_OR, VARIABLE1, LITERAL_TRUE, 2, 0);
    validateLogicalOperator(Tree.Kind.CONDITIONAL_OR, VARIABLE1, VARIABLE2, 2, 1);
  }

