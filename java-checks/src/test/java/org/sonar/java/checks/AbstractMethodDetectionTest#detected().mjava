  @Test
  public void detected() {
    class Visitor extends AbstractMethodDetection {

      public List<Integer> lines = Lists.newArrayList();

      @Override
      protected List<MethodInvocationMatcher> getMethodInvocationMatchers() {
        return ImmutableList.of(
            MethodInvocationMatcher.create().typeDefinition("A").name("method").addParameter("int"),
            MethodInvocationMatcher.create().typeDefinition("A").name("method").addParameter("java.lang.String[]")
        );
      }

      @Override
      protected void onMethodFound(MethodInvocationTree tree) {
        lines.add(((JavaTree) tree).getLine());
      }

    }
    Visitor visitor = new Visitor();
    JavaAstScanner.scanSingleFile(new File("src/test/files/checks/AbstractMethodDetection.java"), new VisitorsBridge(visitor));

    assertThat(visitor.lines).hasSize(2);
    assertThat(visitor.lines).containsExactly(13, 15);
  }

