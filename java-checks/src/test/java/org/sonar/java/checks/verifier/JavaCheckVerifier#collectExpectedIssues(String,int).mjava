  private void collectExpectedIssues(String comment, int line) {
    if (comment.startsWith(TRIGGER)) {
      comment = StringUtils.remove(comment, TRIGGER);

      String expectedMessage = StringUtils.substringBetween(comment, "{{", "}}");

      comment = StringUtils.stripEnd(StringUtils.remove(comment, "{{" + expectedMessage + "}}"), " \t");
      if (StringUtils.startsWith(comment, "@")) {
        final int lineAdjustment;
        final char firstChar = comment.charAt(1);
        final int endIndex = comment.indexOf(' ');
        if (endIndex == -1) {
          lineAdjustment = Integer.parseInt(comment.substring(2));
          comment = "";
        } else {
          lineAdjustment = Integer.parseInt(comment.substring(2, endIndex));
          comment = comment.substring(endIndex + 1).trim();
        }
        if (firstChar == '+') {
          line += lineAdjustment;
        } else if (firstChar == '-') {
          line -= lineAdjustment;
        }
      }
      comment = StringUtils.trim(comment);
      int times = StringUtils.isEmpty(comment) ? 1 : Integer.parseInt(comment);
      for (int i = 0; i < times; i++) {
        expected.put(line, expectedMessage);
      }
    }
  }

