  @BeforeClass
  public static void setup() {
    File file = new File("src/test/files/checks/helpers/JavadocTest.java");
    tree = JParserTestUtils.parse(file);

    Map<String, MethodTree> methods = ((ClassTree) tree.types().get(0)).members().stream()
      .filter(member -> member.is(Tree.Kind.METHOD))
      .map(MethodTree.class::cast)
      .collect(Collectors.toMap(methodTree -> methodTree.simpleName().name(), Function.identity()));

    fooJavadoc = new Javadoc(methods.get("foo"));
    barJavadoc = new Javadoc(methods.get("bar"));
    emptyDescriptionJavadoc = new Javadoc(methods.get("emptyDescription"));
    fullParamsDescriptionJavadoc = new Javadoc(methods.get("fullParamsDescription"));
    genericExceptionThrownJavadoc = new Javadoc(methods.get("genericExceptionThrown"));
    genericExceptionThrownUndocumented = new Javadoc(methods.get("genericExceptionThrownUndocumented"));
    invalidThrownExceptionUndocumented = new Javadoc(methods.get("invalidThrownExceptionUndocumented"));

    emptyJavadocs = methods.keySet().stream()
      .filter(name -> name.startsWith("emptyJavadoc"))
      .map(methods::get)
      .map(Javadoc::new)
      .collect(Collectors.toList());
  }

