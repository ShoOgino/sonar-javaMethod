  public static SourceFile scan(CodeVisitor visitor) {
    File baseDir = new File("src/test/resources/");
    InputFile sourceFile = InputFileUtils.create(baseDir, new File(baseDir, "Lambdas.java"));
    File bytecodeFile = new File("target/test-classes/");

    if (!sourceFile.getFile().isFile()) {
      throw new IllegalArgumentException("File '" + sourceFile + "' not found.");
    }

    JavaSquid javaSquid = new JavaSquid(new JavaConfiguration(Charset.forName("UTF-8")), visitor);
    javaSquid.scan(Collections.singleton(sourceFile), Collections.<InputFile>emptyList(), Collections.singleton(bytecodeFile));

    Collection<SourceCode> sources = javaSquid.getIndex().search(new QueryByType(SourceFile.class));
    if (sources.size() != 1) {
      throw new IllegalStateException("Only one SourceFile was expected whereas " + sources.size() + " has been returned.");
    }
    return (SourceFile) sources.iterator().next();
  }

