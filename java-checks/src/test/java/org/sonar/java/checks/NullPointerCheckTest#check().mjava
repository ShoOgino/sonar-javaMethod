  @Test
  public void check() {
    SourceFile file = JavaAstScanner.scanSingleFile(new File("src/test/files/checks/NullPointerCheck.java"),
      new VisitorsBridge(new NullPointerCheck()));
    checkMessagesVerifier.verify(file.getCheckMessages())
      .next().atLine(14).withMessage("null is dereferenced or passed as argument.")
      .next().atLine(15).withMessage("null is dereferenced or passed as argument.")
      .next().atLine(16).withMessage("null is dereferenced or passed as argument.")
      .next().atLine(71).withMessage("array1 can be null.")
      .next().atLine(76).withMessage("array2 can be null.")
      .next().atLine(78).withMessage("Value returned by method 'checkForNullMethod' can be null.")
      .next().atLine(86).withMessage("array1 can be null.")
      .next().atLine(91).withMessage("array2 can be null.")
      .next().atLine(93).withMessage("Value returned by method 'nullableMethod' can be null.")
      .next().atLine(144).withMessage("Value returned by method 'checkForNullMethod' can be null.")
      .next().atLine(145).withMessage("Value returned by method 'checkForNullMethod' can be null.")
      .next().atLine(146).withMessage("Value returned by method 'checkForNullMethod' can be null.")
      .next().atLine(151).withMessage("null is dereferenced or passed as argument.")
      .next().atLine(152).withMessage("null is dereferenced or passed as argument.")
      .next().atLine(153).withMessage("null is dereferenced or passed as argument.")
      .next().atLine(159).withMessage("argument1 can be null.")
      .next().atLine(165).withMessage("argument1 can be null.")
      .next().atLine(172).withMessage("argument2 can be null.")
      .next().atLine(174).withMessage("argument2 can be null.")
      .next().atLine(209).withMessage("argument4 can be null.")
      .next().atLine(215).withMessage("argument2 can be null.")
      .next().atLine(217).withMessage("argument3 can be null.")
      .next().atLine(225).withMessage("var1 can be null.")
      .next().atLine(227).withMessage("var2 can be null.")
      .next().atLine(235).withMessage("object can be null.")
      .next().atLine(237).withMessage("object can be null.")
      .next().atLine(245).withMessage("object can be null.")
      .next().atLine(246).withMessage("object can be null.")
      .next().atLine(246).withMessage("object can be null.")
      .next().atLine(248).withMessage("str can be null.")
      .next().atLine(255).withMessage("object can be null.")
      .next().atLine(256).withMessage("object can be null.")
      .next().atLine(256).withMessage("object can be null.")
      .next().atLine(258).withMessage("str can be null.")
      .next().atLine(270).withMessage("object1 can be null.")
      .next().atLine(278).withMessage("object can be null.")
      .next().atLine(278).withMessage("object can be null.")
      .next().atLine(283).withMessage("object can be null.")
      .next().atLine(284).withMessage("object can be null.")
      .next().atLine(292).withMessage("set can be null.")
      .next().atLine(293).withMessage("head can be null.")
      .next().atLine(295).withMessage("value can be null.")
      .next().atLine(297).withMessage("head can be null.")
      .next().atLine(303).withMessage("object1 can be null.")
      .next().atLine(304).withMessage("object1 can be null.")
      .next().atLine(306).withMessage("object2 can be null.")
      .next().atLine(308).withMessage("object1 can be null.")
      .next().atLine(333).withMessage("str can be null.")
      .next().atLine(335).withMessage("str can be null.")
      .next().atLine(337).withMessage("str can be null.")
      .next().atLine(352).withMessage("object can be null.")
      .next().atLine(354).withMessage("object can be null.")
      .next().atLine(361).withMessage("object12 can be null.")
      .next().atLine(376).withMessage("object22 can be null.")
      .next().atLine(414).withMessage("object3 can be null.");
  }

