  @Test
  public void variable_first() {
    CompilationUnitTree compilationUnit = getCompilationUnit("class Test { Integer i; }");
    SyntaxToken firstToken = getFirstSyntaxToken(getFirstVariable(getFirstClass(compilationUnit)));
    assertThat(firstToken.text()).isEqualTo("Integer");

    compilationUnit = getCompilationUnit("class Test { Integer[] i; }");
    firstToken = getFirstSyntaxToken(getFirstVariable(getFirstClass(compilationUnit)));
    assertThat(firstToken.text()).isEqualTo("Integer");

    compilationUnit = getCompilationUnit("class Test { private Integer i; }");
    firstToken = getFirstSyntaxToken(getFirstVariable(getFirstClass(compilationUnit)));
    assertThat(firstToken.text()).isEqualTo("private");

    compilationUnit = getCompilationUnit("class Test { Java.lang.List l; }");
    firstToken = getFirstSyntaxToken(getFirstVariable(getFirstClass(compilationUnit)));
    assertThat(firstToken.text()).isEqualTo("Java");
  }

