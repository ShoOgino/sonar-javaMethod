  @Test
  public void testMethodKoWithMessage() {

    try {
      // Some code
    } catch (Exception e) {
      if (true) {
        Assert.fail(e.getMessage()); // Noncompliant [[sc=9;ec=36]] {{Remove this failure assertion and simply add the exception type to the method signature.}}
      }
    }

    try {
      // Some code
    } catch (Exception e) {
      org.junit.Assert.fail(e.getMessage()); // Noncompliant [[sc=7;ec=44]] {{Remove this failure assertion and simply add the exception type to the method signature.}}
    }

    try {
      // Some code
    } catch (Exception e) {
      org.junit.jupiter.api.Assertions.fail(e.getMessage()); // Noncompliant [[sc=7;ec=60]] {{Remove this failure assertion and simply add the exception type to the method signature.}}
    }

    try {
      // Some code
    } catch (Exception e) {
      junit.framework.Assert.fail(e.getMessage()); // Noncompliant [[sc=7;ec=50]] {{Remove this failure assertion and simply add the exception type to the method signature.}}
    }

    try {
      // Some code
    } catch (Exception e) {
      org.fest.assertions.Fail.fail(); // Noncompliant [[sc=7;ec=38]] {{Remove this failure assertion and simply add the exception type to the method signature.}}
    }

  }

