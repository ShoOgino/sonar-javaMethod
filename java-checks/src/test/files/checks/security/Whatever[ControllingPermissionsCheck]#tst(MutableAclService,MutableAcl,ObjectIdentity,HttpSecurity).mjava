  @MyAnnotation
  void tst(MutableAclService mas, MutableAcl ma, ObjectIdentity o, HttpSecurity httpSec) throws Exception {
    mas.createAcl(o);            // Noncompliant
    mas.deleteAcl(o, true);      // Noncompliant
    mas.updateAcl(ma);           // Noncompliant
    httpSec.authorizeRequests(); // Noncompliant

    mas.readAclById(o); // Compliant
    foo();

    GrantedAuthority myGrantedAuthority = new GrantedAuthority() { // Noncompliant [[sc=47;ec=63]] {{Make sure that Permissions are controlled safely here.}}
      @Override
      public String getAuthority() {
        return "hello";
      }
    };

    GrantedAuthority myOtherGrantedAuthority = new SimpleGrantedAuthority("foo"); // Noncompliant

    AccessDecisionManager myAccessDecisionManager = new AccessDecisionManager() { // Noncompliant [[sc=57;ec=78]] {{Make sure that Permissions are controlled safely here.}}
      @Override
      public void decide(Authentication authentication, Object object, Collection<ConfigAttribute> configAttributes) throws AccessDeniedException, InsufficientAuthenticationException { }
      @Override
      public boolean supports(ConfigAttribute attribute) { return false; }
      @Override
      public boolean supports(Class<?> clazz) { return false; }
    };

    GlobalMethodSecurityConfiguration myGlobalMethodSecurityConfiguration1 = new GlobalMethodSecurityConfiguration() { }; // Noncompliant
    GlobalMethodSecurityConfiguration myGlobalMethodSecurityConfiguration2 = new GlobalMethodSecurityConfiguration();

    MyClass myClass = new MyClass() { };
  }

