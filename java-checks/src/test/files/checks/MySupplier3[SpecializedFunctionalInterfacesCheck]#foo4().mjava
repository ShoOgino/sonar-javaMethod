  void foo4() {
    BiFunction<Integer[][][], Integer[][][], Integer[][][]> myBiFunc = new BiFunction<Integer[][][], Integer[][][], Integer[][][]>() { // Noncompliant {{Refactor this code to use the more specialised Functional Interface 'BinaryOperator<Integer[][][]>'}}
      @Override
      public Integer[][][] apply(Integer[][][] t, Integer[][][] u) {
        return null;
      }
    };

    com.google.common.base.Function<Integer, String> ff = new com.google.common.base.Function<Integer, String>(){ // Compliant
      @Override
      public String apply(Integer a) {
        return null;
      }
    };
  }

