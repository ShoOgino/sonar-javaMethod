  void log4j(String csvPath, org.apache.logging.log4j.Marker marker) {
    log4j.log(org.apache.logging.log4j.Level.DEBUG, "Unable to open file " + csvPath); // Noncompliant {{Use the built-in formatting to construct this argument.}}
    log4j.debug("Unable to open file " + csvPath); // Noncompliant
    log4j.error("Unable to open file " + csvPath); // Noncompliant
    log4j.fatal("Unable to open file " + csvPath); // Noncompliant
    log4j.info("Unable to open file " + csvPath); // Noncompliant
    log4j.trace("Unable to open file " + csvPath); // Noncompliant
    log4j.warn("Unable to open file " + csvPath); // Noncompliant

    if (log4j.isDebugEnabled()) {
      log4j.debug("Unable to open file " + csvPath);
    }
    if (log4j.isEnabled(org.apache.logging.log4j.Level.DEBUG)) {
      log4j.debug("Unable to open file " + csvPath);
    }
    if (log4j.isEnabled(org.apache.logging.log4j.Level.DEBUG, marker)) {
      log4j.debug("Unable to open file " + csvPath);
    }
    log4j.debug(() -> "hello"); // using supplier
    log4j.debug(() -> new org.apache.logging.log4j.message.StringFormatterMessageFactory().newMessage("Unable to open file " + csvPath));
    log4j.debug("Unable to open file {0}", csvPath);
  }

