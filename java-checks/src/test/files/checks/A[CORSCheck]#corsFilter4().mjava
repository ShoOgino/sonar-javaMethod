  public CorsFilter corsFilter4() {
    // test that cut of the visit is necessary
    class Local {
      public CorsFilter corsFilter4() {
        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();
        CorsConfiguration config = new CorsConfiguration();
        config.addAllowedOrigin("*"); // Noncompliant [[secondary=140,141]]
        config.applyPermitDefaultValues();
        config.applyPermitDefaultValues();
        config.addAllowedOrigin("*"); // Noncompliant [[secondary=140,141]]
        return new CorsFilter(source);
      }
    }
    UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();
    CorsConfiguration config = new CorsConfiguration();
    config.addAllowedOrigin("*"); // Noncompliant [[secondary=149,150]]
    config.applyPermitDefaultValues();
    config.applyPermitDefaultValues();
    config.addAllowedOrigin("*"); // Noncompliant [[secondary=149,150]]
    return new CorsFilter(source);
  }

