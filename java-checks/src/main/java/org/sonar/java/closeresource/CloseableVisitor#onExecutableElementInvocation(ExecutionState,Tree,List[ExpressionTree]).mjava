  @Override
  protected void onExecutableElementInvocation(ExecutionState executionState, Tree tree, List<ExpressionTree> arguments) {
    if (tree.is(Tree.Kind.NEW_CLASS)) {
      ignoreClosableSymbols(executionState, ((NewClassTree) tree).arguments());
    } else {
      MethodInvocationTree methodInvocation = (MethodInvocationTree) tree;
      if (CLOSE_INVOCATIONS.anyMatch(methodInvocation)) {
        ExpressionTree methodSelect = methodInvocation.methodSelect();
        if (methodSelect.is(Tree.Kind.MEMBER_SELECT)) {
          ExpressionTree expression = ((MemberSelectExpressionTree) methodSelect).expression();
          if (expression.is(Tree.Kind.IDENTIFIER)) {
            executionState.markValueAs(((IdentifierTree) expression).symbol(), new CloseableState.Closed(expression));
          }
        }
      } else {
        ignoreClosableSymbols(executionState, methodInvocation.arguments());
      }
    }
  }

