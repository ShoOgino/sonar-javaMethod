  @Override
  public void visitAssignmentExpression(AssignmentExpressionTree tree) {
    super.visitAssignmentExpression(tree);
    ExpressionTree variable = tree.variable();
    if (variable.is(Tree.Kind.IDENTIFIER, Tree.Kind.MEMBER_SELECT)) {
      ExpressionTree expression = tree.expression();

      // check first usage of closeables in order to manage use of same symbol
      ignoreClosableSymbols(expression);

      IdentifierTree identifier;
      if (variable.is(Tree.Kind.IDENTIFIER)) {
        identifier = (IdentifierTree) variable;
      } else {
        identifier = ((MemberSelectExpressionTree) variable).identifier();
      }
      Symbol symbol = identifier.symbol();
      if (isCloseableOrAutoCloseableSubtype(identifier.symbolType()) && symbol.owner().isMethodSymbol()) {
        executionState.markValueAs(symbol, getCloseableStateFromExpression(symbol, expression));
      }
    }
  }

