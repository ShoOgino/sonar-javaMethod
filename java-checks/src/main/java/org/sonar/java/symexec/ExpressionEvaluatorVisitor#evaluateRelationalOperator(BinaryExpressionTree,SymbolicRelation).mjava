  private void evaluateRelationalOperator(BinaryExpressionTree tree, SymbolicRelation operator) {
    Symbol.VariableSymbol leftSymbol = extractLocalVariableSymbol(tree.leftOperand());
    Symbol.VariableSymbol rightSymbol = extractLocalVariableSymbol(tree.rightOperand());
    if (leftSymbol != null && rightSymbol != null) {
      switch (currentState.evaluateRelation(leftSymbol, operator, rightSymbol)) {
        case FALSE:
          falseStates.add(currentState);
          break;
        case TRUE:
          trueStates.add(currentState);
          break;
        case UNKNOWN:
          falseStates.add(new ExecutionState(currentState).setRelation(leftSymbol, operator.negate(), rightSymbol));
          trueStates.add(new ExecutionState(currentState).setRelation(leftSymbol, operator, rightSymbol));
      }
    } else {
      falseStates.add(currentState);
      trueStates.add(currentState);
    }
  }

