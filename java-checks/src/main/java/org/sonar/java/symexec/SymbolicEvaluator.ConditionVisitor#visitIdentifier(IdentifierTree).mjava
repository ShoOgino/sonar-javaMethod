    @Override
    public void visitIdentifier(IdentifierTree tree) {
      Symbol.VariableSymbol symbol = extractVariableSymbol(tree);
      if (symbol != null) {
        SymbolicValue.SymbolicVariableValue value = new SymbolicValue.SymbolicVariableValue(symbol);
        switch (currentState.getBooleanConstraint(value)) {
          case FALSE:
            currentResult.falseStates.add(currentState);
            return;
          case TRUE:
            currentResult.trueStates.add(currentState);
            return;
          default:
            currentResult.falseStates.add(instantiateExecutionState(currentState).setBooleanConstraint(value, SymbolicBooleanConstraint.FALSE));
            currentResult.trueStates.add(instantiateExecutionState(currentState).setBooleanConstraint(value, SymbolicBooleanConstraint.TRUE));
            return;
        }
      }
      currentResult.unknownStates.add(currentState);
    }

