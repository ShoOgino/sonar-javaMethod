  @Override
  public void visitIdentifier(IdentifierTree tree) {
    Symbol.VariableSymbol symbol = extractLocalVariableSymbol(tree);
    if (symbol != null) {
      SymbolicBooleanConstraint constraint = currentState.getBooleanConstraint(symbol);
      switch (constraint) {
        case FALSE:
          falseStates.add(currentState);
          break;
        case TRUE:
          trueStates.add(currentState);
          break;
        case UNKNOWN:
          falseStates.add(new ExecutionState(currentState).setBooleanConstraint(symbol, SymbolicBooleanConstraint.FALSE));
          trueStates.add(new ExecutionState(currentState).setBooleanConstraint(symbol, SymbolicBooleanConstraint.TRUE));
          break;
        default:
          throw new IllegalStateException("illegal value " + constraint);
      }
    } else {
      falseStates.add(currentState);
      trueStates.add(currentState);
    }
  }

