    @Override
    void evaluateRelationalOperator(BinaryExpressionTree tree, SymbolicRelation operator) {
      SymbolicValue leftValue = retrieveSymbolicValue(tree.leftOperand());
      SymbolicValue rightValue = retrieveSymbolicValue(tree.rightOperand());
      if (leftValue != null && rightValue != null) {
        switch (currentState.evaluateRelation(leftValue, operator, rightValue)) {
          case FALSE:
            currentResult.falseStates.add(currentState);
            break;
          case TRUE:
            currentResult.trueStates.add(currentState);
            break;
          default:
            currentResult.falseStates.add(new ExecutionState(currentState).setRelation(leftValue, operator.negate(), rightValue));
            currentResult.trueStates.add(new ExecutionState(currentState).setRelation(leftValue, operator, rightValue));
        }
      } else {
        currentResult.unknownStates.add(currentState);
      }
    }

