  @Override
  public void visitBinaryExpression(BinaryExpressionTree tree) {
    if (tree.is(Tree.Kind.CONDITIONAL_AND)) {
      evaluateConditionalAnd(tree);
    } else if (tree.is(Tree.Kind.CONDITIONAL_OR)) {
      evaluateConditionalOr(tree);
    } else if (tree.is(Tree.Kind.EQUAL_TO)) {
      evaluateRelationalOperator(tree, SymbolicRelation.EQUAL_TO);
    } else if (tree.is(Tree.Kind.GREATER_THAN)) {
      evaluateRelationalOperator(tree, SymbolicRelation.GREATER_THAN);
    } else if (tree.is(Tree.Kind.GREATER_THAN_OR_EQUAL_TO)) {
      evaluateRelationalOperator(tree, SymbolicRelation.GREATER_EQUAL);
    } else if (tree.is(Tree.Kind.LESS_THAN)) {
      evaluateRelationalOperator(tree, SymbolicRelation.LESS_THAN);
    } else if (tree.is(Tree.Kind.LESS_THAN_OR_EQUAL_TO)) {
      evaluateRelationalOperator(tree, SymbolicRelation.LESS_EQUAL);
    } else if (tree.is(Tree.Kind.NOT_EQUAL_TO)) {
      evaluateRelationalOperator(tree, SymbolicRelation.NOT_EQUAL);
    }
  }

