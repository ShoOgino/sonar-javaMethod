  private void checkConfusingVararg(Symbol.MethodSymbol method, Arguments arguments) {
    if (!JUtils.isVarArgsMethod(method)) {
      return;
    }
    List<Type> parameterTypes = method.parameterTypes();
    if (arguments.size() != parameterTypes.size()) {
      // providing more arguments: implicitly filling the array
      // providing less arguments: not using the vararg
      return;
    }
    Type varargParameter = parameterTypes.get(parameterTypes.size() - 1);
    ExpressionTree varargArgument = ExpressionUtils.skipParentheses(arguments.get(arguments.size() - 1));
    Type varargArgumentType = varargArgument.symbolType();
    if (varargArgument.is(Tree.Kind.NULL_LITERAL) || isIncompatibleArray(varargArgumentType, varargParameter)) {
      reportIssue(varargArgument, message(varargParameter, varargArgumentType));
    }
  }

