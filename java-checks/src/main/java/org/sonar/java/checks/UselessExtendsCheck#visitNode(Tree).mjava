  @Override
  public void visitNode(Tree tree) {
    ClassTree classTree = (ClassTree) tree;
    TypeTree superClassTree = classTree.superClass();
    if (superClassTree != null && superClassTree.symbolType().is("java.lang.Object")) {
      addIssue(superClassTree, "\"Object\" should not be explicitly extended.");
    }
    Set<Type> interfaces = new HashSet<>();
    for (TypeTree superInterfaceTree : classTree.superInterfaces()) {
      Type interfaceType = superInterfaceTree.symbolType();
      if (interfaceType.isClass()) {
        String interfaceName = interfaceType.fullyQualifiedName();
        if (interfaces.contains(interfaceType)) {
          addIssue(superInterfaceTree, String.format(ERROR_MESSAGE, interfaceName));
        } else {
          checkExtending(classTree, interfaceType, interfaceName);
        }
        interfaces.add(interfaceType);
      } else {
        checkExtending(classTree, superInterfaceTree);
      }
    }
  }

