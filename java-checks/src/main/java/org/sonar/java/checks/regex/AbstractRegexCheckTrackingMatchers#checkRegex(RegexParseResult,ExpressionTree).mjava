  @Override
  public void checkRegex(RegexParseResult regexForLiterals, ExpressionTree methodInvocationOrAnnotation) {
    regexCreations.put(regexForLiterals, methodInvocationOrAnnotation);
    if (methodInvocationOrAnnotation.is(Tree.Kind.ANNOTATION)) {
      methodsCalledOnRegex.put(regexForLiterals, new ArrayList<>());
      return;
    }
    MethodInvocationTree mit = (MethodInvocationTree) methodInvocationOrAnnotation;
    if (PATTERN_COMPILE.matches(mit)) {
      handleAssignment(mit, regexForLiterals);
      methodInvocationToRegex.put(mit, regexForLiterals);
      methodsCalledOnRegex.put(regexForLiterals, new ArrayList<>());
    } else if (trackedMethodMatchers().matches(mit)) {
      methodsCalledOnRegex.put(regexForLiterals, new ArrayList<>(Collections.singletonList(mit)));
    } else {
      methodsCalledOnRegex.put(regexForLiterals, new ArrayList<>());
    }
  }

