  @Override
  public void visitClass(ClassTree tree) {
    for (Tree member : tree.members()) {
      if (member.is(Tree.Kind.VARIABLE) && semanticModel != null) {
        VariableTree variableTree = (VariableTree) member;
        Type symbolType = ((VariableTreeImpl) variableTree).getSymbol().getType();
        if (isConstantType(symbolType) && (tree.is(Tree.Kind.INTERFACE, Tree.Kind.ANNOTATION_TYPE) || isStaticFinal(variableTree))) {
          checkName(variableTree);
        }
      } else if (member.is(Tree.Kind.ENUM_CONSTANT)) {
        checkName((VariableTree) member);
      }
    }
    super.visitClass(tree);
  }

