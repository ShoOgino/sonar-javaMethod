  @Override
  public final void visitNode(Tree tree) {
    if (nestedDeprecationLevel == 0) {
      if (tree.is(Tree.Kind.IDENTIFIER)) {
        IdentifierTree identifierTree = (IdentifierTree) tree;
        if (isSimpleNameOfVariableTreeOrVariableIsDeprecated(identifierTree)) {
          return;
        }
        tryGetDeprecatedSymbol(identifierTree).ifPresent(deprecatedSymbol -> checkDeprecatedIdentifier(identifierTree, deprecatedSymbol));
      } else if (tree.is(Tree.Kind.METHOD)) {
        MethodTree methodTree = (MethodTree) tree;
        List<Symbol.MethodSymbol> deprectatedMethods = deprecatedMethodSymbols(methodTree);
        if (!deprectatedMethods.isEmpty()) {
          checkOverridingMethod(methodTree, deprectatedMethods);
        }
      }
    }
    if (isDeprecatedMethod(tree) || isDeprecatedClassTree(tree)) {
      nestedDeprecationLevel++;
    }
  }

