  @Override
  public void visitNode(Tree tree) {
    if (!hasSemantic()) {
      return;
    }
    SymbolicEvaluator engine = new SymbolicEvaluator();
    for (Map.Entry<Tree, SymbolicBooleanConstraint> entry : engine.evaluateMethod(new ExecutionState(), (MethodTree) tree).entrySet()) {
      switch (entry.getValue()) {
        case FALSE:
          raiseIssue(entry.getKey(), "false");
          break;
        case TRUE:
          raiseIssue(entry.getKey(), "true");
          break;
        default:
          break;
      }
    }
  }

