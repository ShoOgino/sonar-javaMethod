  @Override
  public void visitNode(Tree tree) {
    if (hasSemantic()) {
      MethodInvocationTree methodInvocationTree = (MethodInvocationTree) tree;
      Symbol symbolReference = null;
      Symbol.MethodSymbolSemantic method = null;
      String reportedName = "";
      if (methodInvocationTree.methodSelect().is(Tree.Kind.MEMBER_SELECT)) {
        MemberSelectExpressionTree mse = (MemberSelectExpressionTree) methodInvocationTree.methodSelect();
        IdentifierTree identifier = mse.identifier();
        reportedName = identifier.name();
        method = (Symbol.MethodSymbolSemantic) getSemanticModel().getReference(identifier);
        if (mse.expression().is(Tree.Kind.IDENTIFIER)) {
          symbolReference = getSemanticModel().getReference((IdentifierTree) mse.expression());
        }
      }
      if (symbolReference != null && method != null && isMethodFromCollection(method)) {
        reportIssueForParameters(methodInvocationTree, symbolReference, reportedName);
      }
    }
  }

