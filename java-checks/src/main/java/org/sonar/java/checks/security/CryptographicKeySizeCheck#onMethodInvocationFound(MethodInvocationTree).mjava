  @Override
  protected void onMethodInvocationFound(MethodInvocationTree mit) {
    MethodTree methodTree = ExpressionUtils.getEnclosingMethod(mit);
    String getInstanceArg = ExpressionsHelper.getConstantValueAsString(mit.arguments().get(0)).value();
    if (methodTree != null && getInstanceArg != null) {
      Optional<Symbol> assignedSymbol = getAssignedSymbol(mit);
      assignedSymbol.ifPresent(symbol -> {
        MethodVisitor methodVisitor = new MethodVisitor(getInstanceArg, symbol);
        methodTree.accept(methodVisitor);
      });
    }
  }

