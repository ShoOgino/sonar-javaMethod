  private static boolean isOnlyAssignedImmutableVariable(Symbol.VariableSymbol symbol) {
    VariableTree declaration = symbol.declaration();
    if (declaration != null) {
      ExpressionTree initializer = declaration.initializer();
      if (initializer != null) {
        boolean isInitializerImmutable = !isMutableType(initializer) || isEmptyArray(initializer);
        if (symbol.isFinal() || !isInitializerImmutable) {
          // If the symbol is final or it is assigned something mutable, no need to look at re-assignment:
          // we already know if it is immutable or not.
          return isInitializerImmutable;
        }
      }
    }

    return !assignementsOfMutableType(symbol.usages());
  }

