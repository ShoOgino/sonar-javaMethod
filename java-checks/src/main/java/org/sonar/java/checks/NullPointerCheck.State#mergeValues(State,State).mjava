    /**
     * merges the values of the variables from state1 and state2 into this.
     *
     * the set of all variables in state1 union state2 is first built,
     * then the variables in this set are queried in both states (their values fall back to the parent state if they are not found).
     * their value are then set in the parent state (either to the corresponding value if they are equal, or to UNKNOWN).
     *
     * @param state1 first state to merge
     * @param state2 second state to merge or null
     * @return this
     */
    public State mergeValues(State state1, @Nullable State state2) {
      Set<VariableSymbol> variables = new HashSet<>();
      variables.addAll(state1.variables.keySet());
      if (state2 != null) {
        variables.addAll(state2.variables.keySet());
      }
      for (VariableSymbol variable : variables) {
        AbstractValue currentValue = getVariableValue(variable);
        AbstractValue trueValue = state1.variables.get(variable);
        if (trueValue == null) {
          trueValue = currentValue;
        }
        AbstractValue falseValue = state2 != null ? state2.variables.get(variable) : currentValue;
        if (falseValue == null) {
          falseValue = currentValue;
        }
        // both null -> null; both notnull -> notnull; else unknown
        setVariableValue(variable, trueValue == falseValue ? trueValue : AbstractValue.UNKNOWN);
      }
      return this;
    }

