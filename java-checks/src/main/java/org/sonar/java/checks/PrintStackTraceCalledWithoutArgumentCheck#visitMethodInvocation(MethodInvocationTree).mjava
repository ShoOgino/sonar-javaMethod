  @Override
  public void visitMethodInvocation(MethodInvocationTree tree) {
    super.visitMethodInvocation(tree);
    if (tree.methodSelect().is(Tree.Kind.MEMBER_SELECT)) {
      MemberSelectExpressionTree memberSelectExpressionTree = (MemberSelectExpressionTree) tree.methodSelect();
      IdentifierTree identifierTree = memberSelectExpressionTree.identifier();
      if (!enclosingClassExtendsThrowable()
        && "printStackTrace".equals(identifierTree.name())
        && calledOnTypeInheritedFromThrowable(memberSelectExpressionTree.expression())
        && tree.arguments().isEmpty()) {
        context.reportIssue(this, identifierTree, "Use a logger to log this exception.");
      }
    }
  }

