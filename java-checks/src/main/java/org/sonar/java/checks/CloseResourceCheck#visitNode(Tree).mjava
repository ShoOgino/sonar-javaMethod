  @Override
  public void visitNode(Tree tree) {
    if (!hasSemantic()) {
      return;
    }
    CloseableVisitor visitor = new CloseableVisitor();
    DataFlowVisitor.analyze((MethodTree) tree, visitor);
    for (Tree issueTree : visitor.getIssueTrees()) {
      Type reportedType = null;
      if (issueTree.is(Tree.Kind.NEW_CLASS)) {
        reportedType = ((NewClassTree) issueTree).symbolType();
      }
      if (reportedType != null) {
        addIssue(issueTree, String.format("Close this \"%s\".", reportedType.name()));
      }
    }
  }

