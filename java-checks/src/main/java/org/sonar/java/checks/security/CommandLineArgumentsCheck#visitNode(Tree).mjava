  @Override
  public void visitNode(Tree tree) {
    if (!hasSemantic()) {
      return;
    }

    ClassTree classTree = (ClassTree) tree;
    for (Tree member : classTree.members()) {
      if (member.is(Tree.Kind.METHOD)) {
        MethodTreeImpl methodTree = (MethodTreeImpl) member;
        if (methodTree.isMainMethod()) {
          checkMainMethodArgsUsage(methodTree);
        } else {
          checkArgs4JAnnotation(methodTree.simpleName(), methodTree.symbol());
          methodTree.parameters().forEach(p -> checkArgs4JAnnotation(p, p.symbol()));
        }
      } else if (member.is(Tree.Kind.VARIABLE)) {
        checkArgs4JAnnotation(member, ((VariableTree) member).symbol());
      }
    }
  }

