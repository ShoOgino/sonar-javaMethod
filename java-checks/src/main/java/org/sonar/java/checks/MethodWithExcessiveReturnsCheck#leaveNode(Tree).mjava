  @Override
  public void leaveNode(Tree tree) {
    Tree reportTree = null;
    if (tree.is(Tree.Kind.METHOD)) {
      MethodTree method = (MethodTree) tree;
      if (MethodTreeUtils.isEqualsMethod(method)) {
        methods.pop();
      } else {
        reportTree = method.simpleName();
      }

    } else if (tree.is(Tree.Kind.LAMBDA_EXPRESSION)) {
      reportTree = ((LambdaExpressionTree) tree).arrowToken();
    }
    if (reportTree != null) {
      int count = returnStatementCounter.count(tree);
      if (count > max) {
        reportIssue(reportTree, "Reduce the number of returns of this method " + count + ", down to the maximum allowed " + max + ".");
      }
      methods.pop();
    }
  }

