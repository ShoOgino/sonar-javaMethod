  @Override
  protected MethodMatchers getMethodInvocationMatchers() {
    return MethodMatchers.or(
      MethodMatchers.create()
        .ofTypes(STRING)
        .constructor()
        .addWithoutParametersMatcher()
        .addParametersMatcher(STRING)
        .build(),
      MethodMatchers.create().ofTypes("java.lang.Byte").constructor().addParametersMatcher("byte").build(),
      MethodMatchers.create().ofTypes("java.lang.Character").constructor().addParametersMatcher("char").build(),
      MethodMatchers.create().ofTypes("java.lang.Short").constructor().addParametersMatcher("short").build(),
      MethodMatchers.create().ofTypes("java.lang.Integer").constructor().addParametersMatcher("int").build(),
      MethodMatchers.create().ofTypes("java.lang.Long").constructor().addParametersMatcher("long").build(),
      MethodMatchers.create().ofTypes("java.lang.Float").constructor().addParametersMatcher("float").build(),
      MethodMatchers.create().ofTypes("java.lang.Double").constructor().addParametersMatcher("double").build(),
      MethodMatchers.create().ofTypes("java.lang.Boolean").constructor().addParametersMatcher("boolean").build(),
      MethodMatchers.create().ofTypes("java.math.BigInteger").constructor().addParametersMatcher(STRING).build());
  }

