  private void checkIssue(Type type, Tree reportTree, TypeTree typeTree) {
    if (type.isSubtypeOf("java.util.Set") && !type.isSubtypeOf("java.util.EnumSet") && type instanceof ParametrizedTypeJavaType) {
      ParametrizedTypeJavaType parametrizedType = (ParametrizedTypeJavaType) type;
      List<TypeVariableJavaType> typeParameters = parametrizedType.typeParameters();
      Type variableType = typeTree.symbolType();
      if(typeParameters.isEmpty() && variableType instanceof ParametrizedTypeJavaType) {
        // for java 7 diamond operator lookup declaration.
        parametrizedType = (ParametrizedTypeJavaType) variableType;
        typeParameters = parametrizedType.typeParameters();
      }
      if(!typeParameters.isEmpty()) {
        Type typeParameter = parametrizedType.substitution(typeParameters.get(0));
        if (typeParameter != null && typeParameter.symbol().isEnum()) {
          reportIssue(reportTree, "Convert this Set to an EnumSet.");
        }
      }
    }
  }

