  private static boolean isPrimaryCallToEquals(AstNode node) {
    AstNode qualifiedIdentifier = node.getFirstChild(JavaGrammar.QUALIFIED_IDENTIFIER);
    if (qualifiedIdentifier == null) {
      return false;
    }

    String lastIdentifierValue = qualifiedIdentifier.getLastChild().getTokenOriginalValue();
    if (!"equals".equals(lastIdentifierValue)) {
      return false;
    }

    AstNode identifierSuffix = node.getFirstChild(JavaGrammar.IDENTIFIER_SUFFIX);
    if (identifierSuffix == null) {
      return false;
    }

    AstNode arguments = identifierSuffix.getFirstChild(JavaGrammar.ARGUMENTS);

    return arguments != null &&
      !arguments.hasDirectChildren(JavaPunctuator.COMMA) &&
      arguments.getFirstChild(JavaGrammar.EXPRESSION).hasDirectChildren(JavaGrammar.PRIMARY) &&
      isCallToToUpperCaseOrToLowerCase(arguments.getFirstChild(JavaGrammar.EXPRESSION).getFirstChild(JavaGrammar.PRIMARY));
  }

