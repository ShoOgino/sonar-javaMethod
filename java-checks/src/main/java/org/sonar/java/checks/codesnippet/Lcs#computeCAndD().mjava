  private void computeCAndD() {
    for (int i = 1; i <= inputI.length(); i++) {
      for (int j = 1; j <= inputJ.length(); j++) {
        if (comparator.compare(inputI.elementAt(i - 1), inputJ.elementAt(j - 1)) == 0) {
          c[i][j] = c[i - 1][j - 1] + 1;
          d[i][j] = 0;
        } else {
          c[i][j] = Math.max(c[i - 1][j], c[i][j - 1]);

          if (c[i - 1][j] > c[i][j - 1]) {
            d[i][j] = d[i - 1][j] + 1;
          } else if (c[i - 1][j] < c[i][j - 1]) {
            d[i][j] = d[i][j - 1] + 1;
          } else {
            d[i][j] = Math.max(d[i - 1][j], d[i][j - 1]) + 1;
          }
        }
      }
    }
  }

