  @Override
  public void visitNode(Tree tree) {
    ForStatementTree forStatement = (ForStatementTree) tree;
    ExpressionTree condition = forStatement.condition();
    if (condition == null || !condition.is(Tree.Kind.NOT_EQUAL_TO)) {
      return;
    }
    BinaryExpressionTree inequalityCondition = (BinaryExpressionTree) condition;
    IntAndIdentifierExpression loopVarAndTerminalValue = IntAndIdentifierExpression.of(inequalityCondition);
    if (loopVarAndTerminalValue != null) {
      IdentifierTree loopIdentifier = loopVarAndTerminalValue.identifier;
      Integer initialValue = initialValue(loopIdentifier, forStatement);
      if (initialValue != null) {
        int terminationValue = loopVarAndTerminalValue.value;
        if (initialValue < terminationValue) {
          checkLoopUpdate(forStatement, loopIdentifier, 1);
        }
        if (initialValue > terminationValue) {
          checkLoopUpdate(forStatement, loopIdentifier, -1);
        }
      }
    }
  }

