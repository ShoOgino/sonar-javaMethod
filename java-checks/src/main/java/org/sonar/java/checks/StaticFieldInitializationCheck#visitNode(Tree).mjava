  @Override
  public void visitNode(Tree tree) {
    if (tree.is(Tree.Kind.METHOD)) {
      methodUsesLocks.push(false);
    }
    if (tree.is(Tree.Kind.METHOD_INVOCATION)
      && (locks.anyMatch((MethodInvocationTree) tree))
      && methodUsesLocks.size() != 1) {
      methodUsesLocks.pop();
      methodUsesLocks.push(true);
    }
    if (hasSemantic() && tree.is(Tree.Kind.ASSIGNMENT)) {
      AssignmentExpressionTree aet = (AssignmentExpressionTree) tree;
      if (aet.variable().is(Tree.Kind.IDENTIFIER) && !isInSyncBlock() && !withinStaticInitializer.peek() && !isUsingLock()) {
        IdentifierTree variable = (IdentifierTree) aet.variable();
        if (isStaticNotVolatileObject(variable)) {
          reportIssue(variable, "Synchronize this lazy initialization of '" + variable.name() + "'");
        }
      }
    }
    if (tree.is(Tree.Kind.STATIC_INITIALIZER)) {
      withinStaticInitializer.push(true);
    }
    super.visitNode(tree);
  }

