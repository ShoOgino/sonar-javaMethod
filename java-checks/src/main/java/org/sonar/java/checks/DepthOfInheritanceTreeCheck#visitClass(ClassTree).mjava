  @Override
  public void visitClass(ClassTree tree) {
    if (!isBodyOfEnumConstantTree(tree)) {
      Type superClass = tree.symbol().superClass();
      int dit = 0;
      while (superClass != null) {
        String fullyQualifiedName = superClass.fullyQualifiedName();
        if (getPatterns().stream().anyMatch(pattern -> pattern.match(fullyQualifiedName))) {
          break;
        }
        dit++;
        superClass = superClass.symbol().superClass();
      }
      if (dit > max) {
        Tree reportTree = tree.simpleName();
        if (tree.parent().is(Tree.Kind.NEW_CLASS)) {
          reportTree = ((NewClassTree) tree.parent()).newKeyword();
        }
        context.reportIssue(this, reportTree, "This class has " + dit + " parents which is greater than " + max + " authorized.",
          new ArrayList<>(), dit - max);
      }
    }
    super.visitClass(tree);
  }

