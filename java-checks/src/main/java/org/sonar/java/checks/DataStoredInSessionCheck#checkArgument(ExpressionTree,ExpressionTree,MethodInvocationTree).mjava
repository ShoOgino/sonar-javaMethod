  private void checkArgument(ExpressionTree argument, ExpressionTree startPoint, MethodInvocationTree reportTree) {
    ExpressionTree expressionToEvaluate = argument;
    if (expressionToEvaluate.is(Tree.Kind.IDENTIFIER)) {
      IdentifierTree identifier = (IdentifierTree) expressionToEvaluate;
      identifiersUsedToSetAttribute.add(identifier);
      Symbol variable = identifier.symbol();
      ExpressionTree lastAssignmentOrDeclaration = ReassignmentFinder.getClosestReassignmentOrDeclarationExpression(startPoint, variable);
      if (lastAssignmentOrDeclaration != null && !usedBetween(variable, lastAssignmentOrDeclaration, startPoint)) {
        expressionToEvaluate = lastAssignmentOrDeclaration;
      }
    }

    if (isRequestOrCookieDataRetrieval(expressionToEvaluate)) {
      reportIssue(reportTree.methodSelect(), "Make sure the user is authenticated before this data is stored in the session.");
    } else if (expressionToEvaluate.is(Tree.Kind.METHOD_INVOCATION)) {
      MethodInvocationTree mit = (MethodInvocationTree) expressionToEvaluate;
      if (NO_EFFECT_OPERATION.anyMatch(mit)) {
        checkArgument(mit.arguments().get(0), mit, reportTree);
      }
    }
  }

