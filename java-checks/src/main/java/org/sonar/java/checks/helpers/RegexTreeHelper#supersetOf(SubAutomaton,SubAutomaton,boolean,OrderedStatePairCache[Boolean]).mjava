  private static boolean supersetOf(SubAutomaton auto1, SubAutomaton auto2, boolean defaultAnswer, OrderedStatePairCache<Boolean> cache) {
    return computeIfAbsentFromCache(auto1, auto2, defaultAnswer, cache,
      () -> auto1.anySuccessorMatch(successor -> supersetOf(successor, auto2, defaultAnswer, cache), false),
      () -> auto2.allSuccessorMatch(successor -> supersetOf(auto1, successor, defaultAnswer, cache), false),
      () -> {
        SimplifiedRegexCharacterClass characterClass1 = SimplifiedRegexCharacterClass.of(auto1.start);
        SimplifiedRegexCharacterClass characterClass2 = SimplifiedRegexCharacterClass.of(auto2.start);
        boolean answer = defaultAnswer;
        if (characterClass1 != null && characterClass2 != null) {
          answer = characterClass1.supersetOf(characterClass2, defaultAnswer) &&
            auto1.anySuccessorMatch(successor1 -> auto2.anySuccessorMatch(successor2 -> supersetOf(successor1, successor2, defaultAnswer, cache), true), true);
        }
        return answer;
      });
  }

