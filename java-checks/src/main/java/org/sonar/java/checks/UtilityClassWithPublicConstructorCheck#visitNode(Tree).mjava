  @Override
  public void visitNode(Tree tree) {
    ClassTree classTree = (ClassTree) tree;
    if (!extendsAnotherClass(classTree) && hasOnlyStaticMembers(classTree)) {
      boolean hasImplicitPublicConstructor = true;
      for (Tree explicitConstructor : getExplicitConstructors(classTree)) {
        hasImplicitPublicConstructor = false;
        if (isPublicConstructor(explicitConstructor)) {
          addIssue(explicitConstructor, "Hide this public constructor.");
        }
      }
      if (hasImplicitPublicConstructor) {
          addIssue(classTree, "Add a private constructor to hide the implicit public one.");
      }
    }
  }

