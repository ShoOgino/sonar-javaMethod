  @Override
  public void scanFile(JavaFileScannerContext context) {
    this.context = context;
    CompilationUnitTree cut = context.getTree();
    ExpressionTree packageName = getPackageName(cut);

    pendingReferences.clear();
    lineByImportReference.clear();
    pendingImports.clear();

    currentPackage = ExpressionsHelper.concatenate(packageName);
    for (ImportClauseTree importClauseTree : cut.imports()) {
      ImportTree importTree = null;

      if (importClauseTree.is(Tree.Kind.IMPORT)) {
        importTree = (ImportTree) importClauseTree;
      }

      if (importTree == null || importTree.isStatic()) {
        continue;
      }

      String importName = ExpressionsHelper.concatenate((ExpressionTree) importTree.qualifiedIdentifier());
      if ("java.lang.*".equals(importName)) {
        context.reportIssue(this, importTree, "Remove this unnecessary import: java.lang classes are always implicitly imported.");
      } else if (isImportFromSamePackage(importName)) {
        context.reportIssue(this, importTree, "Remove this unnecessary import: same package classes are always implicitly imported.");
      } else if (!isImportOnDemand(importName)) {
        if (isJavaLangImport(importName)) {
          context.reportIssue(this, importTree, "Remove this unnecessary import: java.lang classes are always implicitly imported.");
        } else if (isDuplicatedImport(importName)) {
          context.reportIssue(this, importTree, "Remove this duplicated import.");
        } else {
          lineByImportReference.put(importName, importTree);
          pendingImports.add(importName);
        }
      }
    }
    //check references
    scan(cut);
    //check references from comments.
    new CommentVisitor().checkImportsFromComments(cut, pendingImports);
    leaveFile();
  }

