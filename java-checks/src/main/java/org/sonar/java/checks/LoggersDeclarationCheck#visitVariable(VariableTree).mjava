  @Override
  public void visitVariable(VariableTree tree) {
    super.visitVariable(tree);
    if (tree.symbol().type().is("org.apache.maven.plugin.logging.Log")) {
      return;
    }
    if (isLoggerType(tree.type())) {
      boolean isPrivateStaticFinal = isPrivateStaticFinal(tree.modifiers());
      IdentifierTree variableIdentifier = tree.simpleName();
      String name = variableIdentifier.name();
      boolean hasValidLoggerName = isValidLoggerName(name);

      if (!isPrivateStaticFinal && !hasValidLoggerName) {
        context.reportIssue(this, variableIdentifier, getPrivateStaticFinalMessage(name) + " and rename it to comply with the format \"" + format + "\".");
      } else if (!isPrivateStaticFinal) {
        context.reportIssue(this, variableIdentifier, getPrivateStaticFinalMessage(name) + ".");
      } else if (!hasValidLoggerName) {
        context.reportIssue(this, variableIdentifier, "Rename the \"" + variableIdentifier + "\" logger to comply with the format \"" + format + "\".");
      }
    }
  }

