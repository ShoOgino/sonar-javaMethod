  @Override
  public void visitToken(Token token) {
    switch (state) {
      case EXPECT_FINALIZE:
        state = "finalize".equals(token.getOriginalValue()) ? State.EXPECT_LPAREN : State.EXPECT_FINALIZE;
        break;
      case EXPECT_LPAREN:
        state = "(".equals(token.getOriginalValue()) ? State.EXPECT_RPAREN : State.EXPECT_FINALIZE;
        break;
      case EXPECT_RPAREN:
        state = ")".equals(token.getOriginalValue()) ? State.EXPECT_SEMI : State.EXPECT_FINALIZE;
        break;
      case EXPECT_SEMI:
        if (";".equals(token.getOriginalValue()) && !isInFinalizeMethod) {
          getContext().createLineViolation(this, "Remove this call to finalize().", token);
        }
        state = State.EXPECT_FINALIZE;
        break;
      default:
        throw new IllegalStateException();
    }
  }

