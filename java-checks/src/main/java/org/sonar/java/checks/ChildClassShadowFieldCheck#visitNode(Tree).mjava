  @Override
  public void visitNode(Tree tree) {
    TypeTree superClass = ((ClassTree) tree).superClass();
    if (superClass != null) {
      Symbol.TypeSymbol superclassSymbol = superClass.symbolType().symbol();
      ((ClassTree) tree).members().stream()
        .filter(m -> m.is(Kind.VARIABLE))
        .map(VariableTree.class::cast)
        .map(VariableTree::simpleName)
        .forEach(fieldSimpleName -> {
          if (!IGNORED_FIELDS.contains(fieldSimpleName.name())) {
            checkForIssue(superclassSymbol, fieldSimpleName);
          }
        });
    }
  }

