  public AbstractValue checkNullity(Tree tree) {
    if (tree.is(Tree.Kind.IDENTIFIER)) {
      Symbol symbol = semanticModel.getReference((IdentifierTreeImpl) tree);
      if (symbol != null && symbol.isVariableSymbol()) {
        AbstractValue value = currentState.getVariableValue((VariableSymbol) symbol);
        if (value != AbstractValue.UNKNOWN) {
          return value;
        }
        return checkNullity(symbol);
      }
    } else if (tree.is(Tree.Kind.METHOD_INVOCATION)) {
      Symbol symbol = ((MethodInvocationTree) tree).symbol();
      if (symbol.isMethodSymbol()) {
        return checkNullity(symbol);
      }
    } else if (tree.is(Tree.Kind.NULL_LITERAL)) {
      return AbstractValue.NULL;
    }
    // FIXME(merciesa): should use annotation on package and class
    return AbstractValue.UNKNOWN;
  }

