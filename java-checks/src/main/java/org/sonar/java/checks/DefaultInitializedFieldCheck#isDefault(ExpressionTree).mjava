  private static boolean isDefault(ExpressionTree expression) {
    switch (expression.kind()) {
      case NULL_LITERAL:
        return true;
      case CHAR_LITERAL:
        String charValue = ((LiteralTree) expression).value();
        return "'\\u0000'".equals(charValue) || "'\\0'".equals(charValue);
      case BOOLEAN_LITERAL:
        return "false".equals(((LiteralTree) expression).value());
      case INT_LITERAL:
      case LONG_LITERAL:
        Long value = LiteralUtils.longLiteralValue(expression);
        return value != null && value == 0;
      case FLOAT_LITERAL:
      case DOUBLE_LITERAL:
        return Double.doubleToLongBits(Double.valueOf(((LiteralTree) expression).value())) == 0;
      default:
        return false;
    }
  }

