    @Override
    public void visitParameterizedType(ParameterizedTypeTree tree) {
      Type symbolType = tree.type().symbolType();
      TypeArguments typeArguments = tree.typeArguments();

      if (typeArguments.size() == 3 && symbolType.is("java.util.stream.Collector")) {
        // Second type parameter of Collector is ignored as it is an implementation detail
        reportIfWildcard(typeArguments.get(0));
        reportIfWildcard(typeArguments.get(2));
      } else if (!symbolType.is("java.lang.Class") && !symbolType.isUnknown()) {
        typeArguments.forEach(this::reportIfWildcard);
      }
      super.visitParameterizedType(tree);
    }

