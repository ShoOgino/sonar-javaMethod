  private static Optional<MethodSymbol> lookupFunctionalMethod(ClassTree interfaceTree) {
    return interfaceTree.symbol().memberSymbols().stream()
        .filter(Symbol::isMethodSymbol)
        .map(MethodSymbol.class::cast)
        .filter(MethodSymbol::isAbstract)
        .filter(StandardFunctionalInterfaceCheck::isNotObjectMethod)
        .findFirst();
  }

