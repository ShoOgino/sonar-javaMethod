  @Override
  public void visitClass(ClassTree tree) {
    if (tree.simpleName() != null) {
      Symbol.TypeSymbol classSymbol = tree.symbol();
      Collection<Symbol> members = classSymbol.memberSymbols();
      for (Symbol sym : members) {
        if (sym.isVariableSymbol() && !staticFieldSameType(classSymbol, sym)) {
          //Exclude static fields of the same type.
          fields.add(semanticModel.getTree(sym));
        }
      }
      currentClassName = tree.simpleName().name();
    }
    super.visitClass(tree);
    currentClassName = "";
    fields.clear();
  }

