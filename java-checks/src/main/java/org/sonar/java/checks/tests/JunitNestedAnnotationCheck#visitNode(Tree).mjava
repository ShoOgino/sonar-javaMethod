  @Override
  public void visitNode(Tree tree) {
    ClassTree classTree = (ClassTree) tree;
    IdentifierTree className = classTree.simpleName();
    if (className == null) {
      return;
    }
    Symbol.TypeSymbol classSymbol = classTree.symbol();
    if (isNestedClass(classSymbol) && hasJUnit5TestMethods(classTree)) {
      boolean hasNestedAnnotation = UnitTestUtils.hasNestedAnnotation(classTree);
      if (classSymbol.isStatic() && hasNestedAnnotation) {
        reportIssue(className, "Remove @Nested from this static nested test class or convert it into an inner class");
      } else if (!classSymbol.isStatic() && !hasNestedAnnotation) {
        reportIssue(className, "Add @Nested to this inner test class");
      }
    }
  }

