  @Override
  public void visitNode(Tree tree) {
    if (hasSemantic()) {
      if (tree.is(Tree.Kind.REMAINDER)) {
        BinaryExpressionTree remainderTree = (BinaryExpressionTree) tree;
        if (isIntegralOne(remainderTree.rightOperand())) {
          addIssue(tree, "Remove this computation of % 1, which always evaluates to zero.");
        }
      } else {
        MethodInvocationTree methodTree = (MethodInvocationTree) tree;
        if (isConstantWithLiteral(methodTree) || isTruncation(methodTree) || isConstantWithZero(methodTree) || isConstantWithZeroOrOne(methodTree)) {
          addIssue(tree, String.format("Remove this silly call to \"Math.%s\"", methodTree.symbol().name()));
        }
      }
    }
  }

