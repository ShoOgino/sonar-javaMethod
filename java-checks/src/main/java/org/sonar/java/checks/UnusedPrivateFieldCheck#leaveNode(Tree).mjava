  @Override
  public void leaveNode(Tree tree) {
    if (tree.is(Tree.Kind.METHOD)) {
      MethodTree method = (MethodTree) tree;
      if (method.modifiers().modifiers().contains(Modifier.NATIVE)) {
        hasNativeMethod = true;
      }
    } else if (tree.is(Tree.Kind.CLASS)) {
      classes.add((ClassTree) tree);
    } else {
      if (hasSemantic() && !hasNativeMethod) {
        AssignmentFinder assignmentFinder = new AssignmentFinder();
        tree.accept(assignmentFinder);
        for (ClassTree classTree : classes) {
          checkClassFields(classTree, assignmentFinder);
        }
      }
      classes.clear();
      hasNativeMethod = false;
    }
  }

