  public boolean intersects(SimplifiedRegexCharacterClass that, boolean defaultAnswer) {
    if (defaultAnswer && ((containsUnknownCharacters && !that.isEmpty()) || (!isEmpty() && that.containsUnknownCharacters))) {
      return true;
    }
    Iterator<Map.Entry<Integer, RegexSyntaxElement>> iter = that.contents.entrySet().iterator();
    if (!iter.hasNext()) {
      return false;
    }
    Map.Entry<Integer, RegexSyntaxElement> entry = iter.next();
    while (iter.hasNext()) {
      Map.Entry<Integer, RegexSyntaxElement> nextEntry = iter.next();
      if (entry.getValue() != null && hasEntryBetween(entry.getKey(), nextEntry.getKey())) {
        return true;
      }
      entry = nextEntry;
    }
    return entry.getValue() != null && hasEntryBetween(entry.getKey(), Character.MAX_CODE_POINT);
  }

