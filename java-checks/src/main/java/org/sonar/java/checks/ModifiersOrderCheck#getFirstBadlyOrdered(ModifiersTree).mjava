  private static ModifierTree getFirstBadlyOrdered(ModifiersTree modifiersTree) {
    int modifierIndex = -1;
    Modifier[] modifiers = Modifier.values();
    for (ModifierTree modifier : modifiersTree.list()) {
      if (modifier.is(Kind.ANNOTATION)) {
        if (modifierIndex >= 0) {
          return modifier;
        }
      } else {
        if (modifierIndex < 0) {
          modifierIndex = 0;
        }
        ModifierKeywordTree mkt = (ModifierKeywordTree) modifier;
        for (; modifierIndex < modifiers.length && !mkt.modifier().equals(modifiers[modifierIndex]); modifierIndex++) {
          // We're just interested in the final value of modifierIndex
        }
        if (modifierIndex == modifiers.length) {
          return modifier;
        }
      }
    }
    return null;
  }

