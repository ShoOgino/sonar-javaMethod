    private boolean usesIgnoredCloseable(List<ExpressionTree> arguments) {
      for (ExpressionTree argument : arguments) {
        if (argument.is(Tree.Kind.IDENTIFIER, Tree.Kind.MEMBER_SELECT)) {
          IdentifierTree identifier;
          if (argument.is(Tree.Kind.MEMBER_SELECT)) {
            identifier = ((MemberSelectExpressionTree) argument).identifier();
          } else {
            identifier = (IdentifierTree) argument;
          }
          if (isIgnoredCloseable(identifier.symbol())) {
            return true;
          }
        } else if (argument.is(Tree.Kind.NEW_CLASS) && usesIgnoredCloseable(((NewClassTree) argument).arguments())) {
          return true;
        } else if (argument.is(Tree.Kind.METHOD_INVOCATION) && usesIgnoredCloseable(((MethodInvocationTree) argument).arguments())) {
          return true;
        }
      }
      return false;
    }

