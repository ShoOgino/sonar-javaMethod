  private static boolean intentionalFallThrough(Tree caseGroup, Tree nextCaseGroup) {
    // Check first token of next case group when comment is last element of case group it is attached to next group.
    FallThroughCommentVisitor visitor = new FallThroughCommentVisitor();
    CaseGroupTree caseGroupTree = (CaseGroupTree) caseGroup;
    List<Tree> treesToScan = Stream.of(caseGroupTree.body(), Collections.singletonList(nextCaseGroup.firstToken()))
      .flatMap(List::stream)
      .collect(Collectors.toList());
    visitor.scan(treesToScan);
    return visitor.hasComment;
  }

