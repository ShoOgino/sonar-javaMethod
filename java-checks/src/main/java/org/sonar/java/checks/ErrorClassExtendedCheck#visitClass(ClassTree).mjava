  @Override
  public void visitClass(ClassTree tree) {
    TypeTree superClass = tree.superClass();
    if (tree.is(Tree.Kind.CLASS) && superClass != null) {
      if (superClass.is(Tree.Kind.IDENTIFIER)) {
        IdentifierTree idt = (IdentifierTree) superClass;
        if ("Error".equals(idt.name())) {
          context.reportIssue(this, superClass, "Extend \"java.lang.Exception\" or one of its subclasses.");
        }
      } else if (superClass.is(Tree.Kind.MEMBER_SELECT)) {
        MemberSelectExpressionTree mse = (MemberSelectExpressionTree) superClass;
        if ("Error".equals(mse.identifier().name()) && isJavaLang(mse.expression())) {
          context.reportIssue(this, superClass, "Extend \"java.lang.Exception\" or one of its subclasses.");
        }
      }
    }
    super.visitClass(tree);
  }

