  @Override
  public void visitClass(ClassTree tree) {
    if (tree.is(Tree.Kind.CLASS))
    {
      ClassTree clz = (ClassTree) tree;
      if (clz.superClass() != null) {
        if (clz.superClass().is(Tree.Kind.IDENTIFIER)) {
          IdentifierTree idt = (IdentifierTree) clz.superClass();
          if (idt.name().equals("Error")) {
            context.addIssue(tree, ruleKey, "Extend \"java.lang.Exception\" or one of its subclasses.");
          }
        } else if (clz.superClass().is(Tree.Kind.MEMBER_SELECT)) {
          MemberSelectExpressionTree mse = (MemberSelectExpressionTree) clz.superClass();
          if (mse.identifier().name().equals("Error") && isJavaLang(mse.expression())) {
            context.addIssue(tree, ruleKey, "Extend \"java.lang.Exception\" or one of its subclasses.");
          }
        }
      }
    }

    super.visitClass(tree);
  }

