  @Override
  public void visitClass(ClassTree tree) {
    if ((tree.is(Tree.Kind.CLASS) || tree.is(Tree.Kind.ENUM)) && isComparable(tree)) {
      boolean hasEquals = false;
      Tree compare = null;

      for (Tree member : tree.members()) {
        if (member.is(Tree.Kind.METHOD)) {
          MethodTree method = (MethodTree) member;

          if (isEqualsMethod(method)) {
            hasEquals = true;
          } else if (isCompareToMethod(method)) {
            compare = member;
          }
        }
      }

      if (compare != null && !hasEquals) {
        context.addIssue(compare, ruleKey, "Override \"equals(Object obj)\" to comply with the contract of the \"compareTo(T o)\" method.");
      }
    }
    super.visitClass(tree);
  }

