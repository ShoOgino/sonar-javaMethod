  // raises an issue if the passed tree can be null.
  private void checkForIssue(Tree tree) {
    if (tree.is(Tree.Kind.IDENTIFIER)) {
      Symbol symbol = semanticModel.getReference((IdentifierTreeImpl) tree);
      if (symbol != null && symbol.isVariableSymbol() && currentState.getVariableValue((VariableSymbol) symbol) == AbstractValue.NULL) {
        context.addIssue(tree, RULE_KEY, String.format("%s can be null.", symbol.name()));
      }
    } else if (tree.is(Tree.Kind.METHOD_INVOCATION)) {
      Symbol symbol = ((MethodInvocationTreeImpl) tree).getSymbol();
      if (symbol.isMethodSymbol() && checkNullity(symbol) == AbstractValue.NULL) {
        context.addIssue(tree, RULE_KEY, String.format("Value returned by method '%s' can be null.", symbol.name()));
      }
    } else if (tree.is(Tree.Kind.NULL_LITERAL)) {
      context.addIssue(tree, RULE_KEY, "null is dereferenced or passed as argument.");
    }
  }

