  @Override
  protected void onMethodInvocationFound(MethodInvocationTree tree) {
    ExpressionTree expressionTree = extractBaseExpression(((MemberSelectExpressionTree) tree.methodSelect()).expression());
    if (expressionTree.is(Tree.Kind.IDENTIFIER)) {
      addIssue(expressionTree, String.format("\"%s\" is already a string, there's no need to call \"toString()\" on it.",
        ((IdentifierTree) expressionTree).identifierToken().text()));
    } else if (expressionTree.is(Tree.Kind.STRING_LITERAL)) {
      addIssue(expressionTree, "there's no need to call \"toString()\" on a string literal.");
    } else if (expressionTree.is(Tree.Kind.METHOD_INVOCATION)) {
      addIssue(expressionTree, String.format("\"%s\" returns a string, there's no need to call \"toString()\".",
        extractName(((MethodInvocationTree) expressionTree).methodSelect())));
    } else if (expressionTree.is(Tree.Kind.ARRAY_ACCESS_EXPRESSION)) {
      addIssue(expressionTree, String.format("\"%s\" is an array of strings, there's no need to call \"toString()\".",
        extractName(((ArrayAccessExpressionTree) expressionTree).expression())));
    }
  }

