  private boolean checkNewMap(@Nullable ExpressionTree expr, Type parentExpressionType) {
    if (expr == null) {
      return false;
    }
    ExpressionTree expression = ExpressionUtils.skipParentheses(expr);
    if (!expression.is(Tree.Kind.NEW_CLASS)) {
      return false;
    }
    NewClassTree newClassTree = (NewClassTree) expression;
    Type newClassType = newClassTree.symbolType();
    if (newClassType.isSubtypeOf(JAVA_UTIL_HASH_MAP)) {
      String name = nonComparableKeyTypeName(newClassType);
      if (name == null) {
        name = nonComparableKeyTypeName(parentExpressionType);
      }
      if (name != null) {
        reportIssue(newClassTree, name);
        return true;
      }
    }
    return false;
  }

