  private void checkForIssue(Symbol.TypeSymbol classSymbol, Tree memberTree, String fieldName) {
    for (Symbol.TypeSymbol symbol = classSymbol; symbol != null; symbol = getSuperclass(symbol)) {
      for (Symbol member : symbol.memberSymbols()) {
        if (member.isVariableSymbol() && !member.isPrivate()) {
          if (member.name().equals(fieldName)) {
            addIssue(memberTree, String.format("\"%s\" is the name of a field in \"%s\".", fieldName, symbol.name()));
            return;
          }
          if (member.name().equalsIgnoreCase(fieldName)) {
            addIssue(memberTree, String.format("\"%s\" differs only by case from \"%s\" in \"%s\".", fieldName, member.name(), symbol.name()));
            return;
          }
        }
      }
    }
  }

