  private void checkForIssue(Symbol symbol, IdentifierTree reportTree, Multimap<String, Symbol> membersByName) {
    String name = symbol.name();
    for (String knownMemberName : membersByName.keySet()) {
      if (name.equalsIgnoreCase(knownMemberName)) {
        Optional<Symbol> conflictingMember = membersByName.get(knownMemberName).stream()
          .filter(knownMemberSymbol -> !symbol.equals(knownMemberSymbol) && isValidIssueLocation(symbol, knownMemberSymbol) && isInvalidMember(symbol, knownMemberSymbol))
          .findFirst();
        if (conflictingMember.isPresent()) {
          Symbol conflictingSymbol = conflictingMember.get();
          reportIssue(reportTree,
            "Rename "
              + getSymbolTypeName(symbol) + " \"" + name + "\" "
              + "to prevent any misunderstanding/clash with "
              + getSymbolTypeName(conflictingSymbol) + " \"" + knownMemberName + "\""
              + getDefinitionPlace(symbol, conflictingSymbol) + ".");
        }
      }
    }
  }

