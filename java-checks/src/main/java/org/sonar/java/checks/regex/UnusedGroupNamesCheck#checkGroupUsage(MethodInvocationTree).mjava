  private void checkGroupUsage(MethodInvocationTree mit) {
    matcherToPattern.forEach((knownMatcher, knownPattern) -> {
      if (!ExpressionUtils.isInvocationOnVariable(mit, knownMatcher, false)) {
        return;
      }
      KnownGroupsCollector knownGroups = knownPatternsWithGroups.get(knownPattern);
      usedGroupsRegexes.add(knownGroups.target);
      ExpressionTree arg0 = mit.arguments().get(0);
      Type arg0Type = arg0.symbolType();
      if (arg0Type.is("int")) {
        checkUsingNumberInsteadOfName(knownGroups, arg0);
      } else {
        checkNoSuchName(knownGroups, arg0);
      }
    });
  }

