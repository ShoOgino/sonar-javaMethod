  @Override
  public void visitNode(AstNode node) {
    if (node.is(JavaGrammar.FOR_STATEMENT)) {
      pendingLoopCounters = getLoopCounters(node);
    } else if (node.is(JavaGrammar.STATEMENT) && node.getParent().is(JavaGrammar.FOR_STATEMENT)) {
      loopCounters.addAll(pendingLoopCounters);
      pendingLoopCounters = Collections.EMPTY_SET;
    } else if (!loopCounters.isEmpty()) {
      if (node.is(JavaGrammar.ASSIGNMENT_EXPRESSION)) {
        for (int i = 0; i < node.getNumberOfChildren() - 1; i++) {
          check(merge(node.getChild(i)), node.getChild(i).getTokenLine());
        }
      } else if (isIncrementOrDecrementExpression(node)) {
        for (AstNode child : node.getChildren()) {
          check(merge(child), child.getTokenLine());
        }
      }
    }
  }

