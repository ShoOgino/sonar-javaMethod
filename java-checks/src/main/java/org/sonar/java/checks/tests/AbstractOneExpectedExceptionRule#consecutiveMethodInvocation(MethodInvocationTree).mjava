  private static Optional<MethodInvocationTree> consecutiveMethodInvocation(MethodInvocationTree mit) {
    Tree mitParent = mit.parent();
    while (mitParent.is(Tree.Kind.PARENTHESIZED_EXPRESSION)) {
      mitParent = mitParent.parent();
    }
    if (mitParent.is(Tree.Kind.MEMBER_SELECT)) {
      MemberSelectExpressionTree memberSelect = (MemberSelectExpressionTree) mitParent;
      Tree memberSelectParent = memberSelect.parent();
      if (memberSelectParent.is(Tree.Kind.METHOD_INVOCATION)) {
        return Optional.of((MethodInvocationTree) memberSelectParent);
      }
    }
    return Optional.empty();
  }

