  @Override
  public void visitNode(Tree tree) {
    AnnotationTree annotationTree = (AnnotationTree) tree;
    TypeSymbol annotationSymbol = annotationTree.symbolType().symbol();
    if (annotationSymbol.isUnknown()) {
      return;
    }

    Map<String, Object> defaultValueByName = annotationSymbol.memberSymbols().stream()
      .filter(Symbol::isMethodSymbol)
      .map(Symbol.MethodSymbol.class::cast)
      .filter(s -> JUtils.defaultValue(s) != null)
      .collect(Collectors.toMap(Symbol::name, JUtils::defaultValue));

    for (ExpressionTree argument : annotationTree.arguments()) {
      ExpressionTree valueSet = argument;
      // Single element annotation : JLS8 9.7.3 : one param must be named value.
      String paramName = "value";
      if (argument.is(Tree.Kind.ASSIGNMENT)) {
        AssignmentExpressionTree assignmentTree = (AssignmentExpressionTree) argument;
        IdentifierTree nameTree = (IdentifierTree) assignmentTree.variable();
        paramName = nameTree.name();
        valueSet = assignmentTree.expression();
      }
      if (setValueIsSameAsDefaultValue(defaultValueByName.get(paramName), valueSet)) {
        reportIssue(argument, String.format("Remove this default value assigned to parameter \"%s\".", paramName));
      }
    }
  }

