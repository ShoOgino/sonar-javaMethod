  private boolean hasParentExpression(Tree tree) {
    Tree parentTree = this.parent.peek();
    //Exclude condition of conditional expression
    if(parentTree.is(Kind.CONDITIONAL_EXPRESSION)) {
      ConditionalExpressionTree conditionalExpressionTree = (ConditionalExpressionTree) parentTree;
      return !(tree.equals(conditionalExpressionTree.condition()) || tree.equals(conditionalExpressionTree.falseExpression()));
    }
    //Exclude expression of array access expression
    if(parentTree.is(Kind.ARRAY_ACCESS_EXPRESSION) && tree.equals(((ArrayAccessExpressionTree) parentTree).expression()) ) {
      return false;
    }
    return parentTree.is(PARENT_EXPRESSION);
  }

