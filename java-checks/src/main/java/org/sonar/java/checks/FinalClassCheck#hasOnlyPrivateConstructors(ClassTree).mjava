  private static boolean hasOnlyPrivateConstructors(ClassTree classTree) {
    boolean hasConstructor = false;
    for (Tree member : classTree.members()) {
      if(member.is(Kind.CONSTRUCTOR)) {
        hasConstructor = true;
        if(!ModifiersUtils.hasModifier(((MethodTree) member).modifiers(), Modifier.PRIVATE)) {
          // has a constructor not private.
          return false;
        }
      }
    }
    return hasConstructor;
  }

