    @Override
    public void visitCharacterClassUnion(CharacterClassUnionTree tree) {
      List<CharacterClassElementTree> duplicates = new ArrayList<>();
      SimplifiedRegexCharacterClass characterClass = new SimplifiedRegexCharacterClass();
      for (CharacterClassElementTree element : tree.getCharacterClasses()) {
        if (characterClass.intersects(new SimplifiedRegexCharacterClass(element, getActiveFlagSet()), false)) {
          duplicates.add(element);
        }
        characterClass.add(element, getActiveFlagSet());
      }
      if (!duplicates.isEmpty()) {
        List<RegexIssueLocation> secondaries = duplicates.stream()
          .skip(1)
          .map(duplicate -> new RegexIssueLocation(duplicate, "Additional duplicate"))
          .collect(Collectors.toList());
        reportIssue(duplicates.get(0), MESSAGE, null, secondaries);
      }
      super.visitCharacterClassUnion(tree);
    }

