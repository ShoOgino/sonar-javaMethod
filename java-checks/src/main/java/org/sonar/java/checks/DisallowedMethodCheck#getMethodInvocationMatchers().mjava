  @Override
  protected MethodMatchers getMethodInvocationMatchers() {
    if (StringUtils.isEmpty(methodName)) {
      return MethodMatchers.none();
    }
    MethodMatchers.TypeBuilder typeBuilder = MethodMatchers.create();
    MethodMatchers.NameBuilder nameBuilder;
    if (StringUtils.isNotEmpty(className)) {
      nameBuilder = typeBuilder.ofTypes(className);
    } else {
      nameBuilder = typeBuilder.ofAnyType();
    }
    MethodMatchers.ParametersBuilder parametersBuilder = nameBuilder.names(methodName);

    if (allOverloads) {
      return parametersBuilder.withAnyParameters().build();
    } else {
      String[] args = StringUtils.split(argumentTypes, ",");
      if (args.length == 0) {
        return parametersBuilder.addWithoutParametersMatcher().build();
      } else {
        String[] trimmedArgs = new String[args.length];
        for (int i = 0; i < trimmedArgs.length; i++) {
          trimmedArgs[i] = StringUtils.trim(args[i]);
        }
        return parametersBuilder.addParametersMatcher(trimmedArgs).build();
      }
    }
  }

