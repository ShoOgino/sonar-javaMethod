  @Override
  public void visitNode(Tree tree) {
    AnnotationTree annotationTree = (AnnotationTree) tree;
    List<String> ruleWarnings = getAllowedWarnings();

    if (isJavaLangSuppressWarnings(annotationTree)) {
      if (ruleWarnings.isEmpty()) {
        addIssue(annotationTree, "Suppressing warnings is not allowed");
      } else {
        List<String> suppressedWarnings = getSuppressedWarnings(annotationTree.arguments().get(0));
        List<String> issues = Lists.newArrayList();
        for (String currentWarning : suppressedWarnings) {
          if (!ruleWarnings.contains(currentWarning)) {
            issues.add(currentWarning);
          }
        }
        if (!issues.isEmpty()) {
          StringBuilder sb = new StringBuilder("Suppressing the '").append(Joiner.on(", ").join(issues))
            .append("' warning").append(issues.size() > 1 ? "s" : "").append(" is not allowed");
          addIssue(annotationTree, sb.toString());
        }
      }
    }
  }

