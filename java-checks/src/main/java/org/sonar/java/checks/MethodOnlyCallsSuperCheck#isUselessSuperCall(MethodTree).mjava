  private static boolean isUselessSuperCall(MethodTree methodTree) {
    ExpressionTree callToSuper = null;
    StatementTree statementTree = methodTree.block().body().get(0);
    if (returnsVoid(methodTree) && statementTree.is(Tree.Kind.EXPRESSION_STATEMENT)) {
      callToSuper = ((ExpressionStatementTree) statementTree).expression();
    } else if (statementTree.is(Tree.Kind.RETURN_STATEMENT)) {
      callToSuper = ((ReturnStatementTree) statementTree).expression();
    }
    if (callToSuper == null || !isCallToSuper(methodTree, callToSuper)) {
      return false;
    }
    Symbol parentMethod = ((MethodInvocationTree) callToSuper).symbol();
    if (parentMethod.isUnknown()) {
      return false;
    }
    return sameVisibility(methodTree.symbol(), parentMethod);
  }

