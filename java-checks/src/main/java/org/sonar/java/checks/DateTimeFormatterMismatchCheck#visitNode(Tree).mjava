  @Override
  public void visitNode(Tree tree) {
    MethodInvocationTree invocation = (MethodInvocationTree) tree;
    if (OF_PATTERN_MATCHER.matches(invocation)) {
      visitPattern(invocation);
    } else if (APPEND_VALUE_MATCHER.matches(invocation)) {
      ChainedInvocationVisitor visitor = new ChainedInvocationVisitor();
      invocation.accept(visitor);
      if (!visitor.usesWeek || !visitor.usesYear) {
        return;
      }
      if (visitor.usesWeekBasedYear && !visitor.usesWeekOfWeekBasedYear) {
        reportIssue(visitor.primary, CHANGE_YEAR_FORMAT_TO_CHRONOFIELD_MESSAGE, visitor.secondaries, null);
      } else if (!visitor.usesWeekBasedYear && visitor.usesWeekOfWeekBasedYear) {
        reportIssue(visitor.primary, CHANGE_YEAR_FORMAT_WEEK_BASED_MESSAGE, visitor.secondaries, null);
      }
    }
  }

