  @Override
  public void visitNode(Tree tree) {
    ClassTree enumTree = (ClassTree) tree;
    for (Tree member : enumTree.members()) {
      if (member.is(Tree.Kind.VARIABLE)) {
        ModifiersTree modifiers = ((VariableTree) member).modifiers();
        ModifierKeywordTree publicModifier = ModifiersUtils.getModifier(modifiers, Modifier.PUBLIC);
        if (publicModifier != null && !ModifiersUtils.hasModifier(modifiers, Modifier.STATIC)
        // FIXME SONARJAVA-1604 final mutable field should raise issues
          && !ModifiersUtils.hasModifier(modifiers, Modifier.FINAL)) {
          reportIssue(publicModifier, "Lower the visibility of this field.");
        }
      } else if (member.is(Tree.Kind.METHOD)) {
        MethodTree methodTree = (MethodTree) member;
        ModifierKeywordTree publicModifier = ModifiersUtils.getModifier(methodTree.modifiers(), Modifier.PUBLIC);
        if (publicModifier != null && isSetter(methodTree)) {
          reportIssue(publicModifier, "Lower the visibility of this setter or remove it altogether.");
        }
      }
    }
  }

