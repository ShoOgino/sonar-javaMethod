  private void checkSuiteSignature(MethodTree methodTree, int jUnitVersion) {
    Symbol.MethodSymbol symbol = methodTree.symbol();
    if (jUnitVersion > 3) {
      if (symbol.returnType().type().isSubtypeOf(JUNIT_FRAMEWORK_TEST)) {
        // ignore modifiers and parameters, whatever they are, "suite():Test" should be dropped in a JUnit4/5 context
        reportIssue(methodTree, String.format("Remove this method, JUnit%d test suites are not relying on it anymore.", jUnitVersion));
      }
      return;
    }
    if (!symbol.isPublic()) {
      reportIssue(methodTree, "Make this method \"public\".");
    } else if (!symbol.isStatic()) {
      reportIssue(methodTree, "Make this method \"static\".");
    } else if (!methodTree.parameters().isEmpty()) {
      reportIssue(methodTree, "This method does not accept parameters.");
    } else if (!symbol.returnType().type().isSubtypeOf(JUNIT_FRAMEWORK_TEST)) {
      reportIssue(methodTree, "This method should return either a \"junit.framework.Test\" or a \"junit.framework.TestSuite\".");
    }
  }

