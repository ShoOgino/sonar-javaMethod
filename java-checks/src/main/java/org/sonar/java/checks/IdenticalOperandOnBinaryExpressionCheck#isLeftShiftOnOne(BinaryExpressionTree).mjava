  private boolean isLeftShiftOnOne(BinaryExpressionTree tree) {
    //1 << 1 is used for bit masks construction and should be excluded.
    if(tree.is(Tree.Kind.LEFT_SHIFT) && tree.leftOperand().is(Tree.Kind.INT_LITERAL) && tree.rightOperand().is(Tree.Kind.INT_LITERAL)) {
      String left = ((LiteralTree) tree.leftOperand()).value();
      String right = ((LiteralTree) tree.rightOperand()).value();
      if("1".equals(right) && "1".equals(left)){
        return true;
      }
    }
    return false;
  }

