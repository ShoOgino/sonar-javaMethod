  private void visitMethodInvocationTree(MethodInvocationTree mit) {
    ExpressionTree methodSelect = mit.methodSelect();
    if (isValueOfInvocation(mit)) {
      ExpressionTree arg0 = mit.arguments().get(0);
      checkForUnboxing(arg0);
      checkForUselessUnboxing(mit.symbolType(), methodSelect, arg0);
    } else if (isUnboxingMethodInvocation(mit)) {
      if (methodSelect.is(Tree.Kind.MEMBER_SELECT)) {
        checkForBoxing(((MemberSelectExpressionTree) methodSelect).expression());
      }
    } else {
      Symbol symbol = mit.symbol();
      if (symbol.isMethodSymbol()) {
        checkMethodInvocationArguments(mit, ((Symbol.MethodSymbol) symbol).parameterTypes());
      }
    }
  }

