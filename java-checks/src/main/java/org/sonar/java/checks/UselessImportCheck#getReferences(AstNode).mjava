  private static Collection<String> getReferences(AstNode node) {
    if (node.is(JavaKeyword.THROWS)) {
      ImmutableList.Builder<String> builder = ImmutableList.builder();

      for (AstNode qualifiedIdentifier : node.getNextSibling().getChildren(JavaTreeMaker.QUALIFIED_EXPRESSION_KINDS)) {
        builder.add(mergeIdentifiers(qualifiedIdentifier));
      }

      return builder.build();
    } else {
      AstNode actualNode = node;
      if (node.is(Kind.ANNOTATION)) {
        actualNode = (AstNode) ((AnnotationTree) node).annotationType();
      }

      return Collections.singleton(mergeIdentifiers(actualNode));
    }
  }

