  @Override
  protected List<MethodMatcher> getMethodInvocationMatchers() {
    return Arrays.asList(
        MethodMatcher.create().typeDefinition(STRING).name("contains")
          .addParameter(TypeCriteria.subtypeOf(CHAR_SEQUENCE)),
        MethodMatcher.create().typeDefinition(STRING).name("compareTo")
          .addParameter(TypeCriteria.is(STRING)),
        MethodMatcher.create().typeDefinition(STRING).name("compareToIgnoreCase")
          .addParameter(TypeCriteria.is(STRING)),
        MethodMatcher.create().typeDefinition(STRING).name("endsWith")
          .addParameter(TypeCriteria.is(STRING)),
        MethodMatcher.create().typeDefinition(STRING).name("indexOf")
          .addParameter(TypeCriteria.is(STRING)),
        MethodMatcher.create().typeDefinition(STRING).name("indexOf")
          .addParameter(TypeCriteria.is(STRING))
          .addParameter("int"),
        MethodMatcher.create().typeDefinition(STRING).name("lastIndexOf")
          .addParameter(TypeCriteria.is(STRING)),
        MethodMatcher.create().typeDefinition(STRING).name("lastIndexOf")
          .addParameter(TypeCriteria.is(STRING))
          .addParameter("int"),
        MethodMatcher.create().typeDefinition(STRING).name("matches")
          .addParameter(TypeCriteria.is(STRING)),
        MethodMatcher.create().typeDefinition(STRING).name("replaceFirst")
          .addParameter(TypeCriteria.is(STRING))
          .addParameter(TypeCriteria.is(STRING)),
        MethodMatcher.create().typeDefinition(STRING).name("split")
          .addParameter(TypeCriteria.is(STRING)),
        MethodMatcher.create().typeDefinition(STRING).name("split")
          .addParameter(TypeCriteria.is(STRING))
          .addParameter("int"),
        MethodMatcher.create().typeDefinition(STRING).name("startsWith")
          .addParameter(TypeCriteria.is(STRING)),
        MethodMatcher.create().typeDefinition(STRING).name("startsWith")
          .addParameter(TypeCriteria.is(STRING))
          .addParameter("int"),
        MethodMatcher.create().typeDefinition(STRING).name("substring")
          .addParameter("int"),
        MethodMatcher.create().typeDefinition(STRING).name("substring")
          .addParameter("int")
          .addParameter("int"));
  }

