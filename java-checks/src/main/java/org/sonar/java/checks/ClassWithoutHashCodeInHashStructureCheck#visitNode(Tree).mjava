  @Override
  public void visitNode(Tree tree) {
    if (!hasSemantic()) {
      return;
    }
    Type type = ((NewClassTree) tree).symbolType();
    if (JUtils.isParametrized(type) && useHashDataStructure(type)) {
      Symbol.TypeSymbol symbol = JUtils.typeArguments(type).get(0).symbol();
      if (implementsEquals(symbol) && !implementsHashCode(symbol)) {
        reportIssue(tree, "Add a \"hashCode()\" method to \"" + symbol.name() + "\" or remove it from this hash.");
      }
    }
  }

