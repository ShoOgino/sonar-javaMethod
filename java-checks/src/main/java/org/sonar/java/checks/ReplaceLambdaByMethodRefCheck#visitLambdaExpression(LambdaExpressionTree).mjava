  private void visitLambdaExpression(LambdaExpressionTree tree) {
    if (isMethodInvocation(tree.body(), tree) || isBodyBlockInvokingMethod(tree)) {
      reportIssue(tree.arrowToken(), "Replace this lambda with a method reference." + context.getJavaVersion().java8CompatibilityMessage());
    } else {
      getTypeCast(tree)
        .ifPresent(type -> reportIssue(tree.arrowToken(),
          "Replace this lambda with method reference '" + type + ".class::cast'." + context.getJavaVersion().java8CompatibilityMessage()));
      getNullCheck(tree)
        .ifPresent(nullMethod -> reportIssue(tree.arrowToken(),
          "Replace this lambda with method reference 'Objects::" + nullMethod + "'." + context.getJavaVersion().java8CompatibilityMessage()));
    }
  }

