  private void checkForIssue(Symbol symbol, IdentifierTree reportTree, Map<String, List<Symbol>> membersByName) {
    String name = symbol.name();
    for (Map.Entry<String, List<Symbol>> knownMemberName : membersByName.entrySet()) {
      if (name.equalsIgnoreCase(knownMemberName.getKey())) {
        knownMemberName.getValue().stream()
          .filter(knownMemberSymbol -> !symbol.equals(knownMemberSymbol) && isValidIssueLocation(symbol, knownMemberSymbol) && isInvalidMember(symbol, knownMemberSymbol))
          .findFirst()
          .ifPresent(conflictingSymbol ->
            reportIssue(reportTree,
              "Rename "
                + getSymbolKindName(symbol) + " \"" + name + "\" "
                + "to prevent any misunderstanding/clash with "
                + getSymbolKindName(conflictingSymbol) + " \"" + knownMemberName.getKey() + "\""
                + getDefinitionPlace(symbol, conflictingSymbol) + "."));
      }
    }
  }

