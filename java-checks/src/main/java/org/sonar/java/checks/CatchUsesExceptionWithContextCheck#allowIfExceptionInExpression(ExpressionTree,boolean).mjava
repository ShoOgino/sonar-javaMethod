  private void allowIfExceptionInExpression(ExpressionTree tree, boolean allowIdentifier) {
    if (tree.is(Kind.IDENTIFIER) && allowIdentifier) {
      removeInvalidCatches(((IdentifierTree) tree).name());
    } else if (tree.is(Kind.NEW_CLASS)) {
      NewClassTree newClassTree = (NewClassTree) tree;

      handleArguments(newClassTree.arguments());
    } else if (tree.is(Kind.METHOD_INVOCATION)) {
      MethodInvocationTree methodInvocationTree = (MethodInvocationTree) tree;

      allowIfExceptionInExpression(methodInvocationTree.methodSelect(), false);
      handleArguments(methodInvocationTree.arguments());
    } else if (tree.is(Kind.TYPE_CAST)) {
      allowIfExceptionInExpression(((TypeCastTree) tree).expression(), allowIdentifier);
    } else if (tree.is(Kind.MEMBER_SELECT)) {
      allowIfExceptionInExpression(((MemberSelectExpressionTree) tree).expression(), false);
    } else if (tree.is(Kind.PARENTHESIZED_EXPRESSION)) {
      allowIfExceptionInExpression(((ParenthesizedTree) tree).expression(), allowIdentifier);
    }
  }

