  @Override
  protected void onMethodInvocationFound(MethodInvocationTree mit) {
    List<ExpressionTree> expressionsToCheck = new ArrayList<>(2);
    if (mit.methodSelect().is(Tree.Kind.MEMBER_SELECT)) {
      expressionsToCheck.add(((MemberSelectExpressionTree) mit.methodSelect()).expression());
    }
    expressionsToCheck.add(mit.arguments().get(0));

    ClassGetNameDetector visitor = new ClassGetNameDetector();
    for (ExpressionTree expression : expressionsToCheck) {
      expression.accept(visitor);
    }
    if (visitor.useClassGetName && !visitor.useStackTraceElementGetClassName) {
      reportIssue(mit, "Use an \"instanceof\" comparison instead.");
    }
  }

