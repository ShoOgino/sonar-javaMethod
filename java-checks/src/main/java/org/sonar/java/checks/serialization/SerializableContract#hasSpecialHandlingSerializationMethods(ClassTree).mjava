  public static boolean hasSpecialHandlingSerializationMethods(ClassTree classTree) {
    boolean hasWriteObject = false;
    boolean hasReadObject = false;
    String classFullyQualifiedName = classTree.symbol().type().fullyQualifiedName();
    for (Tree member : classTree.members()) {

      MethodMatcher writeObjectMatcher = writeObjectMatcher(classFullyQualifiedName);
      MethodMatcher readObjectMatcher = readObjectMatcher(classFullyQualifiedName);

      if (member.is(Tree.Kind.METHOD)) {
        MethodTree methodTree = (MethodTree) member;
        if (ModifiersUtils.hasModifier(methodTree.modifiers(), Modifier.PRIVATE)) {
          hasWriteObject |= writeObjectMatcher.matches(methodTree) && methodThrows(methodTree, "java.io.IOException");
          hasReadObject |= readObjectMatcher.matches(methodTree) && methodThrows(methodTree, "java.io.IOException", "java.lang.ClassNotFoundException");
        }
      }
    }
    return hasReadObject && hasWriteObject;
  }

