  private void checkMethodTree(MethodTree methodTree, GetSetPredicate ownPredicate, GetSetPredicate pairPredicate) {
    if (isSynchronized(methodTree) && ownPredicate.apply(methodTree)) {
      // Synchronized getter, lookup the setter.
      Symbol.TypeSymbol owner = (Symbol.TypeSymbol) methodTree.symbol().owner();
      Collection<Symbol> pairedMethods = owner.lookupSymbols(pairPredicate.getStartName() + methodTree.symbol().name().substring(ownPredicate.getStartName().length()));
      pairedMethods.stream()
        .filter(Symbol::isMethodSymbol)
        .map(symbol -> (MethodTree) symbol.declaration())
        .filter(pairMethod -> pairPredicate.apply(pairMethod) && !isSynchronized(pairMethod))
        .forEach(pairMethod -> {
          String otherMethodName = methodTree.simpleName().name();
          reportIssue(pairMethod.simpleName(), String.format("Synchronize this method to match the synchronization on \"%s\".", otherMethodName),
            Collections.singletonList(new JavaFileScannerContext.Location(String.format("%s method.", otherMethodName), methodTree.simpleName())), null);
        });
    }
  }

