  private void checkMethodTree(MethodTree methodTree, GetSetPredicate ownPredicate, GetSetPredicate pairPredicate) {
    if (isSynchronized(methodTree) && ownPredicate.apply(methodTree)) {
      // Synchronized getter, lookup the setter.
      Symbol.TypeSymbol owner = (Symbol.TypeSymbol) methodTree.symbol().owner();
      Collection<Symbol> pairedMethods = owner.lookupSymbols(pairPredicate.getStartName() + methodTree.symbol().name().substring(ownPredicate.getStartName().length()));
      for (Symbol symbol : pairedMethods) {
        if (symbol.isMethodSymbol()) {
          MethodTree pairMethod = (MethodTree) symbol.declaration();
          if (pairPredicate.apply(pairMethod) && !isSynchronized(pairMethod)) {
            reportIssue(pairMethod.simpleName(), "Synchronize this method to match the synchronization on \"" + methodTree.simpleName().name() + "\".",
              Lists.newArrayList(new JavaFileScannerContext.Location("", methodTree.simpleName())), null);
          }
        }
      }
    }
  }

