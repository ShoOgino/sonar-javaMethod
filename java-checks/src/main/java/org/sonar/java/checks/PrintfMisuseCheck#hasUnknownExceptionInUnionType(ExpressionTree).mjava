  /**
   * Limitation of ECJ, which will approximate type of a variable to 'Object' if some types
   * are unknown in its defining union type, for instance: in the following catch tree:
   *
   * catch (UnknownException | IllegalArgumentException e) { ... }
   *
   * leads to have 'e' being of type 'Object'
   */
  private static boolean hasUnknownExceptionInUnionType(ExpressionTree lastArgument) {
    if (!lastArgument.is(Tree.Kind.IDENTIFIER)) {
      return false;
    }
    Symbol symbol = ((IdentifierTree) lastArgument).symbol();
    VariableTree declaration = symbol.isVariableSymbol() ? ((Symbol.VariableSymbol) symbol).declaration() : null;
    if (declaration == null) {
      return false;
    }
    TypeTree declarationType = declaration.type();
    return declarationType.is(Tree.Kind.UNION_TYPE)
      && ((UnionTypeTree) declarationType)
        .typeAlternatives()
        .stream()
        .map(TypeTree::symbolType)
        .anyMatch(Type::isUnknown);
  }

