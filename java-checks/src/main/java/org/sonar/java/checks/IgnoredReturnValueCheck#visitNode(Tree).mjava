  @Override
  public void visitNode(Tree tree) {
    ExpressionStatementTree est = (ExpressionStatementTree) tree;
    if (est.expression().is(Tree.Kind.METHOD_INVOCATION)) {
      MethodInvocationTree mit = (MethodInvocationTree) est.expression();
      if (!isVoidOrUnknown(mit.symbolType()) && isCheckedType(mit.symbol().owner().type())
        && mit.symbol().isPublic() && !((JavaSymbol.MethodJavaSymbol) mit.symbol()).isConstructor()) {
        IdentifierTree methodName = MethodsHelper.methodName(mit);
        reportIssue(methodName, "The return value of \"" + methodName.name() + "\" must be used.");
      }
    }
  }

