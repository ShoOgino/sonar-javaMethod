  @Override
  public void visitMethodInvocation(MethodInvocationTree tree) {
    Symbol symbol = ((MethodInvocationTreeImpl) tree).getSymbol();
    if (symbol.isMethodSymbol()) {
      MethodSymbol methodSymbol = (MethodSymbol) symbol;
      List<Symbol> parameters = methodSymbol.getParameters().scopeSymbols();
      // FIXME(merciesa): in some cases (method overloading with parameterized methods) a method symbol without parameter can be called with
      // arguments.
      if (parameters.size() != 0) {
        for (int i = 0; i < tree.arguments().size(); i += 1) {
          // in case of varargs, there could be more arguments than parameters. in that case, pick the last parameter.
          if (isNonnullParameter(parameters.get(i < parameters.size() ? i : parameters.size() - 1))) {
            this.checkForIssue(tree.arguments().get(i));
          }
        }
      }
    }
    super.visitMethodInvocation(tree);
  }

