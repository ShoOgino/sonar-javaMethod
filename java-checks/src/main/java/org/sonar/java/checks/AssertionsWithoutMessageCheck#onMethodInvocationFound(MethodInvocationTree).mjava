  @Override
  protected void onMethodInvocationFound(MethodInvocationTree mit) {
    Symbol symbol = mit.symbol();
    if (symbol.owner().type().isSubtypeOf(GENERIC_ASSERT) && !FEST_AS_METHOD.matches(mit)) {
      if (isConstructor(symbol)) {
        return;
      }
      FestVisitor visitor = new FestVisitor();
      mit.methodSelect().accept(visitor);
      if (!visitor.useDescription) {
        reportIssue(mit, "Add a message to this assertion.");
      }
    } else if (mit.arguments().isEmpty() || !isString(mit.arguments().get(0)) || isAssertingOnStringWithNoMessage(mit)) {
      reportIssue(mit, "Add a message to this assertion.");
    }
  }

