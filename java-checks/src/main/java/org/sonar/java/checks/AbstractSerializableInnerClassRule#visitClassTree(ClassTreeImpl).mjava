  private void visitClassTree(ClassTreeImpl classTree) {
    TypeSymbol symbol = classTree.getSymbol();
    if (isInnerClass(symbol) && directlyImplementsSerializable(symbol)) {
      Symbol owner = symbol.owner();
      if (owner.isTypeSymbol()) {
        TypeSymbol ownerType = (TypeSymbol) owner;
        if (isMatchingOuterClass(ownerType.getType()) && !symbol.isStatic()) {
          addIssue(classTree, "Make this inner class static");
        }
      } else if (owner.isMethodSymbol()) {
        TypeSymbol methodOwner = (TypeSymbol) owner.owner();
        if (isMatchingOuterClass(methodOwner.getType()) && !owner.isStatic()) {
          String methodName = owner.getName();
          addIssue(classTree, "Make \"" + methodName + "\" static");
        }
      }
    }
  }

