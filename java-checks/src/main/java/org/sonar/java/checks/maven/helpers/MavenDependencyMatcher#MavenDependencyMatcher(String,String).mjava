  /**
   * Create a {@link MavenDependencyMatcher} for the given name pattern and optional version
   *
   * @param dependencyName the dependency pattern. Expected format: "<code>[groupId]:[artifactId]</code>",
   *  with following options for both [groupId] and [artifactId]:
   *   <ul>
   *     <li>Wildcard (i.e. "<code>*:myArtifactId</code>" or "<code>myGroupId:*</code>")</li>
   *     <li>Regular expression (i.e. "<code>org.sonar.*:*java</code>")</li>
   *   </ul>
   *
   * @param version the version. Expected formats:
   *   <ul>
   *     <li>Empty string (i.e. "")</li>
   *     <li>Wildcard (i.e. "*")</li>
   *     <li>Regular expression (i.e. "<code>1.3.*</code>")</li>
   *     <li>Dash-delimited range (without version qualifier). Examples: </li>
   *       <ul>
   *         <li>"<code>1.0-3.1</code>" : any version between 1.0 and 3.1</li>
   *         <li>"<code>1.0-*</code>" : any version after version 1.0</li>
   *         <li>"<code>*-3.1</code>" : any version before version 3.1</li>
   *      </ul>
   *   </ul>
   * @return the corresponding matcher
   */
  public MavenDependencyMatcher(String dependencyName, String version) {
    String[] name = dependencyName.split(":");
    if (name.length != 2) {
      throw new IllegalArgumentException(
        "Invalid dependency name. Should match '[groupId]:[artifactId]' use '*' as wildcard");
    }

    groupIdMatcher = getMatcherForPattern(name[0].trim());
    artifactIdMatcher = getMatcherForPattern(name[1].trim());
    versionMatcher = getMatcherForVersion(version);
  }

