  @Override
  public void visitNode(Tree tree) {
    if (tree.is(Tree.Kind.METHOD_INVOCATION)) {
      MethodInvocationTree mit = (MethodInvocationTree) tree;
      for (ExpressionTree arg : mit.arguments()) {
        if (arg.is(Tree.Kind.TYPE_CAST)) {
          excluded.add(arg);
        }
      }
    } else if (!excluded.contains(tree)) {
      TypeCastTree typeCastTree = (TypeCastTree) tree;
      Type cast = ((AbstractTypedTree) typeCastTree.type()).getSymbolType();
      Type expressionType = ((AbstractTypedTree) typeCastTree.expression()).getSymbolType();
      if (typeInherits(expressionType, cast)) {
        addIssue(tree, "Remove this unnecessary cast to \"" + cast + "\".");
      }
    }
  }

