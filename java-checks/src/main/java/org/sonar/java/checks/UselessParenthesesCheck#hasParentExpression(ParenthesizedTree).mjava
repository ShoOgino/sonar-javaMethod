  private boolean hasParentExpression(ParenthesizedTree tree) {
    Tree parentTree = this.parent.peek();
    if(parentTree.is(Kind.CONDITIONAL_EXPRESSION)) {
      return tree.expression().is(Kind.METHOD_INVOCATION, Kind.IDENTIFIER, Kind.MEMBER_SELECT) || tree.expression() instanceof LiteralTree;
    }
    //Exclude expression of array access expression
    if(parentTree.is(Kind.ARRAY_ACCESS_EXPRESSION) && tree.equals(((ArrayAccessExpressionTree) parentTree).expression()) ) {
      return false;
    }
    return parentTree.is(PARENT_EXPRESSION);
  }

