  /**
   * If a cached value exists in the cache return it. Otherwise return null and
   * put in the cache defaultAnswer while we are in the process of calculating it
   * @param statePair to look for and return the cached value
   * @param defaultAnswer to put in the cache while we are in the process of calculating the value
   * @return cached value if exists or null if it need to be computed
   */
  @CheckForNull
  T startCalculation(OrderedStatePair statePair, T defaultAnswer) {
    T cachedResult = get(statePair);
    if (cachedResult != null) {
      return cachedResult;
    } else if (size() >= MAX_CACHE_SIZE) {
      return defaultAnswer;
    }
    // cache contains 'defaultAnswer' because we're currently in the process of calculating it
    put(statePair, defaultAnswer);
    return null;
  }

