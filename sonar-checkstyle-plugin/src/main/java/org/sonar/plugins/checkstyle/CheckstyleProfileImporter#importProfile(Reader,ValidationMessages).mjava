  @Override
  public RulesProfile importProfile(Reader reader, ValidationMessages messages) {
    SMInputFactory inputFactory = initStax();
    RulesProfile profile = RulesProfile.create();
    try {
      Module checkerModule = loadModule(inputFactory.rootElementCursor(reader).advance());

      for (Module rootModule : checkerModule.modules) {
        Map<String, String> rootModuleProperties = Maps.newHashMap(checkerModule.properties);
        rootModuleProperties.putAll(rootModule.properties);

        if (StringUtils.equals(TREEWALKER_MODULE, rootModule.name)) {
          for (Module treewalkerModule : rootModule.modules) {
            Map<String, String> treewalkerModuleProperties = Maps.newHashMap(rootModuleProperties);
            treewalkerModuleProperties.putAll(treewalkerModule.properties);

            processModule(profile, CHECKER_MODULE + "/" + TREEWALKER_MODULE + "/", treewalkerModule.name, treewalkerModuleProperties, messages);
          }
        } else {
          processModule(profile, CHECKER_MODULE + "/", rootModule.name, rootModuleProperties, messages);
        }
      }

    } catch (XMLStreamException e) {
      messages.addErrorText("XML is not valid: " + e.getMessage());
    }
    return profile;
  }

