  /**
   * 14.20. The try statement
   */
  private TryStatementTree tryStatement(AstNode astNode) {
    if (astNode.hasDirectChildren(JavaGrammar.TRY_WITH_RESOURCES_STATEMENT)) {
      astNode = astNode.getFirstChild(JavaGrammar.TRY_WITH_RESOURCES_STATEMENT);
    }
    ImmutableList.Builder<CatchTree> catches = ImmutableList.builder();
    for (AstNode catchNode : astNode.getChildren(JavaGrammar.CATCH_CLAUSE)) {
      AstNode catchFormalParameterNode = catchNode.getFirstChild(JavaGrammar.CATCH_FORMAL_PARAMETER);
      // TODO modifiers
      // TODO multi-catch
      // TODO WTF why VARIABLE_DECLARATOR_ID in grammar?
      catches.add(new JavaTree.CatchTreeImpl(
        catchNode,
        new JavaTree.VariableTreeImpl(
          catchFormalParameterNode,
          JavaTree.ModifiersTreeImpl.EMPTY,
          qualifiedIdentifier(catchFormalParameterNode.getFirstChild(JavaGrammar.CATCH_TYPE).getFirstChild(JavaGrammar.QUALIFIED_IDENTIFIER)),
          catchFormalParameterNode.getFirstChild(JavaGrammar.VARIABLE_DECLARATOR_ID).getFirstChild(JavaTokenType.IDENTIFIER).getTokenValue(),
          null
        ),
        block(catchNode.getFirstChild(JavaGrammar.BLOCK))
      ));
    }
    BlockTree finallyBlock = null;
    if (astNode.hasDirectChildren(JavaGrammar.FINALLY_)) {
      finallyBlock = block(astNode.getFirstChild(JavaGrammar.FINALLY_).getFirstChild(JavaGrammar.BLOCK));
    }
    return new JavaTree.TryStatementTreeImpl(
      astNode,
      ImmutableList.<VariableTree>of(), // FIXME TRY_WITH_RESOURCES_STATEMENT
      block(astNode.getFirstChild(JavaGrammar.BLOCK)),
      catches.build(),
      finallyBlock
    );
  }

