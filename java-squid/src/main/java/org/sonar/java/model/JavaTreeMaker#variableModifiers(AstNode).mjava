  private ModifiersTreeImpl variableModifiers(@Nullable AstNode astNode) {
    if (astNode == null) {
      return ModifiersTreeImpl.EMPTY;
    }

    Preconditions.checkArgument(astNode.is(JavaGrammar.VARIABLE_MODIFIERS), "Unexpected AstNodeType: %s", astNode.getType().toString());

    ImmutableList.Builder<Modifier> modifiers = ImmutableList.builder();
    ImmutableList.Builder<AnnotationTree> annotations = ImmutableList.builder();
    for (AstNode modifierAstNode : astNode.getChildren()) {
      if (modifierAstNode.is(Kind.ANNOTATION)) {
        annotations.add((AnnotationTree) modifierAstNode);
      } else {
        JavaKeyword keyword = (JavaKeyword) modifierAstNode.getType();
        modifiers.add(kindMaps.getModifier(keyword));
      }
    }
    return new ModifiersTreeImpl(astNode, modifiers.build(), annotations.build());
  }

