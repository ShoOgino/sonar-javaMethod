  private ExpressionTree elementValue(AstNode astNode) {
    AstNode elementValue = astNode.getFirstChild();
    ExpressionTree result;
    if (elementValue.is(JavaGrammar.ANNOTATION)) {
      result = annotation(elementValue);
    } else if (elementValue.is(JavaGrammar.ELEMENT_VALUE_ARRAY_INITIALIZER)) {
      List<ExpressionTree> elementValues = Lists.newArrayList();
      if (elementValue.hasDirectChildren(JavaGrammar.ELEMENT_VALUES)) {
        AstNode elementValuesNode = elementValue.getFirstChild(JavaGrammar.ELEMENT_VALUES);
        for (AstNode node : elementValuesNode.getChildren(JavaGrammar.ELEMENT_VALUE)) {
          elementValues.add(elementValue(node));
        }
      }
      result = new JavaTree.NewArrayTreeImpl(elementValue, null, ImmutableList.<ExpressionTree>of(), elementValues);
    } else {
      result = expression(elementValue);
    }
    return result;
  }

