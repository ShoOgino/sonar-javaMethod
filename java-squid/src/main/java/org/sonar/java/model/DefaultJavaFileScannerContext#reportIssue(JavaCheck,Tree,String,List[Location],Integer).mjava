  @Override
  public void reportIssue(JavaCheck javaCheck, Tree syntaxNode, String message, List<Location> secondary, @Nullable Integer cost) {
    if (ENABLE_NEW_APIS) {
      InputFile inputFile = sonarComponents.inputFromIOFile(file);
      RuleKey ruleKey = getRuleKey(javaCheck);
      if (ruleKey != null) {
        CompIssue compIssue = CompIssue.create(inputFile, sonarComponents.issuableFor(file), ruleKey, cost != null ? (double) cost : null);
        AnalyzerMessage.TextSpan textSpan = textSpanFor(syntaxNode);
        if (textSpan == null) {
          compIssue.setPrimaryLocation(message, null);
        } else {
          compIssue.setPrimaryLocation(message, textSpan.startLine, textSpan.startCharacter, textSpan.endLine, textSpan.endCharacter);
        }
        for (Location location : secondary) {
          AnalyzerMessage.TextSpan secondarySpan = textSpanFor(location.syntaxNode);
          compIssue.addSecondaryLocation(secondarySpan.startLine, secondarySpan.startCharacter, secondarySpan.endLine, secondarySpan.endCharacter, location.msg);
        }
        compIssue.save();
      }
    } else {
      addIssue(syntaxNode, javaCheck, message, cost != null ? (double) cost : null);
    }
  }

