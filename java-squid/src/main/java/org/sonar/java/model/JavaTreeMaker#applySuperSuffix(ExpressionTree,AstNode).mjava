  private ExpressionTree applySuperSuffix(ExpressionTree expression, AstNode superSuffixNode) {
    checkType(superSuffixNode, JavaGrammar.SUPER_SUFFIX);
    if (superSuffixNode.hasDirectChildren(JavaGrammar.ARGUMENTS)) {
      // super(arguments)
      // super.method(arguments)
      // super.<T>method(arguments)
      // TODO typeArguments
      ExpressionTree methodSelect = expression;
      if (superSuffixNode.hasDirectChildren(JavaTokenType.IDENTIFIER)) {
        methodSelect = new MemberSelectExpressionTreeImpl(
            superSuffixNode,
            expression,
            identifier(superSuffixNode.getFirstChild(JavaTokenType.IDENTIFIER))
        );
      }
      return new MethodInvocationTreeImpl(
          superSuffixNode,
          methodSelect,
          arguments(superSuffixNode.getFirstChild(JavaGrammar.ARGUMENTS)));
    } else {
      // super.field
      return new MemberSelectExpressionTreeImpl(
          superSuffixNode,
          expression,
          identifier(superSuffixNode.getFirstChild(JavaTokenType.IDENTIFIER)));
    }
  }

