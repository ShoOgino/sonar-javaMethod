  private ExpressionTree applySuperSuffix(ExpressionTree expression, AstNode superSuffixNode) {
    Preconditions.checkArgument(superSuffixNode.is(JavaGrammar.SUPER_SUFFIX), "Unexpected AstNodeType: %s", superSuffixNode.getType().toString());
    if (superSuffixNode.hasDirectChildren(JavaGrammar.ARGUMENTS)) {
      // super(arguments)
      // super.method(arguments)
      // super.<T>method(arguments)
      // TODO typeArguments
      ExpressionTree methodSelect = expression;
      if (superSuffixNode.hasDirectChildren(JavaTokenType.IDENTIFIER)) {
        methodSelect = new JavaTree.MemberSelectExpressionTreeImpl(
          superSuffixNode,
          expression,
          identifier(superSuffixNode.getFirstChild(JavaTokenType.IDENTIFIER))
        );
      }
      return new JavaTree.MethodInvocationTreeImpl(
        superSuffixNode,
        methodSelect,
        arguments(superSuffixNode.getFirstChild(JavaGrammar.ARGUMENTS))
      );
    } else {
      // super.field
      return new JavaTree.MemberSelectExpressionTreeImpl(
        superSuffixNode,
        expression,
        identifier(superSuffixNode.getFirstChild(JavaTokenType.IDENTIFIER))
      );
    }
  }

