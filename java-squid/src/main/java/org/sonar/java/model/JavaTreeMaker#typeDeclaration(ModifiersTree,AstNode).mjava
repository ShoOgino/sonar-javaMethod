  public ClassTree typeDeclaration(ModifiersTree modifiers, AstNode astNode) {
    if (astNode.is(JavaGrammar.CLASS_DECLARATION)) {
      return classDeclaration(modifiers, astNode);
    } else if (astNode.is(JavaGrammar.ENUM_DECLARATION)) {
      return enumDeclaration(modifiers, astNode);
    } else if (astNode.is(JavaGrammar.INTERFACE_DECLARATION)) {
      return interfaceDeclaration(modifiers, astNode);
    } else if (astNode.is(Kind.ANNOTATION_TYPE)) {
      // TODO Modifiers
      ClassTreeImpl tree = (ClassTreeImpl) astNode;
      tree.setModifiers(modifiers);
      return tree;
    } else {
      throw new IllegalArgumentException("Unexpected AstNodeType: " + astNode.getType().toString()
        + "\n" + AstXmlPrinter.print(astNode));
    }
  }

