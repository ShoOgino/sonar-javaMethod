  private void invoke(Map<Class, Map<Class, Method>> cache, boolean leave, Class<?> treeClass, Object tree) {
    Map<Class, Method> methods = cache.get(treeClass);
    if (methods == null) {
      methods = lookup(leave, treeClass);
      cache.put(treeClass, methods);
    }
    for (Object visitor : leave ? Lists.reverse(visitors) : visitors) {
      Method method = methods.get(visitor.getClass());
      if (method != null) {
        try {
          method.invoke(visitor, tree);
        } catch (IllegalAccessException e) {
          throw Throwables.propagate(e);
        } catch (InvocationTargetException e) {
          throw Throwables.propagate(e);
        }
      }
    }
  }

