  private InternalSyntaxToken visitTerminal(ParseNode node) {
    boolean isEof = false;
    if (node.getMatcher() instanceof TriviaExpression) {
      TriviaExpression ruleMatcher = (TriviaExpression) node.getMatcher();
      if (ruleMatcher.getTriviaKind() == TriviaKind.SKIPPED_TEXT) {
        return null;
      } else if (ruleMatcher.getTriviaKind() == TriviaKind.COMMENT) {
        updateTokenPositionAndValue(node);
        tokenBuilder.setTrivia(Collections.<Trivia>emptyList());
        tokenBuilder.setType(GenericTokenType.COMMENT);
        trivias.add(Trivia.createComment(tokenBuilder.build()));
        return null;
      } else {
        throw new IllegalStateException("Unexpected trivia kind: " + ruleMatcher.getTriviaKind());
      }
    } else if (node.getMatcher() instanceof TokenExpression) {
      updateTokenPositionAndValue(node);
      TokenExpression ruleMatcher = (TokenExpression) node.getMatcher();
      tokenBuilder.setType(ruleMatcher.getTokenType());
      isEof = GenericTokenType.EOF == ruleMatcher.getTokenType();
      if (GenericTokenType.COMMENT == ruleMatcher.getTokenType()) {
        tokenBuilder.setTrivia(Collections.<Trivia>emptyList());
        trivias.add(Trivia.createComment(tokenBuilder.build()));
        return null;
      }
    }
    LineColumnValue lineColumnValue = tokenPosition(node);
    InternalSyntaxToken internalSyntaxToken = new InternalSyntaxToken(lineColumnValue.line, lineColumnValue.column, lineColumnValue.value,
        createTrivias(trivias), node.getStartIndex(), node.getEndIndex(), isEof);
    trivias.clear();
    return internalSyntaxToken;
  }

