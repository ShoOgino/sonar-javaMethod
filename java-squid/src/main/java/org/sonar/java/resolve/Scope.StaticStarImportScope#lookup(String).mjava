    @Override
    public List<Symbol> lookup(String name) {
      List<Symbol> symbolsList = Lists.newArrayList();
      for (Symbol site : symbols.values()) {
        //site is a package, try to load referenced type.
        if ((site.kind & Symbol.PCK) != 0) {
          Symbol symbol = bytecodeCompleter.loadClass(bytecodeCompleter.formFullName(name, site));
          if (symbol.kind < Symbol.ERRONEOUS) {
            symbolsList.add(symbol);
          }
        }

        //site is a type, try to find a matching type or field
        if ((site.kind & Symbol.TYP) != 0) {
          List<Symbol> resolved = ((Symbol.TypeSymbol) site).members().lookup(name);
          for (Symbol symbol : resolved) {
            //TODO check accessibility
            //TODO factorize with static named import ?
            if (symbol.kind < Symbol.ERRONEOUS && (symbol.flags & Flags.STATIC) != 0) {
              symbolsList.add(symbol);
            }
          }
        }

      }
      return symbolsList;
    }

