    private Boolean isOverriding(Symbol.MethodSymbol overridee, Type.ClassType classType) {
      //same number and type of formal parameters
      if (getParametersTypes().size() != overridee.getParametersTypes().size()) {
        return false;
      }
      for (int i = 0; i < getParametersTypes().size(); i++) {
        Type paramOverrider = getParametersTypes().get(i);
        if (paramOverrider.isTagged(Type.UNKNOWN)) {
          //FIXME : complete symbol table should not have unknown types and generics should be handled properly for this.
          return null;
        }
        //Generics type should have same erasure see JLS8 8.4.2

        Type overrideeType = overridee.getParametersTypes().get(i);
        if(classType instanceof Type.InstantiatedParametrizedType) {
          overrideeType = ((Type.InstantiatedParametrizedType) classType).typeSubstitution.get(overrideeType);
          if(overrideeType == null) {
            overrideeType = overridee.getParametersTypes().get(i);
          }
        }
        if (!paramOverrider.erasure().equals(overrideeType.erasure())) {
          return false;
        }
      }
      //we assume code is compiling so no need to check return type at this point.
      return true;
    }

