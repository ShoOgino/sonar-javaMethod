  /**
   * Finds method matching given name and types of arguments.
   */
  public Resolution findMethod(Env env, String name, List<JavaType> argTypes, List<JavaType> typeParamTypes) {
    Resolution bestSoFar = unresolved();
    Env env1 = env;
    while (env1.outer() != null) {
      Resolution res = findMethod(env1, env1.enclosingClass().getType(), name, argTypes, typeParamTypes);
      if (res.symbol.kind < JavaSymbol.ERRONEOUS) {
        // symbol exists
        return res;
      } else if (res.symbol.kind < bestSoFar.symbol.kind) {
        bestSoFar = res;
      }
      env1 = env1.outer;
    }
    JavaSymbol sym = findInStaticImport(env, name, JavaSymbol.MTH);
    if (sym.kind < JavaSymbol.ERRONEOUS) {
      // symbol exists
      return Resolution.resolution(sym);
    } else if (sym.kind < bestSoFar.symbol.kind) {
      bestSoFar = Resolution.resolution(sym);
    }
    return bestSoFar;
  }

