    @Override
    public void visitTypeVariable(String name) {
      List<Symbol> lookup = Lists.newArrayList();
      Symbol currentSymbol = classSymbol;
      if(methodSymbol != null) {
        currentSymbol = methodSymbol;
      }
      while ((currentSymbol.isKind(Symbol.TYP) || currentSymbol.isKind(Symbol.MTH)) && lookup.isEmpty()) {
        if(currentSymbol.isKind(Symbol.MTH)) {
          lookup = ((Symbol.MethodSymbol)currentSymbol).typeParameters().lookup(name);
        } else if (currentSymbol.isKind(Symbol.TYP)) {
          lookup = ((Symbol.TypeSymbol)currentSymbol).typeParameters().lookup(name);
        }
        currentSymbol = currentSymbol.owner();
      }

      Preconditions.checkState(!lookup.isEmpty(), "Could not resolve type parameter: "+name+" in class "+classSymbol.getName());
      Preconditions.checkState(lookup.size() == 1, "More than one type parameter with the same name");
      typeRead = lookup.get(0).type;
      visitEnd();
    }

