  @Override
  public void visitMethodInvocation(MethodInvocationTree tree) {
    Tree methodSelect = tree.methodSelect();
    Resolve.Env methodEnv = semanticModel.getEnv(tree);
    scan(tree.arguments());
    List<Type> argTypes = getParameterTypes(tree);
    Symbol symbol = resolveMethodSymbol(methodSelect, methodEnv, argTypes);
    ((MethodInvocationTreeImpl) tree).setSymbol(symbol);
    Type methodType = getTypeOfSymbol(symbol);
    //Register return type for method invocation.
    if (methodType == null || symbol.kind >= Symbol.ERRONEOUS) {
      registerType(tree, symbols.unknownType);
    } else {
      registerType(tree, ((Type.MethodType) methodType).resultType);
    }
  }

