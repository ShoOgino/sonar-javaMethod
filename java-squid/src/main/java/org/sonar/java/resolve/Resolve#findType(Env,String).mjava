  /**
   * Finds type with given name.
   */
  private Symbol findType(Env env, String name) {
    Symbol bestSoFar = symbolNotFound;

    for (Env env1 = env; env1.outer() != null; env1 = env1.outer()) {
      for (Symbol symbol : env1.scope().lookup(name)) {
        if (symbol.kind == Symbol.TYP) {
          return symbol;
        }
      }
      Symbol symbol = findMemberType(env1, env1.enclosingClass(), name, env1.enclosingClass());
      if (symbol.kind < Symbol.ERRONEOUS) { // symbol exists
        return symbol;
      } else if (symbol.kind < bestSoFar.kind) {
        bestSoFar = symbol;
      }
    }

    // TODO imports
    for (Symbol symbol : env.packge().members.lookup(name)) {
      if (symbol.kind < bestSoFar.kind) {
        bestSoFar = symbol;
      }
    }

    return bestSoFar;
  }

