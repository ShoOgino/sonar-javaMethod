    @Nullable
    private Boolean overridesFromSymbol(JavaType.ClassJavaType classType) {
      Boolean result = false;
      if (classType.isTagged(JavaType.UNKNOWN)) {
        return null;
      }
      List<JavaSymbol> symbols = classType.getSymbol().members().lookup(name);
      for (JavaSymbol overrideSymbol : symbols) {
        if (overrideSymbol.isKind(JavaSymbol.MTH) && canOverride((MethodJavaSymbol) overrideSymbol)) {
          Boolean isOverriding = isOverriding((MethodJavaSymbol) overrideSymbol, classType);
          if (isOverriding == null) {
            result = null;
          } else if (BooleanUtils.isTrue(isOverriding)) {
            return true;
          }
        }
      }
      return result;
    }

