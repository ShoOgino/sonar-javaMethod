  //FIXME also support method symbol and field symbols
  private void completeMetadata(Symbol.TypeSymbol symbol, List<AnnotationTree> annotations) {
    for (AnnotationTree tree : annotations) {
      AnnotationInstance annotationInstance = new AnnotationInstance(symbol);
      symbol.metadata().addAnnotation(annotationInstance);
      if (tree.arguments().size() > 1 || (!tree.arguments().isEmpty() && tree.arguments().get(0).is(Tree.Kind.ASSIGNMENT))) {
        for (ExpressionTree expressionTree : tree.arguments()) {
          AssignmentExpressionTree aet = (AssignmentExpressionTree) expressionTree;
          //TODO: Store more precise value than the expression (real value in case of literal, symbol for enums, array of values, solve constants?)
          annotationInstance.addValue(new AnnotationValue(((IdentifierTree) aet.variable()).name(), aet.expression()));
        }
      } else {
        //Constant
        for (ExpressionTree expressionTree : tree.arguments()) {
          Collection<Symbol> scopeSymbols = ((AbstractTypedTree) tree.annotationType()).getSymbolType().getSymbol().members().scopeSymbols();
          String name = "";
          for (Symbol scopeSymbol : scopeSymbols) {
            if(scopeSymbol.isKind(Symbol.MTH)) {
              name = symbol.getName();
              break;
            }
          }
          annotationInstance.addValue(new AnnotationValue(name, expressionTree));
        }
      }
    }
  }

