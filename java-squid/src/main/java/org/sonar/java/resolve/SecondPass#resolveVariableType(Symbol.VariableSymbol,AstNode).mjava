  private void resolveVariableType(Symbol.VariableSymbol symbol, AstNode typeNode) {
    if (typeNode.is(JavaGrammar.TYPE)) {
      typeNode = typeNode.getFirstChild(JavaGrammar.CLASS_TYPE);
      if (typeNode == null) {
        // TODO
        return;
      }
    } else if (typeNode.is(JavaGrammar.CLASS_TYPE)) {
      // nop
    } else if (typeNode.is(JavaGrammar.CATCH_TYPE)) {
      // TODO
      return;
    } else {
       throw new IllegalArgumentException();
    }

    Resolve.Env env = semanticModel.getEnv(symbol);
    symbol.type = castToTypeIfPossible(resolveType(env, typeNode));
  }

