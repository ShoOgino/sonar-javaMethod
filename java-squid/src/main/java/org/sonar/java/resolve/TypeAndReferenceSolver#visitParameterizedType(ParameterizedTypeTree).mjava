  @Override
  public void visitParameterizedType(ParameterizedTypeTree tree) {
    resolveAs(tree.type(), Symbol.TYP);
    resolveAs(tree.typeArguments(), Symbol.TYP);

    Type type = getType(tree.type());
    //Type substitution for parametrized type.
    Map<Type.TypeVariableType, Type> typeSubstitution = Maps.newHashMap();
    if(tree.typeArguments().size() <= type.getSymbol().typeVariableTypes.size()) {
      //FIXME: read type parameters from bytecode.
      for (int i = 0; i < tree.typeArguments().size(); i++) {
        typeSubstitution.put(type.getSymbol().typeVariableTypes.get(i), getType(tree.typeArguments().get(i)));
      }
    }
    registerType(tree, Type.ParametrizedTypeType.getParametrizedTypeType(type.getSymbol(), typeSubstitution));
  }

