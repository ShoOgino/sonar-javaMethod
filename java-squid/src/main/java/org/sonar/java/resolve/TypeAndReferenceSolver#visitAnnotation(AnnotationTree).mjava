  @Override
  public void visitAnnotation(AnnotationTree tree) {
    resolveAs(tree.annotationType(), Symbol.TYP);
    if(tree.arguments().size()>1 || (!tree.arguments().isEmpty() && tree.arguments().get(0).is(Tree.Kind.ASSIGNMENT))) {
      //resolve by identifying correct identifier in assignment.
      for (ExpressionTree expressionTree : tree.arguments()) {
        AssignmentExpressionTree aet = (AssignmentExpressionTree) expressionTree;
        IdentifierTree variable = (IdentifierTree) aet.variable();
        Symbol identInType = resolve.findMethod(semanticModel.getEnv(tree), getType(tree.annotationType()).symbol, variable.name(), ImmutableList.<Type>of());
        associateReference(variable, identInType);
        registerType(variable, identInType.type);
        resolveAs(aet.expression(), Symbol.VAR);
      }
    } else {
      for (ExpressionTree expressionTree : tree.arguments()) {
        resolveAs(expressionTree, Symbol.VAR);
      }
    }
    registerType(tree, getType(tree.annotationType()));
  }

