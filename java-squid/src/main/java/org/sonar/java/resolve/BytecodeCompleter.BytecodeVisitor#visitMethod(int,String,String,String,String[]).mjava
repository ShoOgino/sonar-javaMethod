    @Override
    public MethodVisitor visitMethod(int flags, String name, String desc, @Nullable String signature, @Nullable String[] exceptions) {
      Preconditions.checkNotNull(name);
      Preconditions.checkNotNull(desc);
      if (!isSynthetic(flags)) {
        Preconditions.checkState((flags & Opcodes.ACC_BRIDGE) == 0, "bridge method not marked as synthetic in class " + className);
        // TODO(Godin): according to JVMS 4.7.24 - parameter can be marked as synthetic
        Type.MethodType type = new Type.MethodType(
            convertAsmTypes(org.objectweb.asm.Type.getArgumentTypes(desc)),
            convertAsmType(org.objectweb.asm.Type.getReturnType(desc)),
            getCompletedClassSymbolsType(exceptions),
            classSymbol
        );
        final Symbol.MethodSymbol methodSymbol = new Symbol.MethodSymbol(filterBytecodeFlags(flags), name, type, classSymbol);
        classSymbol.members.enter(methodSymbol);
        if(signature != null) {
          new SignatureReader(signature).accept(new SignatureVisitor(Opcodes.ASM5) {

            @Override
            public void visitFormalTypeParameter(String name) {
              //TODO improve generics
              methodSymbol.isParametrized = true;
            }
          });
        }
      }
      // (Godin): can return MethodVisitor to read annotations
      return null;
    }

