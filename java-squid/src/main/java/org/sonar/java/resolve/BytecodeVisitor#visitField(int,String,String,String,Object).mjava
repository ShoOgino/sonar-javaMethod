  @Override
  public FieldVisitor visitField(int flags, String name, String desc, @Nullable String signature, @Nullable Object value) {
    Preconditions.checkNotNull(name);
    Preconditions.checkNotNull(desc);
    if (!BytecodeCompleter.isSynthetic(flags)) {
      //Flags from asm lib are defined in Opcodes class and map to flags defined in Flags class
      final Symbol.VariableSymbol symbol = new Symbol.VariableSymbol(bytecodeCompleter.filterBytecodeFlags(flags),
          name, convertAsmType(org.objectweb.asm.Type.getType(desc)), classSymbol);
      classSymbol.members.enter(symbol);
      if (signature != null) {
        ReadType typeReader = new ReadType();
        new SignatureReader(signature).accept(typeReader);
        symbol.type = typeReader.typeRead;
        symbol.isParametrized = symbol.type instanceof Type.TypeVariableType;
      }
    }
    // (Godin): can return FieldVisitor to read annotations
    return null;
  }

