    @CheckForNull
    public MethodJavaSymbol overriddenSymbol() {
      if (isStatic()) {
        return null;
      }
      TypeJavaSymbol enclosingClass = enclosingClass();
      boolean unknownFound = false;
      for (JavaType.ClassJavaType superType : enclosingClass.superTypes()) {
        MethodJavaSymbol overridden = overriddenSymbolFrom(superType);
        if (overridden != null) {
          if (!overridden.isUnknown()) {
            return overridden;
          } else {
            unknownFound = true;
          }
        }
      }
      if (unknownFound) {
        return Symbols.unknownMethodSymbol;
      }
      return null;
    }

