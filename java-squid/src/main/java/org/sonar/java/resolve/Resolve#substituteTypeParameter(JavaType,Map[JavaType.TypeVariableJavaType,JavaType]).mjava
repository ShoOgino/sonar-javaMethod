  private JavaType substituteTypeParameter(JavaType type, Map<JavaType.TypeVariableJavaType, JavaType> substitution) {
    if(substitution.get(type) != null) {
      return substitution.get(type);
    }
    if(type instanceof JavaType.ParametrizedTypeJavaType) {
      JavaType.ParametrizedTypeJavaType ptt = (JavaType.ParametrizedTypeJavaType) type;
      Map<JavaType.TypeVariableJavaType, JavaType> newSubstitution = Maps.newHashMap();
      for (Map.Entry<JavaType.TypeVariableJavaType, JavaType> entry : ptt.typeSubstitution.entrySet()) {
        newSubstitution.put(entry.getKey(), substituteTypeParameter(entry.getValue(), substitution));
      }
      return parametrizedTypeCache.getParametrizedTypeType(ptt.rawType.getSymbol(), newSubstitution);
    }
    return type;
  }

