  @Override
  public boolean isSubtypeOf(org.sonar.plugins.java.api.semantic.Type superType) {
    JavaType supType = (JavaType) superType;
    if (this.isTagged(JavaType.ARRAY)) {
      //Handle covariance of arrays.
      if(supType.isTagged(JavaType.ARRAY)) {
        return ((ArrayJavaType) this).elementType().isSubtypeOf(((ArrayJavaType) supType).elementType());
      }
      //Only possibility to be supertype of array without being an array is to be Object.
      return "java.lang.Object".equals(supType.fullyQualifiedName());
    } else if (this.isTagged(JavaType.CLASS) && supType.isTagged(JavaType.CLASS)) {
      ClassJavaType superClassType = (ClassJavaType) supType;
      return this.equals(superClassType) || this.superTypeContains(superClassType.fullyQualifiedName());
    } else if(isTagged(TYPEVAR)) {
      return this.equals(superType) || erasure().isSubtypeOf(superType.erasure());
    } else if(isTagged(BOT)) {
      return supType.isTagged(BOT) || superType.isClass() || superType.isArray();
    }
    return false;
  }

