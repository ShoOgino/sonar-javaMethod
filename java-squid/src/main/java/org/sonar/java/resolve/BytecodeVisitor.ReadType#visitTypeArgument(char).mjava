    @Override
    public SignatureVisitor visitTypeArgument(final char wildcard) {
      return new ReadType(methodSymbol) {
        @Override
        public void visitEnd() {
          super.visitEnd();
          JavaType typeArgument;
          switch (wildcard) {
            case SUPER:
              typeArgument = new JavaType.WildCardType(this.typeRead, JavaType.WildCardType.BoundType.SUPER);
              break;
            case EXTENDS:
              typeArgument = new JavaType.WildCardType(this.typeRead, JavaType.WildCardType.BoundType.EXTENDS);
              break;
            case INSTANCEOF:
            default:
              typeArgument = this.typeRead;
              break;
          }
          ReadType.this.typeArguments.add(typeArgument);
        }
      };
    }

