  private Type substituteTypeParameter(Type type, Map<Type.TypeVariableType, Type> substitution) {
    if(substitution.get(type) != null) {
      return substitution.get(type);
    }
    if(type instanceof Type.ParametrizedTypeType) {
      Type.ParametrizedTypeType ptt = (Type.ParametrizedTypeType) type;
      Map<Type.TypeVariableType, Type> newSubstitution = Maps.newHashMap();
      for (Map.Entry<Type.TypeVariableType, Type> entry : ptt.typeSubstitution.entrySet()) {
        newSubstitution.put(entry.getKey(), substituteTypeParameter(entry.getValue(), substitution));
      }
      return parametrizedTypeCache.getParametrizedTypeType(ptt.rawType.getSymbol(), newSubstitution);
    }
    return type;
  }

