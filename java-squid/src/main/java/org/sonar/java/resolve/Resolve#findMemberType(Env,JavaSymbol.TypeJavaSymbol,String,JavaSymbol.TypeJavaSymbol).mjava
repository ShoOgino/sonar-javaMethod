  private JavaSymbol findMemberType(Env env, JavaSymbol.TypeJavaSymbol site, String name, JavaSymbol.TypeJavaSymbol c) {
    JavaSymbol bestSoFar = symbolNotFound;
    for (JavaSymbol symbol : c.members().lookup(name)) {
      if (symbol.kind == JavaSymbol.TYP) {
        return isAccessible(env, site, symbol)
            ? symbol
            : new AccessErrorJavaSymbol(symbol, Symbols.unknownType);
      }
    }
    if (c.getSuperclass() != null) {
      JavaSymbol symbol = findMemberType(env, site, name, c.getSuperclass().symbol);
      if (symbol.kind < bestSoFar.kind) {
        bestSoFar = symbol;
      }
    }
    if (c.getInterfaces() == null) {
      // Invariant to check that interfaces are not set only when we are looking into the symbol we are currently completing.
      // required for generics
      Preconditions.checkState(c.completing, "interfaces of a symbol not currently completing are not set.");
      Preconditions.checkState(c == site);
    } else {
      for (JavaType interfaceType : c.getInterfaces()) {
        JavaSymbol symbol = findMemberType(env, site, name, interfaceType.symbol);
        if (symbol.kind < bestSoFar.kind) {
          bestSoFar = symbol;
        }
      }
    }
    return bestSoFar;
  }

