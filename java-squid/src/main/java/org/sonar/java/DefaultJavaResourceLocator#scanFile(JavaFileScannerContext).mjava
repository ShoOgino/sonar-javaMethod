  @Override
  public void scanFile(JavaFileScannerContext context) {
    JavaFilesCache javaFilesCache = new JavaFilesCache();
    javaFilesCache.scanFile(context);
    org.sonar.api.resources.File currentResource = null;
    for (Map.Entry<String, File> classIOFileEntry : javaFilesCache.getResourcesCache().entrySet()) {
      if (currentResource == null) {
        currentResource = org.sonar.api.resources.File.fromIOFile(classIOFileEntry.getValue(), project);
        Preconditions.checkNotNull(currentResource, "resource not found : " + context.getFile().getName());
        DSMMapping.addResource(currentResource);
      }
      resourcesByClass.put(classIOFileEntry.getKey(), currentResource);
      if (context.getFileKey() != null) {
        sourceFileByClass.put(classIOFileEntry.getKey(), context.getFileKey());
      }
    }
    Set<Integer> ignoredLines = Sets.newHashSet(context.getNoSonarLines());
    ignoredLines.addAll(javaFilesCache.ignoredLines());
    noSonarFilter.addResource(currentResource, ignoredLines);
    methodStartLines.putAll(javaFilesCache.getMethodStartLines());
  }

