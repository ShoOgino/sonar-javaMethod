    @Override
    public void visitMethodInvocation(MethodInvocationTree syntaxNode) {
      if (isClosingResource(syntaxNode.symbol())) {
        ExpressionTree methodSelect = syntaxNode.methodSelect();
        if (methodSelect.is(Tree.Kind.MEMBER_SELECT)) {
          final ExpressionTree targetExpression = ((MemberSelectExpressionTree) methodSelect).expression();
          if (targetExpression.is(Tree.Kind.IDENTIFIER)) {
            final IdentifierTree identifier = (IdentifierTree) targetExpression;
            final SymbolicValue target = programState.getValue(identifier.symbol());
            programState = closeResource(programState, target);
          }
        }
      } else {
        final List<SymbolicValue> values = programState.peekValues(syntaxNode.arguments().size() + 1);
        final List<SymbolicValue> argumentValues = values.subList(1, values.size());
        for (SymbolicValue target : argumentValues) {
          programState = closeResource(programState, target);
        }
      }
    }

