    @Override
    public ProgramState setConstraint(ProgramState programState, BooleanConstraint booleanConstraint) {
      Object data = programState.constraints.get(this);
      // update program state only for a different constraint
      if (data instanceof BooleanConstraint) {
        BooleanConstraint bc = (BooleanConstraint) data;
        if ((BooleanConstraint.TRUE.equals(booleanConstraint) && BooleanConstraint.FALSE.equals(bc)) ||
          (BooleanConstraint.TRUE.equals(bc) && BooleanConstraint.FALSE.equals(booleanConstraint))) {
          // setting null where value is known to be non null or the contrary
          return null;
        }
      }
      if (data == null || !data.equals(booleanConstraint)) {

        // store constraint only if symbolic value can be reached by a symbol.
        if (programState.values.containsValue(this)) {
          Map<SymbolicValue, Object> temp = Maps.newHashMap(programState.constraints);
          temp.put(this, booleanConstraint);
          return new ProgramState(programState.values, temp, programState.visitedPoints, programState.stack);
        }
      }
      return programState;
    }

