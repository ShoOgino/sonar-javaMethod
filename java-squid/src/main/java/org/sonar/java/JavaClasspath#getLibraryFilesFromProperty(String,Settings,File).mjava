  private List<File> getLibraryFilesFromProperty(String property, Settings settings, File baseDir) {
    List<File> result = Lists.newArrayList();
    String fileList = settings.getString(property);
    if (StringUtils.isNotEmpty(fileList)) {
      List<String> fileNames = Lists.newArrayList(StringUtils.split(fileList, SEPARATOR));
      for (String fileName : fileNames) {
        int wildcardIndex = fileName.indexOf('*');
        if (wildcardIndex >= 0) {
          int lastPathSeparator = Math.max(fileName.lastIndexOf('/'), fileName.lastIndexOf('\\'));
          String dir = fileName.substring(0, lastPathSeparator);
          String pattern = fileName.substring(lastPathSeparator+1);
          FileFilter fileFilter;
          if(pattern.isEmpty()) {
            fileFilter = new OrFileFilter(Lists.newArrayList(suffixFileFilter(".jar", IOCase.INSENSITIVE), suffixFileFilter(".zip", IOCase.INSENSITIVE)));
          } else {
            fileFilter = new WildcardFileFilter(pattern);
          }
          File jarDir = resolvePath(baseDir, dir);
          List<File> jarFiles = Arrays.asList(jarDir.listFiles((FileFilter) new AndFileFilter((IOFileFilter) fileFilter, FileFileFilter.FILE)));
          result.addAll(jarFiles);
        } else {
          File file = resolvePath(baseDir, fileName);
          result.add(file);
        }
      }
    }
    return result;
  }

