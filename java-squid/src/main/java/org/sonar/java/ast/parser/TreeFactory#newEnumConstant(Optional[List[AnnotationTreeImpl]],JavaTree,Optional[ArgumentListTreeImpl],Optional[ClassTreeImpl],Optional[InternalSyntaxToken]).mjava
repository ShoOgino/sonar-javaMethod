  public EnumConstantTreeImpl newEnumConstant(
    Optional<List<AnnotationTreeImpl>> annotations, JavaTree identifierToken,
    Optional<ArgumentListTreeImpl> arguments,
    Optional<ClassTreeImpl> classBody,
    Optional<InternalSyntaxToken> commaToken) {

    IdentifierTreeImpl identifier = new IdentifierTreeImpl((InternalSyntaxToken) identifierToken);

    SyntaxToken openParenToken = null;
    SyntaxToken closeParenToken = null;
    List<ExpressionTree> argumentsList = Collections.emptyList();
    if (arguments.isPresent()) {
      ArgumentListTreeImpl argumentsListTreeImpl = arguments.get();
      argumentsList = argumentsListTreeImpl;
      openParenToken = argumentsListTreeImpl.openParenToken();
      closeParenToken = argumentsListTreeImpl.closeParenToken();
    }

    NewClassTreeImpl newClass = new NewClassTreeImpl(
      openParenToken,
      argumentsList,
      closeParenToken,
      classBody.orNull()
      );
    newClass.completeWithIdentifier(identifier);

    return new EnumConstantTreeImpl(modifiers((Optional<List<ModifierTree>>) (Optional<?>) annotations), identifier, newClass, commaToken.orNull());
  }

