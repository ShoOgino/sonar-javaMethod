  /**
   * 9.1. Interface Declarations
   */
  private void interfaceDeclarations() {
    interfaceDeclaration.is(interfaceKeyword, identifier, optional(typeParameters), optional(extendsKeyword, classTypeList), interfaceBody);

    interfaceBody.is(lwing, zeroOrMore(interfaceBodyDeclaration), rwing);
    interfaceBodyDeclaration.is(firstOf(
        sequence(zeroOrMore(modifier), interfaceMemberDecl),
        semi));
    interfaceMemberDecl.is(firstOf(
        interfaceMethodOrFieldDecl,
        interfaceGenericMethodDecl,
        sequence(voidKeyword, identifier, voidInterfaceMethodDeclaratorsRest),
        interfaceDeclaration,
        annotationTypeDeclaration,
        classDeclaration,
        enumDeclaration));
    interfaceMethodOrFieldDecl.is(type, identifier, interfaceMethodOrFieldRest);
    interfaceMethodOrFieldRest.is(firstOf(
        sequence(constantDeclaratorsRest, semi),
        interfaceMethodDeclaratorRest));
    interfaceMethodDeclaratorRest.is(formalParameters, zeroOrMore(dim), optional(throwsKeyword, classTypeList), semi);
    interfaceGenericMethodDecl.is(typeParameters, firstOf(type, voidKeyword), identifier, interfaceMethodDeclaratorRest);
    voidInterfaceMethodDeclaratorsRest.is(formalParameters, optional(throwsKeyword, classTypeList), semi);
    constantDeclaratorsRest.is(constantDeclaratorRest, zeroOrMore(comma, constantDeclarator));
    constantDeclarator.is(identifier, constantDeclaratorRest);
    constantDeclaratorRest.is(zeroOrMore(dim), equ, variableInitializer);
  }

