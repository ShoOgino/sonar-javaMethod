  @Override
  public void leaveNode(Tree tree) {
    switch (tree.kind()) {
      case CLASS:
      case ENUM:
      case ANNOTATION_TYPE:
        classTrees.pop();
        break;
      case METHOD:
      case CONSTRUCTOR:
        BlockTree block = ((MethodTree) tree).block();
        if (block != null && !block.body().isEmpty()) {
          StatementTree last = Iterables.getLast(block.body());
          if (last.is(Tree.Kind.RETURN_STATEMENT)) {
            // minus one because we are going to count the return with +1
            blame.remove(blame.size() - 1);
          }
        }
    }
  }

