  private void verifySemanticModelInvariant(AstNode astNode) {
    if (!astNode.is(JavaGrammar.COMPILATION_UNIT)) {
      return;
    }

    Set<AstNode> nodesSet = Sets.newHashSet(getDescendants(rootNode));
    nodesSet.add(rootNode);
    JavaTree compilationUnitTree = (JavaTree) new JavaTreeMaker().compilationUnit(rootNode);

    for (JavaTree tree : getDescendants(compilationUnitTree)) {
      for (AstNode node = tree.getAstNode(); node != null; node = node.getParent()) {
        Preconditions.checkState(nodesSet.contains(node),
          "The following associated AstNode is not present in tree: " + node
            + (node.hasToken() ? " at line " + node.getTokenLine() : " [no line]")
            + "\nReferenced from: " + tree.getClass().getSimpleName()
            + "\n" + tree
            + "\n" + PrinterVisitor.print(tree));
      }
    }
  }

