  private boolean inspectGetterMethodBody(AstNode astNode) {
    if (astNode.is(JavaGrammar.RETURN_STATEMENT) && astNode.hasDirectChildren(JavaGrammar.EXPRESSION)) {
      AstNode expression = astNode.getFirstChild(JavaGrammar.EXPRESSION);
      if (expression.getNumberOfChildren() == 1 && expression.getFirstChild().is(JavaGrammar.PRIMARY)) {
        AstNode qualifiedIdentifierExpression = expression.getFirstChild().getFirstChild();
        if (qualifiedIdentifierExpression.is(Kind.IDENTIFIER)) {
          if (findPrivateClassVariable(qualifiedIdentifierExpression)) {
            return true;
          }
        }
      }
    }
    return false;
  }

