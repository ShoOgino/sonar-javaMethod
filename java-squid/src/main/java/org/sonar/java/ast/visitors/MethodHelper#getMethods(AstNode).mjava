  public static List<MethodHelper> getMethods(AstNode classOrEnumNode) {
    Preconditions.checkArgument(classOrEnumNode.is(JavaGrammar.CLASS_BODY, JavaGrammar.ENUM_BODY_DECLARATIONS));

    ImmutableList.Builder<MethodHelper> builder = ImmutableList.builder();

    for (AstNode classBodyDeclaration : classOrEnumNode.getChildren(JavaGrammar.CLASS_BODY_DECLARATION)) {
      AstNode memberDecl = classBodyDeclaration.getFirstChild(JavaGrammar.MEMBER_DECL);
      if (memberDecl != null) {
        AstNode actualMember = getFirstDescendant(memberDecl,
          JavaGrammar.METHOD_DECLARATOR_REST,
          JavaGrammar.CONSTRUCTOR_DECLARATOR_REST,
          JavaGrammar.FIELD_DECLARATION,
          JavaGrammar.VOID_METHOD_DECLARATOR_REST,
          JavaGrammar.CONSTRUCTOR_DECLARATOR_REST,
          JavaGrammar.INTERFACE_DECLARATION,
          JavaGrammar.CLASS_DECLARATION,
          JavaGrammar.ENUM_DECLARATION,
          Kind.METHOD);
        if (actualMember.is(JavaGrammar.METHOD_DECLARATOR_REST, JavaGrammar.VOID_METHOD_DECLARATOR_REST, Kind.METHOD)) {
          builder.add(new MethodHelper(actualMember));
        }
      }
    }

    return builder.build();
  }

