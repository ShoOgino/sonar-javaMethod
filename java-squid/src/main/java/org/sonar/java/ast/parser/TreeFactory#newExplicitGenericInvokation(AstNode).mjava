  public ExpressionTree newExplicitGenericInvokation(AstNode explicitGenericInvocationSuffix) {
    if (explicitGenericInvocationSuffix.hasDirectChildren(JavaGrammar.SUPER_SUFFIX)) {
      // <T>super...
      AstNode superSuffix = explicitGenericInvocationSuffix.getFirstChild(JavaGrammar.SUPER_SUFFIX);
      return applySuperSuffix(
        new IdentifierTreeImpl(InternalSyntaxToken.create(superSuffix.getFirstChild(JavaKeyword.SUPER))),
        superSuffix);
    } else {
      // <T>id(arguments)
      AstNode identifierNode = explicitGenericInvocationSuffix.getFirstChild(JavaTokenType.IDENTIFIER);

      return new MethodInvocationTreeImpl(treeMaker.identifier(identifierNode), (ArgumentListTreeImpl) explicitGenericInvocationSuffix.getFirstChild(JavaGrammar.ARGUMENTS),
        identifierNode, explicitGenericInvocationSuffix.getFirstChild(JavaGrammar.ARGUMENTS));
    }
  }

