  public ExpressionTree newAnnotatedParameterizedIdentifier(
    Optional<List<AnnotationTreeImpl>> annotations, JavaTree identifierToken, Optional<TypeArgumentListTreeImpl> typeArguments) {

    List<AnnotationTree> annotationList = annotations.isPresent() ?
      ImmutableList.<AnnotationTree>builder().addAll(annotations.get()).build() :
      ImmutableList.<AnnotationTree>of();

    ExpressionTree result = new IdentifierTreeImpl((InternalSyntaxToken) identifierToken);

    if (typeArguments.isPresent()) {
      result = new ParameterizedTypeTreeImpl((TypeTree) result, typeArguments.get()).complete(annotationList);
    } else {
      result = ((IdentifierTreeImpl) result).complete(annotationList);
    }

    return result;
  }

