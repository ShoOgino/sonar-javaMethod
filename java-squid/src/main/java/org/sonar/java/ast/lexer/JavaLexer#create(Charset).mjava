  public static Lexer create(Charset charset) {
    Lexer.Builder builder = Lexer.builder()
        .withCharset(charset)
        .withFailIfNoChannelToConsumeOneCharacter(true)

        // Channels, which consumes more frequently should come first.
        // Whitespace character occurs more frequently than any other, and thus come first:
        .withChannel(new WhitespaceChannel())

        // Comments
        .withChannel(new InlineCommentChannel())
        .withChannel(new MultilineCommentChannel())

        // String Literals
        .withChannel(new CharacterLiteralChannel('"', GenericTokenType.LITERAL))

        // Character Literals
        .withChannel(new CharacterLiteralChannel('\'', JavaTokenType.CHARACTER_LITERAL))

        // Floating-Point Literals
        .withChannel(new FloatLiteralChannel())

        // Integer Literals
        .withChannel(new IntegerLiteralChannel())

        .withChannel(new JavaIdentifierAndKeywordChannel(JavaKeyword.values()))

        .withChannel(new PunctuatorChannel(JavaPunctuator.values()))

        .withChannel(new UnknownCharacterChannel(true));

    return builder.build();
  }

