  /**
   * 4. Types, Values and Variables
   */
  private static void types(LexerlessGrammarBuilder b) {
    b.rule(TYPE).is(b.firstOf(BASIC_TYPE, CLASS_TYPE), b.zeroOrMore(b.zeroOrMore(ANNOTATION), DIM));
    b.rule(CLASS_TYPE).is(b.zeroOrMore(ANNOTATION), JavaTokenType.IDENTIFIER, b.optional(TYPE_ARGUMENTS),
      b.zeroOrMore(DOT, b.zeroOrMore(ANNOTATION), JavaTokenType.IDENTIFIER, b.optional(TYPE_ARGUMENTS)));
    b.rule(CLASS_TYPE_LIST).is(CLASS_TYPE, b.zeroOrMore(COMMA, CLASS_TYPE));
    b.rule(TYPE_ARGUMENTS).is(LPOINT, TYPE_ARGUMENT, b.zeroOrMore(COMMA, TYPE_ARGUMENT), RPOINT);
    b.rule(TYPE_ARGUMENT).is(
      b.zeroOrMore(ANNOTATION),
      b.firstOf(
        TYPE,
        b.sequence(QUERY, b.optional(b.firstOf(EXTENDS, SUPER), b.zeroOrMore(ANNOTATION), TYPE)))
      );
    b.rule(TYPE_PARAMETERS).is(LPOINT, TYPE_PARAMETER, b.zeroOrMore(COMMA, TYPE_PARAMETER), RPOINT);
    b.rule(TYPE_PARAMETER).is(b.zeroOrMore(ANNOTATION), JavaTokenType.IDENTIFIER, b.optional(EXTENDS, BOUND));
    b.rule(BOUND).is(CLASS_TYPE, b.zeroOrMore(AND, b.zeroOrMore(ANNOTATION), CLASS_TYPE));
  }

