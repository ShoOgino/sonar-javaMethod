  private Parameter extractArgumentAndReturnType(AstNode astNode, boolean isArray) {
    while (astNode instanceof Tree && ((Tree) astNode).is(Kind.ARRAY_TYPE)) {
      astNode = (AstNode) ((ArrayTypeTree) astNode).type();
    }

    Preconditions.checkArgument(astNode.is(JavaTreeMaker.TYPE_KINDS) || astNode.is(JavaKeyword.VOID));

    if (astNode.is(JavaKeyword.VOID)) {
      return new Parameter(JvmJavaType.V, false);
    }
    if (astNode.is(Kind.PRIMITIVE_TYPE)) {
      PrimitiveTypeTree primitve = (PrimitiveTypeTree) astNode;
      return new Parameter(JAVA_TYPE_MAPPING.get(((AstNode) primitve.keyword()).getType()), isArray);
    } else {
      return new Parameter(extractClassName(astNode), isArray);
    }
  }

