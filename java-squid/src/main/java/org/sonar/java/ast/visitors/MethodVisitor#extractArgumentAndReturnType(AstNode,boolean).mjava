  private Parameter extractArgumentAndReturnType(AstNode astNode, boolean isArray) {
    Preconditions.checkArgument(astNode.is(JavaKeyword.VOID, JavaGrammar.TYPE));
    if (astNode.is(JavaKeyword.VOID)) {
      return new Parameter(JvmJavaType.V, false);
    }
    if (astNode.getFirstChild().is(Kind.PRIMITIVE_TYPE)) {
      PrimitiveTypeTree primitve = (PrimitiveTypeTree) astNode.getFirstChild();
      return new Parameter(JAVA_TYPE_MAPPING.get(((AstNode) primitve.keyword()).getType()), isArray);
    } else if (astNode.getFirstChild().is(JavaGrammar.CLASS_TYPE)) {
      return new Parameter(extractClassName(astNode.getFirstChild()), isArray);
    } else {
      throw new IllegalStateException();
    }
  }

