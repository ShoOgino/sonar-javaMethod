  public String getApiJavadoc(Tree tree) {
    if (tree.is(API_KINDS)) {
      ModifiersTree modifiersTree = null;
      if (tree.is(CLASS_KINDS)) {
        modifiersTree = ((ClassTree) tree).modifiers();
      } else if (tree.is(METHOD_KINDS)) {
        modifiersTree = ((MethodTree) tree).modifiers();
      } else if (tree.is(Tree.Kind.VARIABLE)) {
        modifiersTree = ((VariableTree) tree).modifiers();
      }
      //FIXME token should be retrieved in a much simpler way.
      Tree tokenTree = null;
      if (modifiersTree != null && !(modifiersTree.modifiers().isEmpty() && modifiersTree.annotations().isEmpty())) {
        tokenTree = modifiersTree;
      }
      if (tokenTree == null && tree.is(Tree.Kind.METHOD)) {
        MethodTree methodTree = (MethodTree) tree;
        if (methodTree.typeParameters().isEmpty()) {
          tokenTree = methodTree.returnType();
          while (tokenTree != null && tokenTree.is(Tree.Kind.ARRAY_TYPE, Tree.Kind.PARAMETERIZED_TYPE, Tree.Kind.MEMBER_SELECT)) {
            if (tokenTree.is(Tree.Kind.ARRAY_TYPE)) {
              tokenTree = ((ArrayTypeTree) tokenTree).type();
            } else if (tokenTree.is(Tree.Kind.MEMBER_SELECT)) {
              tokenTree = ((MemberSelectExpressionTree) tokenTree).expression();
            } else if (tokenTree.is(Tree.Kind.PARAMETERIZED_TYPE)) {
              tokenTree = ((ParameterizedTypeTree) tokenTree).type();
            }
          }
        } else {
          SyntaxToken syntaxToken = ((TypeParameterListTreeImpl) ((JavaTree) methodTree.typeParameters().get(0)).getAstNode().getParent()).openBracketToken();
          return getCommentFromSyntaxToken(syntaxToken);
        }
      }
      if (tokenTree == null) {
        tokenTree = tree;
      }
      Token token = ((JavaTree) tokenTree).getToken();
      return getCommentFromToken(token);
    }
    return null;
  }

