  // TODO Must be deleted
  private void appendConstantDeclarations(ModifiersTree modifiers, ImmutableList.Builder<Tree> members, AstNode astNode) {
    AstNode typeAstNode = astNode.getFirstChild(JavaTreeMaker.TYPE_KINDS);
    if (typeAstNode == null) {
      typeAstNode = astNode.getFirstChild(JavaKeyword.VOID);
    }
    ExpressionTree type = typeAstNode instanceof Tree ? (ExpressionTree) typeAstNode : treeMaker.referenceType(typeAstNode);
    for (AstNode constantDeclaratorRestNode : astNode.getDescendants(JavaLexer.CONSTANT_DECLARATOR_REST)) {
      AstNode identifierNode = constantDeclaratorRestNode.getPreviousAstNode();
      Preconditions.checkState(identifierNode.is(JavaTokenType.IDENTIFIER));
      members.add(new VariableTreeImpl(
        constantDeclaratorRestNode,
        modifiers,
        treeMaker.applyDim(type, constantDeclaratorRestNode.getChildren(TreeFactory.WRAPPER_AST_NODE).size()),
        treeMaker.identifier(identifierNode),
        (ExpressionTree) constantDeclaratorRestNode.getLastChild()));
    }
  }

