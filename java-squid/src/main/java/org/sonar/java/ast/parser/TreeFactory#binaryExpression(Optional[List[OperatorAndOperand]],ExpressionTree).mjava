  public ExpressionTree binaryExpression(Optional<List<OperatorAndOperand>> operatorAndOperands, ExpressionTree expression) {
    if (!operatorAndOperands.isPresent()) {
      return expression;
    }

    // TODO SONARJAVA-610
    ExpressionTree result = expression;
    for (OperatorAndOperand operatorAndOperand : Lists.reverse(operatorAndOperands.get())) {
      result = new BinaryExpressionTreeImpl(
        kindMaps.getBinaryOperator((JavaPunctuator) operatorAndOperand.operator().getType()),
        operatorAndOperand.operand(),
        operatorAndOperand.operator(),
        result);
    }

    return result;
  }

