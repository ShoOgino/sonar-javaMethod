  private void replaceAstNode(AstNode o, AstNode n) {
    if (verifyAssertions) {
      verifyNoInjectionFromJavaTreeMaker(n);
      verifyNoInjectionOfSeveralNewStronglyTypedNodes(o, n);
    }

    for (Field field : fields) {
      try {
        field.set(n, field.get(o));
      } catch (IllegalAccessException e) {
        throw Throwables.propagate(e);
      }
    }

    AstNode parent = n.getParent();
    if (parent != null) {
      List<AstNode> children = parent.getChildren();
      // TODO Replace iteration by childIndex
      for (int i = 0; i < children.size(); i++) {
        if (o.equals(children.get(i))) {
          children.set(i, n);
          break;
        }
      }
    } else {
      rootNode = n;
    }
  }

