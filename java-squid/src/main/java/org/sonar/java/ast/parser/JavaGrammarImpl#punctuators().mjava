  private void punctuators() {
    at.is(punctuator("@")).skip();
    and.is(punctuator("&", nextNot(firstOf("=", "&")))).skip();
    andand.is(punctuator("&&")).skip();
    andequ.is(punctuator("&=")).skip();
    bang.is(punctuator("!", nextNot("="))).skip();
    bsr.is(punctuator(">>>", nextNot("="))).skip();
    bsrequ.is(punctuator(">>>=")).skip();
    colon.is(punctuator(":")).skip();
    comma.is(punctuator(",")).skip();
    dec.is(punctuator("--")).skip();
    div.is(punctuator("/", nextNot("="))).skip();
    divequ.is(punctuator("/=")).skip();
    dot.is(punctuator(".")).skip();
    ellipsis.is(punctuator("...")).skip();
    equ.is(punctuator("=", nextNot("="))).skip();
    equal.is(punctuator("==")).skip();
    ge.is(punctuator(">=")).skip();
    gt.is(punctuator(">", nextNot(firstOf("=", ">")))).skip();
    hat.is(punctuator("^", nextNot("="))).skip();
    hatequ.is(punctuator("^=")).skip();
    inc.is(punctuator("++")).skip();
    lbrk.is(punctuator("[")).skip();
    lt.is(punctuator("<", nextNot(firstOf("=", "<")))).skip();
    le.is(punctuator("<=")).skip();
    lpar.is(punctuator("(")).skip();
    lwing.is(punctuator("{")).skip();
    minus.is(punctuator("-", nextNot(firstOf("-", "=")))).skip();
    minsequ.is(punctuator("-=")).skip();
    mod.is(punctuator("%", nextNot("="))).skip();
    modequ.is(punctuator("%=")).skip();
    notequal.is(punctuator("!=")).skip();
    or.is(punctuator("|", nextNot(firstOf("=", "|")))).skip();
    orequ.is(punctuator("|=")).skip();
    oror.is(punctuator("||")).skip();
    plus.is(punctuator("+", nextNot(firstOf("=", "+")))).skip();
    plusequ.is(punctuator("+=")).skip();
    query.is(punctuator("?")).skip();
    rbrk.is(punctuator("]")).skip();
    rpar.is(punctuator(")")).skip();
    rwing.is(punctuator("}")).skip();
    semi.is(punctuator(";")).skip();
    sl.is(punctuator("<<", nextNot("="))).skip();
    slequ.is(punctuator("<<=")).skip();
    sr.is(punctuator(">>", nextNot(firstOf("=", ">")))).skip();
    srequ.is(punctuator(">>=")).skip();
    star.is(punctuator("*", nextNot("="))).skip();
    starequ.is(punctuator("*=")).skip();
    tilda.is(punctuator("~")).skip();

    lpoint.is(punctuator("<")).skip();
    rpoint.is(punctuator(">")).skip();
  }

