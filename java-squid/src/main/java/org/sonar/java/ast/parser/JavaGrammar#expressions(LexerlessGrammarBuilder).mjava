  /**
   * 15. Expressions
   */
  private static void expressions(LexerlessGrammarBuilder b) {
    b.rule(SELECTOR).is(
      b.firstOf(
        b.sequence(DOT, MEMBER_SELECT_OR_METHOD_INVOCATION),
        b.sequence(DOT, NEW, b.optional(TYPE_ARGUMENTS), ANNOTATED_PARAMETERIZED_IDENTIFIER, CLASS_CREATOR_REST),
        DIM_EXPR,
        b.sequence(b.zeroOrMore(DIM), DOT, CLASS)));

    b.rule(MEMBER_SELECT_OR_METHOD_INVOCATION).is(
      b.optional(TYPE_ARGUMENTS),
      b.firstOf(
        JavaTokenType.IDENTIFIER,
        JavaKeyword.THIS,
        JavaKeyword.SUPER),
      b.optional(ARGUMENTS));

    b.rule(CLASS_CREATOR_REST).is(ARGUMENTS, b.optional(CLASS_BODY));
    b.rule(DIM).is(LBRK, RBRK);
  }

