  public ArgumentListTreeImpl newArguments(AstNode expression, Optional<List<AstNode>> rests) {
    List<AstNode> children = Lists.newArrayList();
    ImmutableList.Builder<ExpressionTree> expressions = ImmutableList.builder();

    children.add(expression);
    expressions.add(treeMaker.expression(expression));

    if (rests.isPresent()) {
      for (AstNode rest : rests.get()) {
        children.addAll(rest.getChildren());
        expressions.add(treeMaker.expression(rest.getFirstChild(JavaGrammar.EXPRESSION)));
      }
    }

    return new ArgumentListTreeImpl(expressions.build(), children);
  }

