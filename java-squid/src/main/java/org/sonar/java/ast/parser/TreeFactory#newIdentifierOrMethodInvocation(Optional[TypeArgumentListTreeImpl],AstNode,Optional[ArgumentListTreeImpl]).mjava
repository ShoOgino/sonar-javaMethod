  public ExpressionTree newIdentifierOrMethodInvocation(Optional<TypeArgumentListTreeImpl> typeArguments, AstNode identifierAstNode, Optional<ArgumentListTreeImpl> arguments) {
    InternalSyntaxToken identifierToken = InternalSyntaxToken.create(identifierAstNode);
    IdentifierTreeImpl identifier = new IdentifierTreeImpl(identifierToken);

    if (typeArguments.isPresent()) {
      identifier.prependChildren(typeArguments.get());
    }

    ExpressionTree result = identifier;

    if (arguments.isPresent()) {
      ArgumentListTreeImpl argumentListTree = arguments.get();
      result = new MethodInvocationTreeImpl(
        identifier,
        typeArguments.orNull(),
        argumentListTree.openParenToken(),
        argumentListTree,
        argumentListTree.closeParenToken(),
        identifier,
        argumentListTree);
    }

    return result;
  }

