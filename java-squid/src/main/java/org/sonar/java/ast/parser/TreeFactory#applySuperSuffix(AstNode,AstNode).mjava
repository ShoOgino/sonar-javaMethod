  private ExpressionTree applySuperSuffix(AstNode identifierNode, AstNode superSuffixNode) {
    Preconditions.checkArgument(!(identifierNode instanceof JavaTree));
    JavaTreeMaker.checkType(superSuffixNode, JavaGrammar.SUPER_SUFFIX);

    if (superSuffixNode.hasDirectChildren(JavaGrammar.ARGUMENTS)) {
      // super(arguments)
      // super.method(arguments)
      // super.<T>method(arguments)
      // TODO typeArguments
      if (superSuffixNode.hasDirectChildren(JavaTokenType.IDENTIFIER)) {
        AstNode superSuffixIdentifierNode = superSuffixNode.getFirstChild(JavaTokenType.IDENTIFIER);
        MemberSelectExpressionTreeImpl memberSelect = new MemberSelectExpressionTreeImpl(
          superSuffixNode,
          treeMaker.identifier(identifierNode),
          treeMaker.identifier(superSuffixIdentifierNode));

        AstNode superSuffixArgumentsNode = superSuffixNode.getFirstChild(JavaGrammar.ARGUMENTS);
        return new MethodInvocationTreeImpl(memberSelect, treeMaker.arguments(superSuffixArgumentsNode),
          identifierNode, superSuffixNode);
      } else {
        return new MethodInvocationTreeImpl(treeMaker.identifier(identifierNode), treeMaker.arguments(superSuffixNode.getFirstChild(JavaGrammar.ARGUMENTS)),
          identifierNode, superSuffixNode);
      }
    } else {
      // super.field
      return new MemberSelectExpressionTreeImpl(treeMaker.identifier(identifierNode), treeMaker.identifier(superSuffixNode.getFirstChild(JavaTokenType.IDENTIFIER)),
        identifierNode, superSuffixNode);
    }
  }

