  private ExpressionTree binaryExpression(ExpressionTree expression, Optional<List<OperatorAndOperand>> operatorAndOperands) {
    if (!operatorAndOperands.isPresent()) {
      return expression;
    }

    ExpressionTree result = expression;
    for (OperatorAndOperand operatorAndOperand : operatorAndOperands.get()) {
      result = new BinaryExpressionTreeImpl(
          kindMaps.getBinaryOperator((JavaPunctuator) operatorAndOperand.operator().getType()),
          result,
          operatorAndOperand.operator(),
          operatorAndOperand.operand());
    }
    return result;
  }

