  @Override
  public boolean consume(CodeReader code, Lexer lexer) {
    if (code.peek() != ch) {
      return false;
    }

    sb.delete(0, sb.length());

    int line = code.getCursor().getLine();
    int column = code.getCursor().getColumn();
    char prev;
    do {
      prev = (char) code.pop();
      sb.append(prev);
      if (prev == '\\') {
        prev = (char) code.pop();
        sb.append(prev);
      }
    } while (code.peek() != ch && !isPrematureEnd(code.peek()));

    if (isPrematureEnd(code.peek())) {
      throw new LexerException("Invalid literal");
    }

    sb.append((char) code.pop());
    String value = sb.toString();

    Token token = tokenBuilder
        .setType(tokenType)
        .setValueAndOriginalValue(value)
        .setURI(lexer.getURI())
        .setLine(line)
        .setColumn(column)
        .build();

    lexer.addToken(token);

    return true;
  }

