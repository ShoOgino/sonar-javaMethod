  public SwitchStatementTreeImpl switchStatement(
    AstNode switchToken, ParenthesizedTreeImpl expression, AstNode leftCurlyBraceToken, Optional<List<CaseGroupTreeImpl>> optionalGroups, AstNode rightCurlyBraceToken) {

    List<CaseGroupTreeImpl> groups = optionalGroups.isPresent() ? optionalGroups.get() : Collections.<CaseGroupTreeImpl>emptyList();

    ImmutableList.Builder<AstNode> children = ImmutableList.builder();
    children.add(switchToken, expression, leftCurlyBraceToken);
    children.addAll(groups);
    children.add(rightCurlyBraceToken);

    return new SwitchStatementTreeImpl(expression, groups,
      children.build());
  }

