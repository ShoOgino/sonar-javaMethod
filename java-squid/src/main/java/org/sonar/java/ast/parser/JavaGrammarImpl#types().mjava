  /**
   * 4. Types, Values and Variables
   */
  private void types() {
    type.is(firstOf(basicType, classType), zeroOrMore(dim));
    referenceType.is(firstOf(
        sequence(basicType, zeroOrMore(dim)),
        sequence(classType, zeroOrMore(dim))));
    classType.is(identifier, optional(typeArguments), zeroOrMore(dot, identifier, optional(typeArguments)));
    classTypeList.is(classType, zeroOrMore(comma, classType));
    typeArguments.is(lpoint, typeArgument, zeroOrMore(comma, typeArgument), rpoint);
    typeArgument.is(firstOf(
        referenceType,
        sequence(query, optional(firstOf(extendsKeyword, superKeyword), referenceType))));
    typeParameters.is(lpoint, typeParameter, zeroOrMore(comma, typeParameter), rpoint);
    typeParameter.is(identifier, optional(extendsKeyword, bound));
    bound.is(classType, zeroOrMore(and, classType));
    modifier.is(firstOf(
        annotation,
        publicKeyword,
        protectedKeyword,
        privateKeyword,
        staticKeyword,
        abstractKeyword,
        finalKeyword,
        nativeKeyword,
        synchronizedKeyword,
        transientKeyword,
        volatileKeyword,
        strictfpKeyword));
  }

