  public SyntaxHighlighterVisitor(ResourcePerspectives perspectives, Charset charset) {
    this.charset = charset;
    this.perspectives = perspectives;

    ImmutableMap.Builder<AstNodeType, String> typesBuilder = ImmutableMap.builder();
    for (AstNodeType type : JavaKeyword.values()) {
      typesBuilder.put(type, "k");
    }
    typesBuilder.put(JavaTokenType.CHARACTER_LITERAL, "s");
    typesBuilder.put(JavaTokenType.LITERAL, "s");
    typesBuilder.put(JavaTokenType.FLOAT_LITERAL, "c");
    typesBuilder.put(JavaTokenType.DOUBLE_LITERAL, "c");
    typesBuilder.put(JavaTokenType.LONG_LITERAL, "c");
    typesBuilder.put(JavaTokenType.INTEGER_LITERAL, "c");
    typesBuilder.put(JavaGrammar.ANNOTATION, "a");
    types = typesBuilder.build();
  }

