  public TypeCastExpressionTreeImpl newClassCastExpression(TypeTree type, Optional<List<Tuple<InternalSyntaxToken, Tree>>> classTypes, InternalSyntaxToken closeParenToken, ExpressionTree expression) {
    ImmutableList.Builder<Tree> boundsBuilder = ImmutableList.builder();
    if (classTypes.isPresent()) {
      for (Tuple<InternalSyntaxToken, Tree> tuple : classTypes.get()) {
        // TODO SONARJAVA-547 andOperator should be present in the tree
        InternalSyntaxToken andOperator = tuple.first();
        boundsBuilder.add(tuple.second());
      }
    }

    return new TypeCastExpressionTreeImpl(type, boundsBuilder.build(), closeParenToken, expression);
  }

