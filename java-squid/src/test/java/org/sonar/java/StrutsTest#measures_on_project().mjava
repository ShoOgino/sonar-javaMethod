  @Test
  public void measures_on_project() throws Exception {
    ArgumentCaptor<Measure> captor = ArgumentCaptor.forClass(Measure.class);
    verify(context, atLeastOnce()).saveMeasure(any(org.sonar.api.resources.File.class), captor.capture());
    Map<String, Double> metrics = new HashMap<String, Double>();
    for (Measure measure : captor.getAllValues()) {
      if (measure.getValue() != null) {
        if (metrics.get(measure.getMetricKey()) == null) {
          metrics.put(measure.getMetricKey(), measure.getValue());
        } else {
          metrics.put(measure.getMetricKey(), metrics.get(measure.getMetricKey()) + measure.getValue());
        }
      }
    }
    assertThat(metrics.get("classes").intValue()).isEqualTo(146);
    //56 methods in anonymous classes: not part of metric but part of number of methods in project.
    assertThat(metrics.get("functions").intValue()).isEqualTo(1437 - 56);
    assertThat(metrics.get("lines").intValue()).isEqualTo(32878);
    assertThat(project.getInt(JavaMetric.LINES_OF_CODE)).isEqualTo(14007);
    assertThat(metrics.get("statements").intValue()).isEqualTo(6403);
    assertThat(metrics.get("complexity").intValue()).isEqualTo(3957 - 145 /* SONAR-3793 */ - 1 /* SONAR-3794 */);
    assertThat(metrics.get("comment_lines").intValue()).isEqualTo(7605);
    assertThat(metrics.get("public_api").intValue()).isEqualTo(1340);
  }

