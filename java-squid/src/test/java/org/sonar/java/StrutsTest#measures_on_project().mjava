  @Test
  public void measures_on_project() throws Exception {
    ArgumentCaptor<Measure> captor = ArgumentCaptor.forClass(Measure.class);
    ArgumentCaptor<org.sonar.api.resources.File> sonarFilescaptor = ArgumentCaptor.forClass(org.sonar.api.resources.File.class);
    verify(context, atLeastOnce()).saveMeasure(sonarFilescaptor.capture(), captor.capture());
    List<Measure> measures = captor.getAllValues();
    int functions = 0;
    for (Measure measure : measures) {
      if(measure.getMetricKey().equals("functions")) {
        functions += measure.getIntValue();
      }
    }
    assertThat(project.getInt(JavaMetric.CLASSES)).isEqualTo(146);
    assertThat(project.getInt(JavaMetric.METHODS) + project.getInt(Metric.ACCESSORS)).isEqualTo(1437 + 48);
    assertThat(project.getInt(Metric.ACCESSORS)).isEqualTo(48);
    assertThat(project.getInt(JavaMetric.METHODS)).isEqualTo(1437);
    //56 methods in anonymous classes: not part of metric but part of number of methods in project.
    assertThat(functions).isEqualTo(1437-56);
    assertThat(project.getInt(JavaMetric.LINES)).isEqualTo(32878);
    assertThat(project.getInt(JavaMetric.LINES_OF_CODE)).isEqualTo(14007);
    assertThat(project.getInt(JavaMetric.STATEMENTS)).isEqualTo(6403);
    assertThat(project.getInt(JavaMetric.COMPLEXITY)).isEqualTo(3957 - 145 /* SONAR-3793 */- 1 /* SONAR-3794 */);
    assertThat(project.getInt(JavaMetric.COMMENT_LINES_WITHOUT_HEADER)).isEqualTo(7605);
    assertThat(project.getInt(Metric.PUBLIC_API)).isEqualTo(1348);
    assertThat(project.getInt(Metric.PUBLIC_DOC_API)).isEqualTo(842);
    assertThat(project.getDouble(Metric.PUBLIC_DOCUMENTED_API_DENSITY)).isEqualTo(0.62, Delta.delta(0.01));
  }

