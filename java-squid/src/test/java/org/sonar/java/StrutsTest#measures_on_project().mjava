  @Test
  public void measures_on_project() throws Exception {
    ArgumentCaptor<Measure> captor = ArgumentCaptor.forClass(Measure.class);
    verify(context, atLeastOnce()).saveMeasure(any(org.sonar.api.resources.File.class), captor.capture());
    Multiset<String> metrics = HashMultiset.create();
    for (Measure measure : captor.getAllValues()) {
      if(measure.getIntValue() != null ){
        metrics.add(measure.getMetricKey(), measure.getIntValue());
      }
    }

    assertThat(project.getInt(JavaMetric.CLASSES)).isEqualTo(146);
    assertThat(metrics.count("classes")).isEqualTo(146);
    assertThat(project.getInt(JavaMetric.METHODS) + project.getInt(Metric.ACCESSORS)).isEqualTo(1437 + 48);
    assertThat(project.getInt(Metric.ACCESSORS)).isEqualTo(48);
    assertThat(project.getInt(JavaMetric.METHODS)).isEqualTo(1437);
    //56 methods in anonymous classes: not part of metric but part of number of methods in project.
    assertThat(metrics.count("functions")).isEqualTo(1437-56);
    assertThat(metrics.count("lines")).isEqualTo(32878);
    assertThat(project.getInt(JavaMetric.LINES_OF_CODE)).isEqualTo(14007);
    assertThat(project.getInt(JavaMetric.STATEMENTS)).isEqualTo(6403);
    assertThat(metrics.count("complexity")).isEqualTo(3957 - 145 /* SONAR-3793 */- 1 /* SONAR-3794 */);
    assertThat(project.getInt(JavaMetric.COMMENT_LINES_WITHOUT_HEADER)).isEqualTo(7605);
    assertThat(project.getInt(Metric.PUBLIC_API)).isEqualTo(1348);
    assertThat(metrics.count("public_api")).isEqualTo(1340);
    assertThat(project.getInt(Metric.PUBLIC_DOC_API)).isEqualTo(842);
    assertThat(project.getDouble(Metric.PUBLIC_DOCUMENTED_API_DENSITY)).isEqualTo(0.62, Delta.delta(0.01));

  }

