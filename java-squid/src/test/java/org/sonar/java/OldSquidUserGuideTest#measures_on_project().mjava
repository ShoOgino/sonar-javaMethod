  @Test
  public void measures_on_project() throws Exception {
    assertThat(project.getInt(Metric.PACKAGES)).isEqualTo(12);
    assertThat(project.getInt(Metric.FILES)).isEqualTo(273);
    assertThat(project.getInt(Metric.ANONYMOUS_INNER_CLASSES)).isEqualTo(37);
    assertThat(project.getInt(Metric.CLASSES)).isEqualTo(412);
    assertThat(project.getInt(Metric.INTERFACES)).isEqualTo(27);
    assertThat(project.getInt(Metric.ABSTRACT_CLASSES)).isEqualTo(33);
    assertThat(project.getInt(Metric.METHODS)).isEqualTo(3805);
    assertThat(squid.search(new QueryByType(SourceMethod.class), new QueryByMeasure(Metric.ACCESSORS, Operator.EQUALS, 0)).size()).isEqualTo(3805);
    assertThat(project.getInt(Metric.ACCESSORS)).isEqualTo(69);
    assertThat(project.getInt(Metric.LINES)).isEqualTo(63852);
    assertThat(project.getInt(Metric.LINES_OF_CODE)).isEqualTo(26323);
    assertThat(project.getInt(Metric.BLANK_LINES)).isEqualTo(6426);
    assertThat(project.getInt(Metric.STATEMENTS) + STATEMENTS_CORRECTION).isEqualTo(12666);
    assertThat(project.getInt(Metric.COMPLEXITY)).isEqualTo(8475);
    assertThat(project.getInt(Metric.BRANCHES)).isEqualTo(4668);
    assertThat(project.getInt(Metric.COMMENT_LINES)).isEqualTo(21184);
    assertThat(project.getInt(Metric.COMMENT_BLANK_LINES)).isEqualTo(9995);
    assertThat(project.getInt(Metric.COMMENT_LINES_WITHOUT_HEADER)).isEqualTo(17908);
    assertThat(project.getDouble(Metric.COMMENT_LINES_DENSITY)).isEqualTo(0.4, Delta.delta(0.01));
    assertThat(project.getInt(Metric.PUBLIC_API)).isEqualTo(3257);
    assertThat(project.getInt(Metric.PUBLIC_DOC_API)).isEqualTo(2008);
    assertThat(project.getDouble(Metric.PUBLIC_DOCUMENTED_API_DENSITY)).isEqualTo(0.62, Delta.delta(0.01));
  }

