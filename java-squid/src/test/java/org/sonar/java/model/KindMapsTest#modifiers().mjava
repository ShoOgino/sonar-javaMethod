  @Test
  public void modifiers() {
    assertThat(kindMaps.getModifier(JavaKeyword.PUBLIC)).isSameAs(Modifier.PUBLIC);
    assertThat(kindMaps.getModifier(JavaKeyword.PROTECTED)).isSameAs(Modifier.PROTECTED);
    assertThat(kindMaps.getModifier(JavaKeyword.PRIVATE)).isSameAs(Modifier.PRIVATE);
    assertThat(kindMaps.getModifier(JavaKeyword.ABSTRACT)).isSameAs(Modifier.ABSTRACT);
    assertThat(kindMaps.getModifier(JavaKeyword.STATIC)).isSameAs(Modifier.STATIC);
    assertThat(kindMaps.getModifier(JavaKeyword.FINAL)).isSameAs(Modifier.FINAL);
    assertThat(kindMaps.getModifier(JavaKeyword.TRANSIENT)).isSameAs(Modifier.TRANSIENT);
    assertThat(kindMaps.getModifier(JavaKeyword.VOLATILE)).isSameAs(Modifier.VOLATILE);
    assertThat(kindMaps.getModifier(JavaKeyword.SYNCHRONIZED)).isSameAs(Modifier.SYNCHRONIZED);
    assertThat(kindMaps.getModifier(JavaKeyword.NATIVE)).isSameAs(Modifier.NATIVE);
    assertThat(kindMaps.getModifier(JavaKeyword.STRICTFP)).isSameAs(Modifier.STRICTFP);

    thrown.expect(NullPointerException.class);
    thrown.expectMessage("Mapping not found for modifier null");
    kindMaps.getModifier(null);
  }

