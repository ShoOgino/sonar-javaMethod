  @Test
  public void class_init_declaration() {
    AstNode astNode = p.parse("class T { { ; ; } }");
    BlockTree tree = (BlockTree) ((ClassTree) ((CompilationUnitTree) astNode).types().get(0)).members().get(0);
    assertThat(tree.is(Tree.Kind.INITIALIZER)).isTrue();
    assertThat(tree.body()).hasSize(2);
    assertThat(tree.openBraceToken().text()).isEqualTo("{");
    assertThat(tree.closeBraceToken().text()).isEqualTo("}");

    astNode = p.parse("class T { static { ; ; } }");
    tree = (BlockTree) ((ClassTree) ((CompilationUnitTree) astNode).types().get(0)).members().get(0);
    assertThat(tree.is(Tree.Kind.STATIC_INITIALIZER)).isTrue();
    StaticInitializerTree staticInitializerTree = (StaticInitializerTree) tree;
    assertThat(staticInitializerTree.body()).hasSize(2);
    assertThat(staticInitializerTree.staticKeyword().text()).isEqualTo("static");
    assertThat(staticInitializerTree.openBraceToken().text()).isEqualTo("{");
    assertThat(staticInitializerTree.closeBraceToken().text()).isEqualTo("}");
  }

