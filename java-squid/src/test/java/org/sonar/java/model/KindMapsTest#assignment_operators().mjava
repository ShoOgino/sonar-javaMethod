  @Test
  public void assignment_operators() {
    assertThat(kindMaps.getAssignmentOperator(JavaPunctuator.EQU)).isSameAs(Tree.Kind.ASSIGNMENT);
    assertThat(kindMaps.getAssignmentOperator(JavaPunctuator.STAREQU)).isSameAs(Tree.Kind.MULTIPLY_ASSIGNMENT);
    assertThat(kindMaps.getAssignmentOperator(JavaPunctuator.DIVEQU)).isSameAs(Tree.Kind.DIVIDE_ASSIGNMENT);
    assertThat(kindMaps.getAssignmentOperator(JavaPunctuator.MODEQU)).isSameAs(Tree.Kind.REMAINDER_ASSIGNMENT);
    assertThat(kindMaps.getAssignmentOperator(JavaPunctuator.PLUSEQU)).isSameAs(Tree.Kind.PLUS_ASSIGNMENT);
    assertThat(kindMaps.getAssignmentOperator(JavaPunctuator.MINUSEQU)).isSameAs(Tree.Kind.MINUS_ASSIGNMENT);
    assertThat(kindMaps.getAssignmentOperator(JavaPunctuator.SLEQU)).isSameAs(Tree.Kind.LEFT_SHIFT_ASSIGNMENT);
    assertThat(kindMaps.getAssignmentOperator(JavaPunctuator.SREQU)).isSameAs(Tree.Kind.RIGHT_SHIFT_ASSIGNMENT);
    assertThat(kindMaps.getAssignmentOperator(JavaPunctuator.BSREQU)).isSameAs(Tree.Kind.UNSIGNED_RIGHT_SHIFT_ASSIGNMENT);
    assertThat(kindMaps.getAssignmentOperator(JavaPunctuator.ANDEQU)).isSameAs(Tree.Kind.AND_ASSIGNMENT);
    assertThat(kindMaps.getAssignmentOperator(JavaPunctuator.HATEQU)).isSameAs(Tree.Kind.XOR_ASSIGNMENT);
    assertThat(kindMaps.getAssignmentOperator(JavaPunctuator.OREQU)).isSameAs(Tree.Kind.OR_ASSIGNMENT);

    thrown.expect(NullPointerException.class);
    thrown.expectMessage("Mapping not found for assignment operator null");
    kindMaps.getAssignmentOperator(null);
  }

