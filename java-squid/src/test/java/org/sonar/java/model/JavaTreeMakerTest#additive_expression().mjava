  /**
   * 15.18. Additive Operators
   */
  @Test
  public void additive_expression() {
    AstNode astNode = p.parse("class T { int m() { return 1 + 2 - 3; } }").getFirstDescendant(JavaGrammar.ADDITIVE_EXPRESSION);
    BinaryExpressionTree tree = (BinaryExpressionTree) maker.expression(astNode);
    assertThat(tree.leftOperand()).isNotNull();
    assertThat(tree.is(Tree.Kind.PLUS)).isTrue();
    assertThat(tree.rightOperand()).isNotNull();
    tree = (BinaryExpressionTree) tree.rightOperand();
    assertThat(tree.leftOperand()).isNotNull();
    assertThat(tree.is(Tree.Kind.MINUS)).isTrue();
    assertThat(tree.rightOperand()).isNotNull();
  }

