  @Test
  public void enum_constant() {
    AstNode astNode = p.parse("enum T { C1, C2(2) { }; }");
    List<Tree> declarations = ((ClassTree) ((CompilationUnitTree) astNode).types().get(0)).members();
    assertThat(declarations).hasSize(2);

    EnumConstantTree tree = (EnumConstantTree) declarations.get(0);
    assertThat(tree.is(Tree.Kind.ENUM_CONSTANT)).isTrue();
    assertThat(tree.simpleName().name()).isEqualTo("C1");
    NewClassTree newClassTree = (NewClassTree) tree.initializer();
    assertThat(newClassTree.openParenToken()).isNull();
    assertThat(newClassTree.arguments()).isEmpty();
    assertThat(newClassTree.closeParenToken()).isNull();
    assertThat(newClassTree.classBody()).isNull();

    tree = (EnumConstantTree) declarations.get(1);
    assertThat(tree.is(Tree.Kind.ENUM_CONSTANT)).isTrue();
    assertThat(tree.simpleName().name()).isEqualTo("C2");
    newClassTree = (NewClassTree) tree.initializer();
    assertThat(newClassTree.openParenToken()).isNotNull();
    assertThat(newClassTree.arguments()).hasSize(1);
    assertThat(newClassTree.closeParenToken()).isNotNull();
    assertThat(newClassTree.classBody()).isNotNull();
    assertThat(newClassTree.classBody().openBraceToken().text()).isEqualTo("{");

  }

