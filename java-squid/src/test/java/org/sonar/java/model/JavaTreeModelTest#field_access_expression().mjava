  /**
   * 15.11. Field Access Expressions
   */
  @Test
  public void field_access_expression() {
    MemberSelectExpressionTree tree;

    // TODO greedily consumed by QUALIFIED_IDENTIFIER?:
    // AstNode astNode = p.parse("class T { int m() { return primary.identifier; } }").getFirstDescendant(JavaGrammar.EXPRESSION);
    // MemberSelectExpressionTree tree = (MemberSelectExpressionTree) maker.makeFrom(astNode);
    // assertThat(tree.expression()).isNotNull();
    // assertThat(tree.identifier()).isNotNull();

    tree = (MemberSelectExpressionTree) p.parse("class T { int m() { return super.identifier; } }").getFirstDescendant(Kind.MEMBER_SELECT);
    assertThat(tree.is(Tree.Kind.MEMBER_SELECT)).isTrue();
    assertThat(tree.expression()).isNotNull();
    assertThat(tree.identifier()).isNotNull();
    assertThat(tree.operatorToken()).isNotNull();

    tree = (MemberSelectExpressionTree) p.parse("class T { int m() { return ClassName.super.identifier; } }").getFirstDescendant(Kind.MEMBER_SELECT);
    assertThat(tree.is(Tree.Kind.MEMBER_SELECT)).isTrue();
    assertThat(tree.expression()).isNotNull();
    assertThat(tree.identifier()).isNotNull();
    assertThat(tree.operatorToken()).isNotNull();
  }

