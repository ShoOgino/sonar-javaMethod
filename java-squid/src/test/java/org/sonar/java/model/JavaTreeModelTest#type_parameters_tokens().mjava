  @Test
  public void type_parameters_tokens() {
    ParameterizedTypeTree tree = (ParameterizedTypeTree) firstType("class Foo<E> extends List<E> {}").superClass();
    assertThat(tree).isNotNull();
    assertThatChildrenIteratorHasSize(tree, 2);
    TypeArguments typeArguments = tree.typeArguments();
    assertThat(typeArguments).isNotNull();
    assertThat(typeArguments).hasSize(1);
    assertThat(typeArguments.separators()).isEmpty();
    assertThat(typeArguments.openBracketToken()).isNotNull();
    assertThat(typeArguments.closeBracketToken()).isNotNull();
    assertThatChildrenIteratorHasSize(typeArguments, 3);

    tree = (ParameterizedTypeTree) firstType("class Mop<K,V> implements Map<K,V> {}").superInterfaces().get(0);
    assertThat(tree).isNotNull();
    assertThatChildrenIteratorHasSize(tree, 2);
    typeArguments = tree.typeArguments();
    assertThat(typeArguments).isNotNull();
    assertThat(typeArguments).hasSize(2);
    assertThat(typeArguments.separators()).hasSize(1);
    assertThat(typeArguments.openBracketToken()).isNotNull();
    assertThat(typeArguments.closeBracketToken()).isNotNull();
    assertThatChildrenIteratorHasSize(typeArguments, 5);
  }

