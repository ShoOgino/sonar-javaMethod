  @Test
  public void class_declaration() {
    AstNode astNode = p.parse("public class T<U> extends C implements I1, I2 { }");
    ClassTree tree = (ClassTree) ((CompilationUnitTree) astNode).types().get(0);
    assertThat(tree.is(Tree.Kind.CLASS)).isTrue();
    assertThat(tree.modifiers().modifiers()).hasSize(1);
    assertThat(tree.simpleName().name()).isEqualTo("T");
    assertThat(tree.typeParameters()).isNotEmpty();
    assertThat(tree.openBraceToken().text()).isEqualTo("{");
    assertThat(tree.superClass()).isNotNull();
    assertThat(tree.superInterfaces()).hasSize(2);
    assertThat(tree.closeBraceToken().text()).isEqualTo("}");

    astNode = p.parse("public class T { }");
    assertThat(tree.is(Tree.Kind.CLASS)).isTrue();
    tree = (ClassTree) ((CompilationUnitTree) astNode).types().get(0);
    assertThat(tree.modifiers().modifiers()).hasSize(1);
    assertThat(tree.simpleName().name()).isEqualTo("T");
    assertThat(tree.typeParameters()).isEmpty();
    assertThat(tree.superClass()).isNull();
    assertThat(tree.superInterfaces()).isEmpty();

    astNode = p.parse("@Deprecated class T { }");
    assertThat(tree.is(Tree.Kind.CLASS)).isTrue();
    tree = (ClassTree) ((CompilationUnitTree) astNode).types().get(0);
    assertThat(tree.modifiers().annotations()).hasSize(1);
  }

