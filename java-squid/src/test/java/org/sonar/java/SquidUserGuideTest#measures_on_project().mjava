  @Test
  public void measures_on_project() throws Exception {
    ArgumentCaptor<Measure> captor = ArgumentCaptor.forClass(Measure.class);
    ArgumentCaptor<org.sonar.api.resources.File> files = ArgumentCaptor.forClass(org.sonar.api.resources.File.class);
    verify(context, atLeastOnce()).saveMeasure(files.capture(), captor.capture());
    Map<String, Double> metrics = new HashMap<String, Double>();
    for (Measure measure : captor.getAllValues()) {
      if(measure.getValue() != null ){
        if(metrics.get(measure.getMetricKey())==null) {
          metrics.put(measure.getMetricKey(), measure.getValue());
        } else {
          metrics.put(measure.getMetricKey(), metrics.get(measure.getMetricKey()) + measure.getValue());
        }
      }
    }

    assertThat(metrics.get("classes").intValue()).isEqualTo(412);
    assertThat(metrics.get("functions").intValue()).isEqualTo(3693);
    assertThat(metrics.get("lines").intValue()).isEqualTo(64125);
    assertThat(metrics.get("ncloc").intValue()).isEqualTo(26323);
    assertThat(metrics.get("statements").intValue()).isEqualTo(12047);
    assertThat(metrics.get("complexity").intValue()).isEqualTo(8475 - 80 /* SONAR-3793 */- 2 /* SONAR-3794 */);
    assertThat(metrics.get("comment_lines").intValue()).isEqualTo(17908);
    assertThat(metrics.get("public_api").intValue()).isEqualTo(3221);
    double density = 1.0;
    if (metrics.get("public_api").intValue() != 0) {
      density = (metrics.get("public_api") - metrics.get("public_undocumented_api")) / metrics.get("public_api");
    }
    assertThat(density).isEqualTo(0.64, Delta.delta(0.01));
  }

