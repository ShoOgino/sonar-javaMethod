  @Test
  public void method_start_lines_mapping() {
    JavaFilesCache javaFilesCache = new JavaFilesCache();
    JavaAstScanner.scanSingleFile(new File("src/test/java/org/sonar/java/JavaFilesCacheTest.java"), new VisitorsBridge(javaFilesCache));
    assertThat(javaFilesCache.methodStartLines.keySet()).hasSize(5);
    assertThat(javaFilesCache.methodStartLines.keySet()).contains("org/sonar/java/JavaFilesCacheTest$A$I#foo()V");
    assertThat(javaFilesCache.methodStartLines.keySet()).contains("org/sonar/java/JavaFilesCacheTest$A$1B$1#foo()V");
    assertThat(javaFilesCache.methodStartLines.keySet()).contains("org/sonar/java/JavaFilesCacheTest#method_start_lines_mapping()V");
    assertThat(javaFilesCache.methodStartLines.keySet()).contains("org/sonar/java/JavaFilesCacheTest$A#method()V");
    assertThat(javaFilesCache.methodStartLines.keySet()).contains("org/sonar/java/JavaFilesCacheTest#resource_file_mapping()V");
    assertThat(javaFilesCache.suppressWarningLines.keySet()).hasSize(13);
    for (Integer line : Lists.newArrayList(68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83)) {
      assertThat(javaFilesCache.suppressWarningLines.get(line)).contains("all");
    }
    for (Integer line : Lists.newArrayList(77, 78, 79, 80, 81)) {
      assertThat(javaFilesCache.suppressWarningLines.get(line)).contains("foo", "bar");
    }
  }

