  @Test
  public void test() throws Exception {
    Appender mockAppender = mock(Appender.class);
    Logger rootLogger = (Logger) LoggerFactory.getLogger(Logger.ROOT_LOGGER_NAME);
    rootLogger.addAppender(mockAppender);
    rootLogger.setLevel(Level.ALL);

    ProgressReport report = new ProgressReport(ProgressReport.class.getName(), PERIOD);
    report.start("foo start");
    report.message("progress");
    Thread.sleep(PERIOD * 2);
    report.stop("foo stop");
    Thread.sleep(PERIOD * 2);

    ArgumentCaptor<ILoggingEvent> captor = ArgumentCaptor.forClass(ILoggingEvent.class);
    verify(mockAppender, atLeast(2)).doAppend(captor.capture());

    List<ILoggingEvent> events = captor.getAllValues();
    assertThat(events.size()).isGreaterThanOrEqualTo(3);
    ILoggingEvent event = events.get(0);
    assertThat(event.getFormattedMessage()).isEqualTo("foo start");
    assertThat(event.getLevel()).isEqualTo(Level.INFO);

    ImmutableList.Builder<String> messagesBuilder = ImmutableList.builder();
    for (int i = 1; i < events.size(); i++) {
      event = events.get(i);
      messagesBuilder.add(event.getFormattedMessage());
      assertThat(event.getLevel()).isEqualTo(Level.INFO);
    }
    List<String> messages = messagesBuilder.build();

    assertThat(messages).containsOnly("progress", "foo stop");
    assertThat(messages).contains("foo stop");
  }

