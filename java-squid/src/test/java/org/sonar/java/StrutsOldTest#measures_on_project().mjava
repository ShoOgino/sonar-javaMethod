  @Test
  public void measures_on_project() throws Exception {
    assertThat(project.getInt(Metric.PACKAGES)).isEqualTo(15);
    assertThat(project.getInt(Metric.FILES)).isEqualTo(134);
    assertThat(project.getInt(Metric.ANONYMOUS_INNER_CLASSES)).isEqualTo(4);
    assertThat(project.getInt(Metric.CLASSES)).isEqualTo(146);
    assertThat(project.getInt(Metric.INTERFACES)).isEqualTo(8);
    assertThat(project.getInt(Metric.ABSTRACT_CLASSES)).isEqualTo(23);
    assertThat(project.getInt(Metric.METHODS) + project.getInt(Metric.ACCESSORS)).isEqualTo(1485);
    assertThat(project.getInt(Metric.METHODS)).isEqualTo(1437);
    assertThat(project.getInt(Metric.ACCESSORS)).isEqualTo(48);
    assertThat(project.getInt(Metric.LINES)).isEqualTo(32744);
    assertThat(project.getInt(Metric.LINES_OF_CODE)).isEqualTo(14007);
    assertThat(project.getInt(Metric.BLANK_LINES)).isEqualTo(4534);
    assertThat(project.getInt(Metric.STATEMENTS) + STATEMENTS_CORRECTION).isEqualTo(6895);
    assertThat(project.getInt(Metric.COMPLEXITY)).isEqualTo(3957);
    assertThat(project.getInt(Metric.BRANCHES)).isEqualTo(2519);
    assertThat(project.getInt(Metric.COMMENT_LINES)).isEqualTo(9573);
    assertThat(project.getInt(Metric.COMMENT_BLANK_LINES)).isEqualTo(4682);
    assertThat(project.getInt(Metric.COMMENT_LINES_WITHOUT_HEADER)).isEqualTo(7608);
    assertThat(project.getDouble(Metric.COMMENT_LINES_DENSITY)).isEqualTo(0.35, Delta.delta(0.01));
    assertThat(project.getInt(Metric.PUBLIC_API)).isEqualTo(1348);
    assertThat(project.getInt(Metric.PUBLIC_DOC_API)).isEqualTo(842);
    assertThat(project.getDouble(Metric.PUBLIC_DOCUMENTED_API_DENSITY)).isEqualTo(0.62, Delta.delta(0.01));
  }

