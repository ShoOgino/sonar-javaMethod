  @Test
  public void ok() {
    // Decimal
    assertThat(g.integerLiteral)
        .matches("0")
        .matches("543");
    assertThat(g.longLiteral)
        .matches("543l")
        .matches("543L");

    // Hexadecimal
    assertThat(g.integerLiteral)
        .matches("0xFF");
    assertThat(g.longLiteral)
        .matches("0xFFl")
        .matches("0xFFL");

    assertThat(g.integerLiteral)
        .matches("0XFF");
    assertThat(g.longLiteral)
        .matches("0XFFl")
        .matches("0XFFL");

    // Octal
    assertThat(g.integerLiteral)
        .matches("077");
    assertThat(g.longLiteral)
        .matches("077l")
        .matches("077L");

    // Binary (new in Java 7)
    assertThat(g.integerLiteral)
        .matches("0b1010");
    assertThat(g.longLiteral)
        .matches("0b1010l")
        .matches("0b1010L");

    assertThat(g.integerLiteral)
        .matches("0B1010");
    assertThat(g.longLiteral)
        .matches("0B1010l")
        .matches("0B1010L");

    // Underscore (new in Java 7)
    assertThat(g.integerLiteral)
        .matches("1_000_000")
        .matches("5_______2");

    assertThat(g.longLiteral)
        .matches("0x7fff_ffff_ffff_ffffL");
  }

