  @Test
  public void ok() {
    g.block.mock();
    g.assertStatement.mock();
    g.ifStatement.mock();
    g.forStatement.mock();
    g.whileStatement.mock();
    g.doStatement.mock();
    g.tryStatement.mock();
    g.switchStatement.mock();
    g.synchronizedStatement.mock();
    g.returnStatement.mock();
    g.throwStatement.mock();
    g.breakStatement.mock();
    g.continueStatement.mock();
    g.labeledStatement.mock();
    g.expressionStatement.mock();
    g.emptyStatement.mock();

    assertThat(p, parse("block"));
    assertThat(p, parse("emptyStatement"));
    assertThat(p, parse("labeledStatement"));
    assertThat(p, parse("expressionStatement"));
    assertThat(p, parse("ifStatement"));
    assertThat(p, parse("assertStatement"));
    assertThat(p, parse("switchStatement"));
    assertThat(p, parse("whileStatement"));
    assertThat(p, parse("doStatement"));
    assertThat(p, parse("forStatement"));
    assertThat(p, parse("breakStatement"));
    assertThat(p, parse("continueStatement"));
    assertThat(p, parse("returnStatement"));
    assertThat(p, parse("throwStatement"));
    assertThat(p, parse("synchronizedStatement"));
    assertThat(p, parse("tryStatement"));
  }

