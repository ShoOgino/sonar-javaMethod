  @Test
  public void ok() {
    g.block.mock();
    g.assertStatement.mock();
    g.ifStatement.mock();
    g.forStatement.mock();
    g.whileStatement.mock();
    g.doStatement.mock();
    g.tryStatement.mock();
    g.switchStatement.mock();
    g.synchronizedStatement.mock();
    g.returnStatement.mock();
    g.throwStatement.mock();
    g.breakStatement.mock();
    g.continueStatement.mock();
    g.labeledStatement.mock();
    g.expressionStatement.mock();
    g.emptyStatement.mock();

    assertThat(g.statement)
        .matches("block")
        .matches("emptyStatement")
        .matches("labeledStatement")
        .matches("expressionStatement")
        .matches("ifStatement")
        .matches("assertStatement")
        .matches("switchStatement")
        .matches("whileStatement")
        .matches("doStatement")
        .matches("forStatement")
        .matches("breakStatement")
        .matches("continueStatement")
        .matches("returnStatement")
        .matches("throwStatement")
        .matches("synchronizedStatement")
        .matches("tryStatement");
  }

