  public Symbol reference(int line, int column) {
    // In SSLR column starts at 0, but here we want consistency with IDE, so we start from 1:
    column -= 1;
    for (Symbol symbol : semanticModel.getSymbols().values()) {
      for (AstNode usage : semanticModel.getUsages(symbol)) {
        Token token = usage.getToken();
        if (token.getLine() == line && token.getColumn() == column) {
          return symbol;
        }
      }
    }
    throw new IllegalArgumentException("Reference not found");
  }

