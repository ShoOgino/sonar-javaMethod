  @Test
  public void test_isInheritedIn() {
    JavaSymbol.PackageJavaSymbol packageSymbol = new JavaSymbol.PackageJavaSymbol("package", null);
    JavaSymbol.TypeJavaSymbol clazz = new JavaSymbol.TypeJavaSymbol(0, "class", packageSymbol);

    // public symbol is always inherited
    JavaSymbol symbol = new JavaSymbol(0, Flags.PUBLIC, "name", null);
    assertThat(resolve.isInheritedIn(symbol, clazz)).isTrue();

    // private symbol is inherited only if it's owned by class
    symbol = new JavaSymbol(0, Flags.PRIVATE, "name", null);
    assertThat(resolve.isInheritedIn(symbol, clazz)).isFalse();

    symbol = new JavaSymbol(0, Flags.PRIVATE, "name", clazz);
    assertThat(resolve.isInheritedIn(symbol, clazz)).isTrue();

    // protected symbol is always inherited
    symbol = new JavaSymbol(0, Flags.PROTECTED, "name", null);
    assertThat(resolve.isInheritedIn(symbol, clazz)).isTrue();

    // package local symbol is inherited only if TODO...
    symbol = new JavaSymbol(0, 0, "name", clazz);
    assertThat(resolve.isInheritedIn(symbol, clazz)).isTrue();

    JavaSymbol.PackageJavaSymbol anotherPackageSymbol = new JavaSymbol.PackageJavaSymbol("package", null);
    symbol = new JavaSymbol(0, 0, "name", anotherPackageSymbol);
    assertThat(resolve.isInheritedIn(symbol, clazz)).isFalse();
  }

