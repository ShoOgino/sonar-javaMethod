  @Test
  public void array_class() {
    assertThat(symbols.arrayClass.owner()).isSameAs(symbols.noSymbol);
    assertThat(symbols.arrayClass.name).isEqualTo("Array");
    assertThat(symbols.arrayClass.flags()).isEqualTo(Flags.PUBLIC);

    assertThat(symbols.arrayClass.members.lookup("length")).hasSize(1);
    Symbol.VariableSymbol lengthSymbol = (Symbol.VariableSymbol) symbols.arrayClass.members.lookup("length").get(0);
    assertThat(lengthSymbol.name).isEqualTo("length");
    assertThat(lengthSymbol.owner()).isSameAs(symbols.arrayClass);
    assertThat(lengthSymbol.flags()).isEqualTo(Flags.PUBLIC | Flags.FINAL);
    assertThat(lengthSymbol.type).isSameAs(symbols.intType);

    Type.ClassType arrayClassType = ((Type.ClassType) symbols.arrayClass.type);
    assertThat(arrayClassType.supertype).isSameAs(symbols.objectType);
    assertThat(arrayClassType.interfaces).containsOnly(symbols.cloneableType, symbols.serializableType);
  }

