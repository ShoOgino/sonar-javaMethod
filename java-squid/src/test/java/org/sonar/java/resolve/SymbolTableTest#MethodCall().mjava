  @Test
  public void MethodCall() {
    Result result = Result.createFor("references/MethodCall");
    assertThat(result.reference(10, 5)).isSameAs(result.symbol("target"));
    assertThat(result.reference(11, 5)).isSameAs(result.symbol("foo"));
    assertThat(result.reference(30, 5)).isSameAs(result.symbol("fun", 22));
    assertThat(result.reference(42, 5)).isSameAs(result.symbol("bar", 35));
    assertThat(result.reference(52, 5)).isSameAs(result.symbol("bar", 35));
    assertThat(result.reference(61, 5)).isSameAs(result.symbol("bar", 57));
    assertThat(result.reference(67, 5)).isSameAs(result.symbol("bar", 35));
    assertThat(result.reference(79, 5)).isSameAs(result.symbol("defaultMethod", 72));
    assertThat(result.reference(88, 7)).isSameAs(result.symbol("func", 84));
    assertThat(result.reference(95, 5)).isSameAs(result.symbol("num", 94));
    assertThat(result.reference(102, 5)).isSameAs(result.symbol("varargs", 100));
    assertThat(result.reference(103, 5)).isSameAs(result.symbol("varargs", 100));
    assertThat(result.reference(104, 5)).isSameAs(result.symbol("varargs", 100));
    assertThat(result.reference(105, 5)).isSameAs(result.symbol("varargs", 100));
    assertThat(result.reference(106, 5)).isSameAs(result.symbol("varargs", 111));
    assertThat(result.reference(121, 5)).isSameAs(result.symbol("fun1", 115));
    assertThat(result.reference(122, 5)).isSameAs(result.symbol("fun2", 116));
    assertThat(result.reference(123, 5)).isSameAs(result.symbol("fun3", 117));
    assertThat(result.reference(124, 5)).isSameAs(result.symbol("fun4", 118));
    assertThat(result.reference(125, 5)).isSameAs(result.symbol("fun5", 119));
    assertThat(result.reference(132, 5)).isSameAs(result.symbol("fun", 131));
    assertThat(result.reference(134, 5)).isSameAs(result.symbol("fun", 131));

    assertThat(result.reference(143, 5)).isSameAs(result.symbol("process", 140));
    assertThat(result.reference(144, 5)).isSameAs(result.symbol("process", 141));

    assertThat(result.reference(149, 5)).isSameAs(result.symbol("process2", 147));
    assertThat(result.reference(150, 5)).isSameAs(result.symbol("process2", 146));

    assertThat(result.reference(156, 5)).isSameAs(result.symbol("process3", 153));
    assertThat(result.reference(157, 5)).isSameAs(result.symbol("process3", 154));

    assertThat(result.reference(169, 5)).isSameAs(result.symbol("varargs", 162));
    assertThat(result.reference(170, 5)).isSameAs(result.symbol("varargs", 165));

    assertThat(result.reference(180, 5)).isSameAs(result.symbol("varargs2", 173));
    assertThat(result.reference(181, 5)).isSameAs(result.symbol("varargs2", 176));

    assertThat(result.reference(204, 63, "<init>")).isSameAs(result.symbol("<init>", 188));
    assertThat(result.reference(205, 24)).isSameAs(result.symbol("genericMethod", 191));
    assertThat(result.reference(206, 77, "<init>")).isSameAs(result.symbol("<init>", 196));
    assertThat(result.reference(207, 31)).isSameAs(result.symbol("complexGenericMethod", 199));
    assertThat(result.reference(208, 40, "<init>")).isSameAs(result.symbol("<init>", 196));
    assertThat(result.reference(209, 43, "<init>")).isSameAs(result.symbol("<init>", 196));
    assertThat(result.reference(210, 64, "<init>")).isSameAs(result.symbol("<init>", 196));
  }

