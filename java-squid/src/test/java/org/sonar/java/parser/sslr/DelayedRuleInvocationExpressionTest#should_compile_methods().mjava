  @Test
  public void should_compile_methods() throws Exception {
    LexerlessGrammarBuilder b = spy(LexerlessGrammarBuilder.create());
    GrammarRuleKey ruleKey = mock(GrammarRuleKey.class);
    Method method = DelayedRuleInvocationExpressionTest.class.getDeclaredMethod("FOO");
    GrammarBuilderInterceptor grammarBuilderInterceptor = mock(GrammarBuilderInterceptor.class);
    when(grammarBuilderInterceptor.ruleKeyForMethod(method)).thenReturn(ruleKey);

    DelayedRuleInvocationExpression expression = new DelayedRuleInvocationExpression(b, grammarBuilderInterceptor, method);

    CompilationHandler compiler = mock(CompilationHandler.class);
    expression.compile(compiler);

    verify(b).rule(ruleKey);

    ArgumentCaptor<ParsingExpression> ruleExpression = ArgumentCaptor.forClass(ParsingExpression.class);
    verify(compiler).compile(ruleExpression.capture());
    assertThat(ruleExpression.getAllValues()).hasSize(1);
    assertThat(((MutableParsingRule) ruleExpression.getValue()).getRuleKey()).isSameAs(ruleKey);
  }

