  /**
   * Utility method to quickly get metric out of a file.
   */
  private void checkMetric(boolean analyseAccessors, File baseDir, String filename, String metric, double expectedValue) {
    Measurer measurer = new Measurer(sonarProject, context, analyseAccessors);
    JavaConfiguration conf = new JavaConfiguration(Charsets.UTF_8);
    conf.setAnalyzePropertyAccessors(analyseAccessors);
    squid = new JavaSquid(conf, null, measurer, new CodeVisitor[0]);
    InputFile sourceFile = InputFileUtils.create(baseDir, new File(baseDir, filename));
    squid.scan(Collections.singleton(sourceFile), Collections.<InputFile>emptyList(), Collections.<File>emptyList());
    ArgumentCaptor<Measure> captor = ArgumentCaptor.forClass(Measure.class);
    ArgumentCaptor<org.sonar.api.resources.File> sonarFilescaptor = ArgumentCaptor.forClass(org.sonar.api.resources.File.class);
    //-1 for metrics in case we don't analyse Accessors.
    verify(context, atLeast(NB_OF_METRICS-1)).saveMeasure(sonarFilescaptor.capture(), captor.capture());
    int checkedMetrics = 0;
    for (Measure measure : captor.getAllValues()) {
      if (metric.equals(measure.getMetricKey())) {
        assertThat(measure.getValue()).isEqualTo(expectedValue);
        checkedMetrics++;
      }
    }
    assertThat(checkedMetrics).isEqualTo(1);
  }

