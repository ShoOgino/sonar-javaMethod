  @BeforeClass
  public static void setup() {
    JavaConfiguration conf = new JavaConfiguration(Charset.forName("UTF-8"));
    JavaResourceLocator javaResourceLocator = new JavaResourceLocator() {
      public Map<String, String> sourceFileCache = Maps.newHashMap();
      @Override
      public Resource findResourceByClassName(String className) {
        return null;
      }

      @Override
      public String findSourceFileKeyByClassName(String className) {
        String name = className.replace('.', '/');
        return sourceFileCache.get(name);
      }

      @Override
      public Collection<String> classKeys() {
        return sourceFileCache.keySet();
      }

      @Override
      public Collection<File> classFilesToAnalyze() {
        return Collections.emptyList();
      }

      @Override
      public Integer getMethodStartLine(String fullyQualifiedMethodName) {
        return null;
      }

      @Override
      public void scanFile(JavaFileScannerContext context) {
        JavaFilesCache javaFilesCache = new JavaFilesCache();
        javaFilesCache.scanFile(context);
        for (String key : javaFilesCache.getResourcesCache().keySet()){
          sourceFileCache.put(key, context.getFileKey());
        }
      }
    };
    JavaSquid squid = new JavaSquid(conf, javaResourceLocator);
    squid.scanDirectories(
        Collections.singleton(new File("src/test/files/bytecode/src")),
        Collections.singleton(new File("src/test/files/bytecode/bin")));
    index = squid.getIndex();
    graph = squid.getGraph();

    tag = index.search("tags/Tag");
    tagFile = index.search("tags/Tag.java");
    file = index.search("tags/File");
    line = index.search("tags/Line");
    tagName = index.search("tags/TagName");
    tagException = index.search("tags/TagException");
    language = index.search("tags/Language");
    sourceFile = index.search("tags/SourceFile");
    todo = index.search("tags/impl/Todo");
    fixme = index.search("tags/impl/FixMe");
    pacTag = index.search("tags");
    pacImpl = index.search("tags/impl");
  }

