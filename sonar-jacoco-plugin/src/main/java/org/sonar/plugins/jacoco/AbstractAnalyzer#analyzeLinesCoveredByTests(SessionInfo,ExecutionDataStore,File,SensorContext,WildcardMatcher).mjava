  private void analyzeLinesCoveredByTests(SessionInfo sessionInfo, ExecutionDataStore executionDataStore, File buildOutputDir, SensorContext context, WildcardMatcher excludes) {
    String id = sessionInfo.getId();
    if (CharMatcher.anyOf(".").countIn(id) < 2 || id.startsWith("dhcp")) {
      // FIXME
      // As we do not have a convention for the id, we use this hack to detect if the id is a test or not
    } else {
      String testName = Iterables.getLast(Splitter.on(".").split(id));
      String testFileKey = StringUtils.removeEnd(id, "." + testName);
      Resource testFile = new JavaFile(testFileKey, true);

      CoverageBuilder coverageBuilder = analyze2(executionDataStore, buildOutputDir);
      for (ISourceFileCoverage coverage : coverageBuilder.getSourceFiles()) {
        JavaFile resource = getResource(coverage, context);
        if (resource != null && !isExcluded(coverage, excludes)) {
          CoverageMeasuresBuilder builder = analyzeFile(resource, coverage);
          List<Integer> linesCovered = getLinesCover(builder);
          if (!linesCovered.isEmpty()) {
            addCoverage(resource, testFile, testName, linesCovered);
          }
        }
      }
    }
  }

