  @Test
  public void force_coverage_to_zero_when_no_report_lts() {
    context.setRuntime(SonarRuntimeImpl.forSonarQube(SQ_5_6, SonarQubeSide.SCANNER));
    Map<String, String> props = ImmutableMap.of(JacocoConfiguration.REPORT_MISSING_FORCE_ZERO, "true", REPORT_PATH_PROPERTY, "foo");
    DefaultFileSystem fileSystem = new DefaultFileSystem((File)null);
    fileSystem.add(new TestInputFileBuilder("","foo").setLanguage("java").build());
    JacocoConfiguration configuration = new JacocoConfiguration(new MapSettings().addProperties(props));
    JaCoCoSensor sensor_force_coverage = new JaCoCoSensor(configuration, perspectives, fileSystem, pathResolver, javaResourceLocator, javaClasspath);
    outputDir = TestUtils.getResource("/org/sonar/plugins/jacoco/JaCoCoSensorTest/");
    DefaultInputFile resource = new TestInputFileBuilder("", "").setLines(25).build();
    when(javaResourceLocator.findResourceByClassName(anyString())).thenReturn(resource);
    when(javaClasspath.getBinaryDirs()).thenReturn(ImmutableList.of(outputDir));
    when(pathResolver.relativeFile(any(File.class), any(String.class))).thenReturn(new File("foo"));
    sensor_force_coverage.execute(context);
    int[] zeroHitlines = new int[] {6, 7, 8, 11, 15, 16, 18};
    for (int zeroHitline : zeroHitlines) {
      assertThat(context.lineHits(":", zeroHitline)).isEqualTo(0);
    }
  }

