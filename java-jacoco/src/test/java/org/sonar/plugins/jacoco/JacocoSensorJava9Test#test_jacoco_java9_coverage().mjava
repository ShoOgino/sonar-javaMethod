  @Test
  public void test_jacoco_java9_coverage() throws Exception {
    Path baseDir = Paths.get(getClass().getResource("/org/sonar/plugins/jacoco/JaCoCoJava9Test/").toURI());
    Files.copy(baseDir.resolve("Hello9.class.toCopy"), baseDir.resolve("Hello9.class"), StandardCopyOption.REPLACE_EXISTING);

    DefaultInputFile resource = new TestInputFileBuilder("", "").setLines(10).build();
    JavaResourceLocator javaResourceLocator = mock(JavaResourceLocator.class);
    when(javaResourceLocator.findResourceByClassName(anyString())).thenReturn(resource);

    JavaClasspath javaClasspath = mock(JavaClasspath.class);
    when(javaClasspath.getBinaryDirs()).thenReturn(Collections.singletonList(baseDir.toFile()));

    SensorContextTester context = SensorContextTester.create(baseDir);
    context.settings().setProperty(JacocoConfiguration.REPORT_PATHS_PROPERTY, "jacoco.exec");

    JaCoCoSensor sensor = new JaCoCoSensor(null, javaResourceLocator, javaClasspath);

    sensor.execute(context);
    assertThat(context.lineHits(resource.key(), 5)).isEqualTo(1);
  }

