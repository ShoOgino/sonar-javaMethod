  public static List<PropertyDefinition> getPropertyDefinitions(Version sonarQubeVersion) {
    String subCategory = "JaCoCo";
    ImmutableList.Builder<PropertyDefinition> properties = ImmutableList.builder();
    if(sonarQubeVersion.isGreaterThanOrEqual(SQ_6_2)) {
      properties.add(
        PropertyDefinition.builder(JacocoConfiguration.REPORT_PATHS_PROPERTY)
          .defaultValue(JacocoConfiguration.REPORT_PATHS_DEFAULT_VALUE)
          .category(JavaConstants.JAVA_CATEGORY)
          .subCategory(subCategory)
          .name("JaCoCo Reports")
          .description("Path to the JaCoCo report files containing coverage data by unit tests. The path may be absolute or relative to the project base directory.")
          .onQualifiers(Qualifiers.PROJECT, Qualifiers.MODULE)
          .build()
      );
    } else {
      properties.add(
        PropertyDefinition.builder(JacocoConfiguration.REPORT_PATH_PROPERTY)
          .defaultValue(JacocoConfiguration.REPORT_PATH_DEFAULT_VALUE)
          .category(JavaConstants.JAVA_CATEGORY)
          .subCategory(subCategory)
          .name("UT JaCoCo Report")
          .description("Path to the JaCoCo report file containing coverage data by unit tests. The path may be absolute or relative to the project base directory.")
          .onQualifiers(Qualifiers.PROJECT, Qualifiers.MODULE)
          .build(),
        PropertyDefinition.builder(JacocoConfiguration.IT_REPORT_PATH_PROPERTY)
          .defaultValue(JacocoConfiguration.IT_REPORT_PATH_DEFAULT_VALUE)
          .category(JavaConstants.JAVA_CATEGORY)
          .subCategory(subCategory)
          .name("IT JaCoCo Report")
          .description("Path to the JaCoCo report file containing coverage data by integration tests. The path may be absolute or relative to the project base directory.")
          .onQualifiers(Qualifiers.PROJECT, Qualifiers.MODULE)
          .build(),
        PropertyDefinition.builder(JacocoConfiguration.REPORT_MISSING_FORCE_ZERO)
          .defaultValue(Boolean.toString(JacocoConfiguration.REPORT_MISSING_FORCE_ZERO_DEFAULT_VALUE))
          .name("Force zero coverage")
          .category(JavaConstants.JAVA_CATEGORY)
          .subCategory(subCategory)
          .description("Force coverage to 0% if no JaCoCo reports are found during analysis.")
          .onQualifiers(Qualifiers.PROJECT, Qualifiers.MODULE)
          .type(PropertyType.BOOLEAN)
          .build()
      );
    }
    return properties.build();
  }

